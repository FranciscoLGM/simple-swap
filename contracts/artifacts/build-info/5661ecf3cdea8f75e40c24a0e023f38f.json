{
	"id": "5661ecf3cdea8f75e40c24a0e023f38f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/SimpleSwap_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(\n        address sender,\n        uint256 balance,\n        uint256 needed\n    );\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(\n        address spender,\n        uint256 allowance,\n        uint256 needed\n    );\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(\n        address sender,\n        uint256 balance,\n        uint256 needed,\n        uint256 tokenId\n    );\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value,\n        bool emitEvent\n    ) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(\n                    spender,\n                    currentAllowance,\n                    value\n                );\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n// File: @openzeppelin/contracts/interfaces/IERC1363.sol\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(\n        address from,\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value)\n        external\n        returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(\n        address spender,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(\n        address spender,\n        uint256 currentAllowance,\n        uint256 requestedDecrease\n    );\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeCall(token.transferFrom, (from, to, value))\n        );\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal returns (bool) {\n        return\n            _callOptionalReturnBool(\n                token,\n                abi.encodeCall(token.transfer, (to, value))\n            );\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal returns (bool) {\n        return\n            _callOptionalReturnBool(\n                token,\n                abi.encodeCall(token.transferFrom, (from, to, value))\n            );\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 requestedDecrease\n    ) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(\n                    spender,\n                    currentAllowance,\n                    requestedDecrease\n                );\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        bytes memory approvalCall = abi.encodeCall(\n            token.approve,\n            (spender, value)\n        );\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(\n                token,\n                abi.encodeCall(token.approve, (spender, 0))\n            );\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(\n        IERC1363 token,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(\n        IERC1363 token,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(\n                gas(),\n                token,\n                0,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0x20\n            )\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (\n            returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\n        ) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data)\n        private\n        returns (bool)\n    {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(\n                gas(),\n                token,\n                0,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0x20\n            )\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return\n            success &&\n            (\n                returnSize == 0\n                    ? address(token).code.length > 0\n                    : returnValue == 1\n            );\n    }\n}\n\n// File: contracts/interfaces/ISimpleSwap.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ISimpleSwap\n * @dev Interface for the SimpleSwap decentralized exchange contract\n * @notice Defines the core functionality for:\n * - Adding/removing liquidity from token pairs\n * - Swapping tokens with price calculations\n * - Querying token prices and swap amounts\n */\ninterface ISimpleSwap {\n    // ==============================================\n    //              LIQUIDITY FUNCTIONS\n    // ==============================================\n\n    /**\n     * @notice Adds liquidity to a token pair\n     * @dev Mints LP tokens representing pool share\n     * @param tokenA First token in pair\n     * @param tokenB Second token in pair\n     * @param amountADesired Desired amount of tokenA to deposit\n     * @param amountBDesired Desired amount of tokenB to deposit\n     * @param amountAMin Minimum acceptable amount of tokenA\n     * @param amountBMin Minimum acceptable amount of tokenB\n     * @param to Recipient of LP tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amountA Actual amount of tokenA deposited\n     * @return amountB Actual amount of tokenB deposited\n     * @return liquidity Amount of LP tokens minted\n     */\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        );\n\n    /**\n     * @notice Removes liquidity from a token pair\n     * @dev Burns LP tokens and returns underlying assets\n     * @param tokenA First token in pair\n     * @param tokenB Second token in pair\n     * @param liquidity Amount of LP tokens to burn\n     * @param amountAMin Minimum acceptable amount of tokenA\n     * @param amountBMin Minimum acceptable amount of tokenB\n     * @param to Recipient of withdrawn tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amountA Amount of tokenA withdrawn\n     * @return amountB Amount of tokenB withdrawn\n     */\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB);\n\n    // ==============================================\n    //                 SWAP FUNCTIONS\n    // ==============================================\n\n    /**\n     * @notice Swaps exact input tokens for output tokens\n     * @dev Uses constant product market maker formula\n     * @param amountIn Exact amount of input tokens\n     * @param amountOutMin Minimum acceptable output amount\n     * @param path Array with [inputToken, outputToken]\n     * @param to Recipient of output tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amounts Array containing [inputAmount, outputAmount]\n     */\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    // ==============================================\n    //                 VIEW FUNCTIONS\n    // ==============================================\n\n    /**\n     * @notice Gets price of tokenA in terms of tokenB\n     * @dev Price is calculated as reserveB/reserveA\n     * @param tokenA First token in pair\n     * @param tokenB Second token in pair\n     * @return price Price ratio with 18 decimals precision\n     */\n    function getPrice(address tokenA, address tokenB)\n        external\n        view\n        returns (uint256 price);\n\n    /**\n     * @notice Calculates output amount for given input\n     * @dev Uses formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\n     * @param amountIn Input token amount\n     * @param reserveIn Reserve of input token\n     * @param reserveOut Reserve of output token\n     * @return amountOut Expected output amount\n     */\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountOut);\n}\n\n// File: contracts/SimpleSwap.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title SimpleSwap\n * @dev Implements a basic Uniswap V2-style decentralized exchange with:\n * - Liquidity pool creation\n * - Token swapping functionality\n * - LP (Liquidity Provider) token issuance\n * @author Francisco López G.\n */\ncontract SimpleSwap is ERC20, ISimpleSwap {\n    using SafeERC20 for IERC20;\n\n    // ==============================================\n    //                   STRUCTS\n    // ==============================================\n\n    /**\n     * @dev Structure to store token pair reserves\n     * @param reserveA Reserve amount of first token\n     * @param reserveB Reserve amount of second token\n     */\n    struct Pool {\n        uint256 reserveA;\n        uint256 reserveB;\n    }\n\n    // ==============================================\n    //                STATE VARIABLES\n    // ==============================================\n\n    /**\n     * @notice Mapping of token pairs to their reserve balances\n     * @dev pools[token0][token1] stores reserves for sorted token pair\n     */\n    mapping(address => mapping(address => Pool)) public pools;\n\n    // ==============================================\n    //                   EVENTS\n    // ==============================================\n\n    /**\n     * @notice Emitted when liquidity is added to a pool\n     * @param provider Address providing the liquidity\n     * @param tokenA First token in pair\n     * @param tokenB Second token in pair\n     * @param amountA Amount of first token added\n     * @param amountB Amount of second token added\n     * @param liquidity Amount of LP tokens minted\n     */\n    event LiquidityAdded(\n        address indexed provider,\n        address indexed tokenA,\n        address indexed tokenB,\n        uint256 amountA,\n        uint256 amountB,\n        uint256 liquidity\n    );\n\n    /**\n     * @notice Emitted when liquidity is removed from a pool\n     * @param provider Address removing the liquidity\n     * @param tokenA First token in pair\n     * @param tokenB Second token in pair\n     * @param amountA Amount of first token withdrawn\n     * @param amountB Amount of second token withdrawn\n     * @param liquidity Amount of LP tokens burned\n     */\n    event LiquidityRemoved(\n        address indexed provider,\n        address indexed tokenA,\n        address indexed tokenB,\n        uint256 amountA,\n        uint256 amountB,\n        uint256 liquidity\n    );\n\n    /**\n     * @notice Emitted when a token swap occurs\n     * @param sender Address initiating the swap\n     * @param tokenIn Input token address\n     * @param tokenOut Output token address\n     * @param amountIn Amount of input tokens\n     * @param amountOut Amount of output tokens\n     */\n    event Swap(\n        address indexed sender,\n        address indexed tokenIn,\n        address indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    // ==============================================\n    //                 MODIFIERS\n    // ==============================================\n\n    /**\n     * @dev Ensures transaction is executed before deadline\n     * @param deadline Timestamp after which transaction should fail\n     */\n    modifier ensureDeadline(uint256 deadline) {\n        require(deadline >= block.timestamp, \"Deadline passed\");\n        _;\n    }\n\n    /**\n     * @dev Ensures token addresses are different\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     */\n    modifier validPair(address tokenA, address tokenB) {\n        require(tokenA != tokenB, \"Identical tokens\");\n        _;\n    }\n\n    // ==============================================\n    //              CONSTRUCTOR\n    // ==============================================\n\n    /**\n     * @dev Initializes contract with LP token name and symbol\n     */\n    constructor() ERC20(\"SimpleSwap LP\", \"SS-LP\") {}\n\n    // ==============================================\n    //              EXTERNAL FUNCTIONS\n    // ==============================================\n\n    /**\n     * @notice Adds liquidity to a token pair\n     * @dev For initial deposit, uses square root of token amount product\n     * @dev For subsequent deposits, maintains existing reserve ratio\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @param amountADesired Desired amount of first token to deposit\n     * @param amountBDesired Desired amount of second token to deposit\n     * @param amountAMin Minimum acceptable amount of first token\n     * @param amountBMin Minimum acceptable amount of second token\n     * @param to Address to receive LP tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amountA Actual amount of first token deposited\n     * @return amountB Actual amount of second token deposited\n     * @return liquidity Amount of LP tokens minted\n     */\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        override\n        ensureDeadline(deadline)\n        validPair(tokenA, tokenB)\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        )\n    {\n        // Validate input amounts first (require at top)\n        require(amountADesired > 0 && amountBDesired > 0, \"Invalid amounts\");\n        require(\n            amountADesired >= amountAMin && amountBDesired >= amountBMin,\n            \"Min not met\"\n        );\n\n        // Sort tokens to ensure consistent ordering\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\n        Pool storage pool = pools[token0][token1];\n\n        // Cache reserve values to minimize storage reads\n        uint256 reserveA = pool.reserveA;\n        uint256 reserveB = pool.reserveB;\n\n        if (reserveA == 0 && reserveB == 0) {\n            // Initial liquidity provision\n            (amountA, amountB) = (amountADesired, amountBDesired);\n            liquidity = _sqrt(amountA * amountB); // Geometric mean for initial LP tokens\n        } else {\n            // Subsequent liquidity provision - maintain ratio\n            (amountA, amountB) = _calculateOptimalDeposit(\n                amountADesired,\n                amountBDesired,\n                amountAMin,\n                amountBMin,\n                reserveA,\n                reserveB\n            );\n            liquidity = _calculateLiquidity(amountA, reserveA, totalSupply());\n        }\n\n        // Transfer tokens from user and mint LP tokens\n        _transferTokens(tokenA, tokenB, amountA, amountB);\n        _mint(to, liquidity);\n\n        // Single state variable update\n        _updateReserves(token0, token1, reserveA + amountA, reserveB + amountB);\n\n        emit LiquidityAdded(\n            msg.sender,\n            tokenA,\n            tokenB,\n            amountA,\n            amountB,\n            liquidity\n        );\n    }\n\n    /**\n     * @notice Removes liquidity from a token pair\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @param liquidity Amount of LP tokens to burn\n     * @param amountAMin Minimum acceptable amount of first token to receive\n     * @param amountBMin Minimum acceptable amount of second token to receive\n     * @param to Address to receive withdrawn tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amountA Amount of first token withdrawn\n     * @return amountB Amount of second token withdrawn\n     */\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        override\n        ensureDeadline(deadline)\n        validPair(tokenA, tokenB)\n        returns (uint256 amountA, uint256 amountB)\n    {\n        require(liquidity > 0, \"Invalid liquidity\");\n\n        // Sort tokens and get pool reserves\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\n        Pool storage pool = pools[token0][token1];\n\n        // Cache reserve values\n        uint256 reserveA = pool.reserveA;\n        uint256 reserveB = pool.reserveB;\n\n        // Calculate proportional share of reserves\n        (amountA, amountB) = _calculateWithdrawalAmounts(\n            liquidity,\n            reserveA,\n            reserveB\n        );\n        require(amountA >= amountAMin && amountB >= amountBMin, \"Min not met\");\n\n        // Burn LP tokens and transfer underlying tokens\n        _burn(msg.sender, liquidity);\n        _safeTransfer(token0, to, amountA);\n        _safeTransfer(token1, to, amountB);\n\n        // Single state variable update\n        _updateReserves(token0, token1, reserveA - amountA, reserveB - amountB);\n\n        emit LiquidityRemoved(\n            msg.sender,\n            tokenA,\n            tokenB,\n            amountA,\n            amountB,\n            liquidity\n        );\n    }\n\n    /**\n     * @notice Swaps an exact amount of input tokens for output tokens\n     * @param amountIn Exact amount of input tokens\n     * @param amountOutMin Minimum acceptable amount of output tokens\n     * @param path Array containing [inputToken, outputToken] addresses\n     * @param to Address to receive output tokens\n     * @param deadline Transaction expiry timestamp\n     * @return amounts Array containing [inputAmount, outputAmount]\n     */\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    )\n        external\n        override\n        ensureDeadline(deadline)\n        returns (uint256[] memory amounts)\n    {\n        require(path.length == 2, \"Invalid path\");\n\n        amounts = new uint256[](2);\n        amounts[0] = amountIn;\n\n        (address tokenIn, address tokenOut) = (path[0], path[1]);\n        Pool storage pool = pools[tokenIn][tokenOut];\n\n        // Cache reserve values\n        uint256 reserveIn = pool.reserveA;\n        uint256 reserveOut = pool.reserveB;\n\n        require(amountIn > 0, \"Invalid amount\");\n        require(reserveIn > 0 && reserveOut > 0, \"No liquidity\");\n\n        // Calculate output amount based on constant product formula\n        amounts[1] = getAmountOut(amountIn, reserveIn, reserveOut);\n        require(amounts[1] >= amountOutMin, \"Insufficient output\");\n\n        // Transfer tokens\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n        IERC20(tokenOut).safeTransfer(to, amounts[1]);\n\n        // Single state variable update\n        _updateReserves(\n            tokenIn,\n            tokenOut,\n            reserveIn + amountIn,\n            reserveOut - amounts[1]\n        );\n\n        emit Swap(msg.sender, tokenIn, tokenOut, amountIn, amounts[1]);\n    }\n\n    // ==============================================\n    //              VIEW FUNCTIONS\n    // ==============================================\n\n    /**\n     * @notice Gets the price of tokenA in terms of tokenB\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @return price Price of tokenA in terms of tokenB (with 18 decimals)\n     */\n    function getPrice(address tokenA, address tokenB)\n        external\n        view\n        override\n        returns (uint256 price)\n    {\n        require(tokenA != tokenB, \"Identical tokens\");\n\n        Pool memory pool = pools[tokenA][tokenB];\n        require(pool.reserveA > 0 && pool.reserveB > 0, \"No liquidity\");\n\n        price = (pool.reserveB * 1e18) / pool.reserveA;\n    }\n\n    /**\n     * @notice Calculates output amount for a given input and reserves\n     * @dev Uses constant product formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\n     * @param amountIn Input token amount\n     * @param reserveIn Reserve of input token\n     * @param reserveOut Reserve of output token\n     * @return amountOut Expected output token amount\n     */\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) public pure override returns (uint256 amountOut) {\n        require(amountIn > 0, \"Invalid amount\");\n        require(reserveIn > 0 && reserveOut > 0, \"No liquidity\");\n\n        amountOut = (amountIn * reserveOut) / (reserveIn + amountIn);\n    }\n\n    // ==============================================\n    //              INTERNAL FUNCTIONS\n    // ==============================================\n\n    /**\n     * @dev Sorts two token addresses\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @return token0 Lower address\n     * @return token1 Higher address\n     */\n    function _sortTokens(address tokenA, address tokenB)\n        internal\n        pure\n        returns (address token0, address token1)\n    {\n        (token0, token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n    }\n\n    /**\n     * @dev Calculates optimal deposit amounts to maintain pool ratio\n     * @param amountADesired Desired amount of tokenA\n     * @param amountBDesired Desired amount of tokenB\n     * @param amountAMin Minimum acceptable amount of tokenA\n     * @param amountBMin Minimum acceptable amount of tokenB\n     * @param reserveA Current reserve of tokenA\n     * @param reserveB Current reserve of tokenB\n     * @return amountA Optimal amount of tokenA to deposit\n     * @return amountB Optimal amount of tokenB to deposit\n     */\n    function _calculateOptimalDeposit(\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        uint256 reserveA,\n        uint256 reserveB\n    ) internal pure returns (uint256 amountA, uint256 amountB) {\n        uint256 amountBOptimal = _quote(amountADesired, reserveA, reserveB);\n\n        if (amountBOptimal <= amountBDesired) {\n            require(amountBOptimal >= amountBMin, \"Insufficient B\");\n            (amountA, amountB) = (amountADesired, amountBOptimal);\n        } else {\n            uint256 amountAOptimal = _quote(amountBDesired, reserveB, reserveA);\n            require(amountAOptimal >= amountAMin, \"Insufficient A\");\n            (amountA, amountB) = (amountAOptimal, amountBDesired);\n        }\n    }\n\n    /**\n     * @dev Calculates LP tokens to mint based on deposit\n     * @param amount Deposit amount\n     * @param reserve Existing reserve amount\n     * @param totalSupply Current total LP token supply\n     * @return liquidity LP tokens to mint\n     */\n    function _calculateLiquidity(\n        uint256 amount,\n        uint256 reserve,\n        uint256 totalSupply\n    ) internal pure returns (uint256 liquidity) {\n        liquidity = (amount * totalSupply) / reserve;\n        require(liquidity > 0, \"Insufficient liquidity\");\n    }\n\n    /**\n     * @dev Calculates withdrawal amounts based on LP share\n     * @param liquidity LP tokens to burn\n     * @param reserveA Reserve of tokenA\n     * @param reserveB Reserve of tokenB\n     * @return amountA Amount of tokenA to withdraw\n     * @return amountB Amount of tokenB to withdraw\n     */\n    function _calculateWithdrawalAmounts(\n        uint256 liquidity,\n        uint256 reserveA,\n        uint256 reserveB\n    ) internal view returns (uint256 amountA, uint256 amountB) {\n        uint256 _totalSupply = totalSupply();\n        amountA = (liquidity * reserveA) / _totalSupply;\n        amountB = (liquidity * reserveB) / _totalSupply;\n    }\n\n    /**\n     * @dev Updates pool reserves\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @param newReserveA New reserve for tokenA\n     * @param newReserveB New reserve for tokenB\n     */\n    function _updateReserves(\n        address tokenA,\n        address tokenB,\n        uint256 newReserveA,\n        uint256 newReserveB\n    ) internal {\n        pools[tokenA][tokenB] = Pool(newReserveA, newReserveB);\n    }\n\n    /**\n     * @dev Transfers both tokens from user to contract\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @param amountA Amount of tokenA\n     * @param amountB Amount of tokenB\n     */\n    function _transferTokens(\n        address tokenA,\n        address tokenB,\n        uint256 amountA,\n        uint256 amountB\n    ) internal {\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\n    }\n\n    /**\n     * @dev Safely transfers tokens to recipient\n     * @param token Token address\n     * @param to Recipient address\n     * @param amount Transfer amount\n     */\n    function _safeTransfer(\n        address token,\n        address to,\n        uint256 amount\n    ) internal {\n        IERC20(token).safeTransfer(to, amount);\n    }\n\n    // ==============================================\n    //              PURE FUNCTIONS\n    // ==============================================\n\n    /**\n     * @dev Calculates square root (for initial liquidity calculation)\n     * @param y Number to calculate square root of\n     * @return z Square root of y\n     */\n    function _sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n\n    /**\n     * @dev Calculates equivalent token amount to maintain ratio\n     * @param amountA Amount of tokenA\n     * @param reserveA Reserve of tokenA\n     * @param reserveB Reserve of tokenB\n     * @return amountB Equivalent amount of tokenB\n     */\n    function _quote(\n        uint256 amountA,\n        uint256 reserveA,\n        uint256 reserveB\n    ) internal pure returns (uint256 amountB) {\n        amountB = (amountA * reserveB) / reserveA;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleSwap_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/SimpleSwap_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/SimpleSwap_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/SimpleSwap_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/SimpleSwap_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/SimpleSwap_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the SimpleSwap decentralized exchange contract",
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"details": "Mints LP tokens representing pool share",
								"params": {
									"amountADesired": "Desired amount of tokenA to deposit",
									"amountAMin": "Minimum acceptable amount of tokenA",
									"amountBDesired": "Desired amount of tokenB to deposit",
									"amountBMin": "Minimum acceptable amount of tokenB",
									"deadline": "Transaction expiry timestamp",
									"to": "Recipient of LP tokens",
									"tokenA": "First token in pair",
									"tokenB": "Second token in pair"
								},
								"returns": {
									"amountA": "Actual amount of tokenA deposited",
									"amountB": "Actual amount of tokenB deposited",
									"liquidity": "Amount of LP tokens minted"
								}
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"details": "Uses formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)",
								"params": {
									"amountIn": "Input token amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Expected output amount"
								}
							},
							"getPrice(address,address)": {
								"details": "Price is calculated as reserveB/reserveA",
								"params": {
									"tokenA": "First token in pair",
									"tokenB": "Second token in pair"
								},
								"returns": {
									"price": "Price ratio with 18 decimals precision"
								}
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"details": "Burns LP tokens and returns underlying assets",
								"params": {
									"amountAMin": "Minimum acceptable amount of tokenA",
									"amountBMin": "Minimum acceptable amount of tokenB",
									"deadline": "Transaction expiry timestamp",
									"liquidity": "Amount of LP tokens to burn",
									"to": "Recipient of withdrawn tokens",
									"tokenA": "First token in pair",
									"tokenB": "Second token in pair"
								},
								"returns": {
									"amountA": "Amount of tokenA withdrawn",
									"amountB": "Amount of tokenB withdrawn"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"details": "Uses constant product market maker formula",
								"params": {
									"amountIn": "Exact amount of input tokens",
									"amountOutMin": "Minimum acceptable output amount",
									"deadline": "Transaction expiry timestamp",
									"path": "Array with [inputToken, outputToken]",
									"to": "Recipient of output tokens"
								},
								"returns": {
									"amounts": "Array containing [inputAmount, outputAmount]"
								}
							}
						},
						"title": "ISimpleSwap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SimpleSwap decentralized exchange contract\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Mints LP tokens representing pool share\",\"params\":{\"amountADesired\":\"Desired amount of tokenA to deposit\",\"amountAMin\":\"Minimum acceptable amount of tokenA\",\"amountBDesired\":\"Desired amount of tokenB to deposit\",\"amountBMin\":\"Minimum acceptable amount of tokenB\",\"deadline\":\"Transaction expiry timestamp\",\"to\":\"Recipient of LP tokens\",\"tokenA\":\"First token in pair\",\"tokenB\":\"Second token in pair\"},\"returns\":{\"amountA\":\"Actual amount of tokenA deposited\",\"amountB\":\"Actual amount of tokenB deposited\",\"liquidity\":\"Amount of LP tokens minted\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"Uses formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\",\"params\":{\"amountIn\":\"Input token amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Expected output amount\"}},\"getPrice(address,address)\":{\"details\":\"Price is calculated as reserveB/reserveA\",\"params\":{\"tokenA\":\"First token in pair\",\"tokenB\":\"Second token in pair\"},\"returns\":{\"price\":\"Price ratio with 18 decimals precision\"}},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Burns LP tokens and returns underlying assets\",\"params\":{\"amountAMin\":\"Minimum acceptable amount of tokenA\",\"amountBMin\":\"Minimum acceptable amount of tokenB\",\"deadline\":\"Transaction expiry timestamp\",\"liquidity\":\"Amount of LP tokens to burn\",\"to\":\"Recipient of withdrawn tokens\",\"tokenA\":\"First token in pair\",\"tokenB\":\"Second token in pair\"},\"returns\":{\"amountA\":\"Amount of tokenA withdrawn\",\"amountB\":\"Amount of tokenB withdrawn\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Uses constant product market maker formula\",\"params\":{\"amountIn\":\"Exact amount of input tokens\",\"amountOutMin\":\"Minimum acceptable output amount\",\"deadline\":\"Transaction expiry timestamp\",\"path\":\"Array with [inputToken, outputToken]\",\"to\":\"Recipient of output tokens\"},\"returns\":{\"amounts\":\"Array containing [inputAmount, outputAmount]\"}}},\"title\":\"ISimpleSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output amount for given input\"},\"getPrice(address,address)\":{\"notice\":\"Gets price of tokenA in terms of tokenB\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from a token pair\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps exact input tokens for output tokens\"}},\"notice\":\"Defines the core functionality for: - Adding/removing liquidity from token pairs - Swapping tokens with price calculations - Querying token prices and swap amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"ISimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to a token pair"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output amount for given input"
							},
							"getPrice(address,address)": {
								"notice": "Gets price of tokenA in terms of tokenB"
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity from a token pair"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps exact input tokens for output tokens"
							}
						},
						"notice": "Defines the core functionality for: - Adding/removing liquidity from token pairs - Swapping tokens with price calculations - Querying token prices and swap amounts",
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap_flattened.sol\":28654:39058  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap_flattened.sol\":28654:39058  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c6464bc5975381292d971dd8cf1bdb8473efdb4e6521812b527b3f4f215fc20b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220c6464bc5975381292d971dd8cf1bdb8473efdb4e6521812b527b3f4f215fc20b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 CHAINID 0x4B 0xC5 SWAP8 MSTORE8 DUP2 0x29 0x2D SWAP8 SAR 0xD8 0xCF SHL 0xDB DUP5 PUSH20 0xEFDB4E6521812B527B3F4F215FC20B64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "28654:10404:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220c6464bc5975381292d971dd8cf1bdb8473efdb4e6521812b527b3f4f215fc20b64736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 CHAINID 0x4B 0xC5 SWAP8 MSTORE8 DUP2 0x29 0x2D SWAP8 SAR 0xD8 0xCF SHL 0xDB DUP5 PUSH20 0xEFDB4E6521812B527B3F4F215FC20B64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "28654:10404:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28654,
									"end": 39058,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6464bc5975381292d971dd8cf1bdb8473efdb4e6521812b527b3f4f215fc20b64736f6c634300081e0033",
									".code": [
										{
											"begin": 28654,
											"end": 39058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28654,
											"end": 39058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28654,
											"end": 39058,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleSwap_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Francisco López G.",
						"details": "Implements a basic Uniswap V2-style decentralized exchange with: - Liquidity pool creation - Token swapping functionality - LP (Liquidity Provider) token issuance",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"LiquidityAdded(address,address,address,uint256,uint256,uint256)": {
								"params": {
									"amountA": "Amount of first token added",
									"amountB": "Amount of second token added",
									"liquidity": "Amount of LP tokens minted",
									"provider": "Address providing the liquidity",
									"tokenA": "First token in pair",
									"tokenB": "Second token in pair"
								}
							},
							"LiquidityRemoved(address,address,address,uint256,uint256,uint256)": {
								"params": {
									"amountA": "Amount of first token withdrawn",
									"amountB": "Amount of second token withdrawn",
									"liquidity": "Amount of LP tokens burned",
									"provider": "Address removing the liquidity",
									"tokenA": "First token in pair",
									"tokenB": "Second token in pair"
								}
							},
							"Swap(address,address,address,uint256,uint256)": {
								"params": {
									"amountIn": "Amount of input tokens",
									"amountOut": "Amount of output tokens",
									"sender": "Address initiating the swap",
									"tokenIn": "Input token address",
									"tokenOut": "Output token address"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"details": "For initial deposit, uses square root of token amount productFor subsequent deposits, maintains existing reserve ratio",
								"params": {
									"amountADesired": "Desired amount of first token to deposit",
									"amountAMin": "Minimum acceptable amount of first token",
									"amountBDesired": "Desired amount of second token to deposit",
									"amountBMin": "Minimum acceptable amount of second token",
									"deadline": "Transaction expiry timestamp",
									"to": "Address to receive LP tokens",
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"amountA": "Actual amount of first token deposited",
									"amountB": "Actual amount of second token deposited",
									"liquidity": "Amount of LP tokens minted"
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes contract with LP token name and symbol"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"details": "Uses constant product formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)",
								"params": {
									"amountIn": "Input token amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Expected output token amount"
								}
							},
							"getPrice(address,address)": {
								"params": {
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"price": "Price of tokenA in terms of tokenB (with 18 decimals)"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amountAMin": "Minimum acceptable amount of first token to receive",
									"amountBMin": "Minimum acceptable amount of second token to receive",
									"deadline": "Transaction expiry timestamp",
									"liquidity": "Amount of LP tokens to burn",
									"to": "Address to receive withdrawn tokens",
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"amountA": "Amount of first token withdrawn",
									"amountB": "Amount of second token withdrawn"
								}
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"params": {
									"amountIn": "Exact amount of input tokens",
									"amountOutMin": "Minimum acceptable amount of output tokens",
									"deadline": "Transaction expiry timestamp",
									"path": "Array containing [inputToken, outputToken] addresses",
									"to": "Address to receive output tokens"
								},
								"returns": {
									"amounts": "Array containing [inputAmount, outputAmount]"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"stateVariables": {
							"pools": {
								"details": "pools[token0][token1] stores reserves for sorted token pair"
							}
						},
						"title": "SimpleSwap",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_1, callvalue)\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_20\n  jumpi\n  0x40\n  swap1\n  dup2\n  mstore\n  0x0d\n  dup3\n  mstore\n  shl(0x9c, 0x053696d706c6553776170204c5)\n  0x20\n  dup4\n  add\n  mstore\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_20\n  jumpi\n  0x40\n  mstore\n  0x05\n  dup2\n  mstore\n  shl(0xdc, 0x053532d4c5)\n  0x20\n  dup3\n  add\n  mstore\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_20\n  jumpi\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sload\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\ntag_10:\n  0x20\n  dup3\n  lt\n  eq\n  tag_24\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_13\n  jumpi\ntag_14:\n  pop\n  0x20\n  swap3\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_15\n  jumpi\n  swap3\n  dup2\n  swap3\n  swap4\n  0x00\n  swap3\n  tag_17\n  jumpi\ntag_18:\n  pop\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  shl\n  shr\n  not\n  and\n  or\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sstore\ntag_19:\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_20\n  jumpi\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sload\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_22\n  jumpi\ntag_23:\n  0x20\n  dup3\n  lt\n  eq\n  tag_24\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_26\n  jumpi\ntag_27:\n  pop\n  0x20\n  swap2\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_28\n  jumpi\n  swap2\n  dup2\n  swap3\n  0x00\n  swap3\n  tag_30\n  jumpi\ntag_31:\n  pop\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  shl\n  shr\n  not\n  and\n  or\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sstore\ntag_32:\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_30:\n  add\n  mload\n  swap1\n  pop\n  0x00\n  dup1\n  jump(tag_31)\ntag_28:\n  not(0x1f)\n  dup3\n  and\n  swap3\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  dup1\n  0x00\n  keccak256\n  swap2\n  0x00\ntag_33:\n  dup6\n  dup2\n  lt\n  tag_34\n  jumpi\n  pop\n  dup4\n  0x01\n  swap6\n  lt\n  tag_36\n  jumpi\ntag_37:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sstore\n  jump(tag_32)\ntag_36:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  dup1\n  jump(tag_37)\ntag_34:\n  swap2\n  swap3\n  0x20\n  0x01\n  dup2\n  swap3\n  dup7\n  dup6\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_33)\ntag_26:\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_38\n  jumpi\ntag_39:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_40:\n  dup2\n  dup2\n  lt\n  tag_41\n  jumpi\n  pop\n  jump(tag_27)\ntag_41:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_40)\ntag_38:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_39)\ntag_24:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x22\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  revert(0x00, 0x24)\ntag_22:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_23)\ntag_20:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x41\n    /* \"contracts/SimpleSwap_flattened.sol\":12720:12737  _symbol = symbol_ */\n  0x04\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  revert(0x00, 0x24)\ntag_17:\n  add\n  mload\n  swap1\n  pop\n  0x00\n  dup1\n  jump(tag_18)\ntag_15:\n  not(0x1f)\n  dup3\n  and\n  swap4\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n  0x00\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  dup1\n  0x00\n  keccak256\n  swap2\n  0x00\ntag_43:\n  dup7\n  dup2\n  lt\n  tag_44\n  jumpi\n  pop\n  dup4\n  0x01\n  swap6\n  swap7\n  lt\n  tag_46\n  jumpi\ntag_47:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  sstore\n  jump(tag_19)\ntag_46:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  dup1\n  jump(tag_47)\ntag_44:\n  swap2\n  swap3\n  0x20\n  0x01\n  dup2\n  swap3\n  dup7\n  dup6\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_43)\ntag_13:\n    /* \"contracts/SimpleSwap_flattened.sol\":12697:12710  _name = name_ */\n  0x03\n  0x00\n    /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n  mstore\n  0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_48\n  jumpi\ntag_49:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_50:\n  dup2\n  dup2\n  lt\n  tag_51\n  jumpi\n  pop\n  jump(tag_14)\ntag_51:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_50)\ntag_48:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_49)\ntag_9:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_10)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_25, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_25:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x054d50d4\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x38ed1739\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x901754d7\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xac41865a\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_53\n      jumpi\n      0xe8e33700\n      eq\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_61\n      tag_2\n      jump\t// in\n    tag_61:\n      tag_62\n      tag_3\n      jump\t// in\n    tag_62:\n      calldataload(0x64)\n      swap2\n      calldataload(0x44)\n      swap2\n      calldataload(0xa4)\n      swap2\n      calldataload(0x84)\n      swap2\n      calldataload(0xc4)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_63\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_65\n        /* \"contracts/SimpleSwap_flattened.sol\":46652:46667  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      calldataload(0xe4)\n        /* \"contracts/SimpleSwap_flattened.sol\":46640:46667  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_13\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup3\n      dup2\n      and\n      swap4\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/SimpleSwap_flattened.sol\":46921:46966  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_66\n        /* \"contracts/SimpleSwap_flattened.sol\":46929:46945  tokenA != tokenB */\n      dup5\n      dup7\n      eq\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":46921:46966  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_17\n      jump\t// in\n    tag_66:\n        /* \"contracts/SimpleSwap_flattened.sol\":48788:48806  amountADesired > 0 */\n      dup8\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":48788:48828  amountADesired > 0 && amountBDesired > 0 */\n      dup1\n      tag_67\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_68:\n      iszero\n      tag_69\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":49075:49102  _sortTokens(tokenA, tokenB) */\n      tag_71\n        /* \"contracts/SimpleSwap_flattened.sol\":48879:48907  amountADesired >= amountAMin */\n      swap2\n      dup7\n      dup10\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":48879:48939  amountADesired >= amountAMin && amountBDesired >= amountBMin */\n      dup1\n      tag_72\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_73:\n        /* \"contracts/SimpleSwap_flattened.sol\":48858:48976  require(... */\n      tag_74\n      swap1\n      tag_18\n      jump\t// in\n    tag_74:\n        /* \"contracts/SimpleSwap_flattened.sol\":49075:49102  _sortTokens(tokenA, tokenB) */\n      tag_23\n      jump\t// in\n    tag_71:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap5\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":49132:49137  pools */\n      0x05\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup8\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap7\n      0x01\n      dup9\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":49283:49296  pool.reserveB */\n      swap9\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":49311:49324  reserveA == 0 */\n      swap2\n      dup9\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":49311:49341  reserveA == 0 && reserveB == 0 */\n      dup1\n      tag_75\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_76:\n        /* \"contracts/SimpleSwap_flattened.sol\":49307:49958  if (reserveA == 0 && reserveB == 0) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":49400:49453  (amountA, amountB) = (amountADesired, amountBDesired) */\n      pop\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":49485:49502  amountA * amountB */\n      tag_79\n        /* \"contracts/SimpleSwap_flattened.sol\":49400:49453  (amountA, amountB) = (amountADesired, amountBDesired) */\n      dup10\n      dup10\n        /* \"contracts/SimpleSwap_flattened.sol\":49485:49502  amountA * amountB */\n      tag_7\n      jump\t// in\n    tag_79:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":60647:60648  3 */\n      0x03\n        /* \"contracts/SimpleSwap_flattened.sol\":60643:60648  y > 3 */\n      dup3\n      gt\n        /* \"contracts/SimpleSwap_flattened.sol\":60647:60648  3 */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":60664:60669  z = y */\n      pop\n      dup1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup1\n      0x01\n      shr\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_82\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":60718:60807  while (x < z) {... */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":60725:60730  x < z */\n    tag_84:\n      dup3\n      dup3\n      lt\n      tag_85\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":60639:60865  if (y > 3) {... */\n      pop\n      pop\n    tag_87:\n        /* \"contracts/SimpleSwap_flattened.sol\":49307:49958  if (reserveA == 0 && reserveB == 0) {... */\n      swap6\n    tag_88:\n        /* \"contracts/SimpleSwap_flattened.sol\":59818:59825  amountA */\n      tag_89\n        /* \"contracts/SimpleSwap_flattened.sol\":59811:59815  this */\n      dup10\n      address\n        /* \"contracts/SimpleSwap_flattened.sol\":59791:59801  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":59818:59825  amountA */\n      dup9\n      tag_20\n      jump\t// in\n    tag_89:\n        /* \"contracts/SimpleSwap_flattened.sol\":59895:59902  amountB */\n      tag_90\n        /* \"contracts/SimpleSwap_flattened.sol\":59811:59815  this */\n      dup11\n      address\n        /* \"contracts/SimpleSwap_flattened.sol\":59791:59801  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":59895:59902  amountB */\n      dup10\n      tag_20\n      jump\t// in\n    tag_90:\n        /* \"contracts/SimpleSwap_flattened.sol\":18712:18733  account == address(0) */\n      dup4\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":18708:18799  if (account == address(0)) {... */\n      tag_91\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":50206:50224  reserveB + amountB */\n      tag_93\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup11\n        /* \"contracts/SimpleSwap_flattened.sol\":50186:50204  reserveA + amountA */\n      tag_94\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup12\n      tag_95\n      swap12\n        /* \"contracts/SimpleSwap_flattened.sol\":50206:50224  reserveB + amountB */\n      tag_96\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap9\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      dup16\n        /* \"contracts/SimpleSwap_flattened.sol\":17417:17438  _totalSupply += value */\n      tag_97\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n        /* \"contracts/SimpleSwap_flattened.sol\":17417:17438  _totalSupply += value */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":17417:17438  _totalSupply += value */\n      tag_8\n      jump\t// in\n    tag_97:\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sstore\n      dup5\n      dup5\n      mstore\n      dup4\n      dup3\n      mstore\n      0x40\n      dup5\n      keccak256\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      log3\n        /* \"contracts/SimpleSwap_flattened.sol\":50186:50204  reserveA + amountA */\n      tag_8\n      jump\t// in\n    tag_94:\n        /* \"contracts/SimpleSwap_flattened.sol\":50206:50224  reserveB + amountB */\n      swap4\n      tag_8\n      jump\t// in\n    tag_93:\n      swap3\n      tag_22\n      jump\t// in\n    tag_96:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":59791:59801  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":50241:50394  LiquidityAdded(... */\n      0x43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x60\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":50241:50394  LiquidityAdded(... */\n      log4\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      dup5\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n    tag_95:\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSwap_flattened.sol\":18708:18799  if (account == address(0)) {... */\n    tag_91:\n        /* \"contracts/SimpleSwap_flattened.sol\":18756:18788  ERC20InvalidReceiver(address(0)) */\n      shl(0xe0, 0xec442f05)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":18756:18788  ERC20InvalidReceiver(address(0)) */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":18756:18788  ERC20InvalidReceiver(address(0)) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":60718:60807  while (x < z) {... */\n    tag_85:\n        /* \"contracts/SimpleSwap_flattened.sol\":60750:60755  z = x */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":60778:60787  y / x + x */\n      tag_99\n        /* \"contracts/SimpleSwap_flattened.sol\":60750:60755  z = x */\n      dup3\n        /* \"contracts/SimpleSwap_flattened.sol\":60778:60783  y / x */\n      tag_100\n      dup2\n      dup5\n      tag_9\n      jump\t// in\n    tag_100:\n        /* \"contracts/SimpleSwap_flattened.sol\":60778:60787  y / x + x */\n      tag_8\n      jump\t// in\n    tag_99:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n      shr\n        /* \"contracts/SimpleSwap_flattened.sol\":60718:60807  while (x < z) {... */\n      swap1\n      jump(tag_84)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_82:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/SimpleSwap_flattened.sol\":60639:60865  if (y > 3) {... */\n    tag_80:\n        /* \"contracts/SimpleSwap_flattened.sol\":60827:60833  y != 0 */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":60823:60865  if (y != 0) {... */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":60639:60865  if (y > 3) {... */\n      tag_87\n        /* \"contracts/SimpleSwap_flattened.sol\":60823:60865  if (y != 0) {... */\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":60849:60854  z = 1 */\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n        /* \"contracts/SimpleSwap_flattened.sol\":60639:60865  if (y > 3) {... */\n      jump(tag_87)\n        /* \"contracts/SimpleSwap_flattened.sol\":49307:49958  if (reserveA == 0 && reserveB == 0) {... */\n    tag_77:\n        /* \"contracts/SimpleSwap_flattened.sol\":49658:49868  _calculateOptimalDeposit(... */\n      swap2\n      swap10\n      swap2\n        /* \"contracts/SimpleSwap_flattened.sol\":61289:61320  (amountA * reserveB) / reserveA */\n      tag_103\n        /* \"contracts/SimpleSwap_flattened.sol\":61290:61308  amountA * reserveB */\n      dup10\n      tag_104\n        /* \"contracts/SimpleSwap_flattened.sol\":49658:49868  _calculateOptimalDeposit(... */\n      dup14\n        /* \"contracts/SimpleSwap_flattened.sol\":61290:61308  amountA * reserveB */\n      dup14\n      tag_7\n      jump\t// in\n    tag_104:\n        /* \"contracts/SimpleSwap_flattened.sol\":61289:61320  (amountA * reserveB) / reserveA */\n      tag_9\n      jump\t// in\n    tag_103:\n        /* \"contracts/SimpleSwap_flattened.sol\":57306:57338  amountBOptimal <= amountBDesired */\n      swap3\n      dup1\n      dup5\n      gt\n      tag_105\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":57362:57390  amountBOptimal >= amountBMin */\n      pop\n      pop\n      dup2\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_107\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":57302:57721  if (amountBOptimal <= amountBDesired) {... */\n    tag_109:\n        /* \"contracts/SimpleSwap_flattened.sol\":49637:49868  (amountA, amountB) = _calculateOptimalDeposit(... */\n      swap8\n        /* \"contracts/SimpleSwap_flattened.sol\":58165:58197  (amount * totalSupply) / reserve */\n      tag_110\n        /* \"contracts/SimpleSwap_flattened.sol\":49637:49868  (amountA, amountB) = _calculateOptimalDeposit(... */\n      dup8\n        /* \"contracts/SimpleSwap_flattened.sol\":58166:58186  amount * totalSupply */\n      tag_104\n        /* \"contracts/SimpleSwap_flattened.sol\":49637:49868  (amountA, amountB) = _calculateOptimalDeposit(... */\n      dup11\n        /* \"contracts/SimpleSwap_flattened.sol\":13957:13969  _totalSupply */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":58166:58186  amount * totalSupply */\n      swap1\n      tag_7\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":58165:58197  (amount * totalSupply) / reserve */\n    tag_110:\n        /* \"contracts/SimpleSwap_flattened.sol\":58215:58228  liquidity > 0 */\n      dup1\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_112\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":49307:49958  if (reserveA == 0 && reserveB == 0) {... */\n      swap6\n      jump(tag_88)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_112:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x496e73756666696369656e74206c6971756964697479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_107:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x91, 0x24b739bab33334b1b4b2b73a1021)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":57302:57721  if (amountBOptimal <= amountBDesired) {... */\n    tag_105:\n        /* \"contracts/SimpleSwap_flattened.sol\":61290:61308  amountA * reserveB */\n      swap3\n      pop\n      swap9\n      pop\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":61289:61320  (amountA * reserveB) / reserveA */\n      tag_114\n        /* \"contracts/SimpleSwap_flattened.sol\":61290:61308  amountA * reserveB */\n      dup10\n      tag_104\n      dup10\n      dup5\n      tag_7\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":61289:61320  (amountA * reserveB) / reserveA */\n    tag_114:\n        /* \"contracts/SimpleSwap_flattened.sol\":57596:57624  amountAOptimal >= amountAMin */\n      swap8\n      dup9\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":57302:57721  if (amountBOptimal <= amountBDesired) {... */\n      tag_109\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x90, 0x496e73756666696369656e742041)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":49311:49341  reserveA == 0 && reserveB == 0 */\n    tag_75:\n        /* \"contracts/SimpleSwap_flattened.sol\":49328:49341  reserveB == 0 */\n      pop\n      dup3\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":49311:49341  reserveA == 0 && reserveB == 0 */\n      jump(tag_76)\n        /* \"contracts/SimpleSwap_flattened.sol\":48879:48939  amountADesired >= amountAMin && amountBDesired >= amountBMin */\n    tag_72:\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":48911:48939  amountBDesired >= amountBMin */\n      dup8\n      dup11\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":48879:48939  amountADesired >= amountAMin && amountBDesired >= amountBMin */\n      jump(tag_73)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_69:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x496e76616c696420616d6f756e7473)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":48788:48828  amountADesired > 0 && amountBDesired > 0 */\n    tag_67:\n        /* \"contracts/SimpleSwap_flattened.sol\":48810:48828  amountBDesired > 0 */\n      pop\n      dup9\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":48788:48828  amountADesired > 0 && amountBDesired > 0 */\n      jump(tag_68)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_63:\n      0x00\n      dup1\n      revert\n    tag_53:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x40))\n      tag_122\n      tag_2\n      jump\t// in\n    tag_122:\n      tag_123\n      tag_3\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      swap5\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      swap3\n      dup4\n      mstore\n      dup2\n      swap1\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0xe0))\n      tag_128\n      tag_2\n      jump\t// in\n    tag_128:\n      tag_129\n      tag_3\n      jump\t// in\n    tag_129:\n      swap1\n      calldataload(0xa4)\n      swap1\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup4\n      sub\n      tag_63\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_132\n        /* \"contracts/SimpleSwap_flattened.sol\":46652:46667  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      calldataload(0xc4)\n        /* \"contracts/SimpleSwap_flattened.sol\":46640:46667  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_13\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n      dup2\n      and\n      swap5\n      swap1\n      dup2\n      and\n      swap2\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":46921:46966  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_133\n        /* \"contracts/SimpleSwap_flattened.sol\":46929:46945  tokenA != tokenB */\n      dup7\n      dup5\n      eq\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":46921:46966  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_17\n      jump\t// in\n    tag_133:\n        /* \"contracts/SimpleSwap_flattened.sol\":51362:51375  liquidity > 0 */\n      dup4\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_134\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":51488:51515  _sortTokens(tokenA, tokenB) */\n      tag_136\n      swap2\n      tag_23\n      jump\t// in\n    tag_136:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap5\n      swap1\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      swap4\n      dup5\n      0x00\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":51545:51550  pools */\n      0x05\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup9\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap7\n      0x01\n      dup9\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":51670:51683  pool.reserveB */\n      swap9\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n      swap8\n        /* \"contracts/SimpleSwap_flattened.sol\":13957:13969  _totalSupply */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":58818:58838  liquidity * reserveA */\n      swap8\n        /* \"contracts/SimpleSwap_flattened.sol\":58874:58911  (liquidity * reserveB) / _totalSupply */\n      tag_137\n        /* \"contracts/SimpleSwap_flattened.sol\":58817:58854  (liquidity * reserveA) / _totalSupply */\n      tag_138\n        /* \"contracts/SimpleSwap_flattened.sol\":58818:58838  liquidity * reserveA */\n      dup11\n      tag_104\n      dup6\n      dup10\n      tag_7\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":58817:58854  (liquidity * reserveA) / _totalSupply */\n    tag_138:\n        /* \"contracts/SimpleSwap_flattened.sol\":58875:58895  liquidity * reserveB */\n      swap10\n      tag_104\n      dup13\n      dup9\n      tag_7\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":58874:58911  (liquidity * reserveB) / _totalSupply */\n    tag_137:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap8\n      calldataload(0x64)\n        /* \"contracts/SimpleSwap_flattened.sol\":51889:51910  amountA >= amountAMin */\n      dup11\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":51889:51935  amountA >= amountAMin && amountB >= amountBMin */\n      dup1\n      tag_141\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_142:\n        /* \"contracts/SimpleSwap_flattened.sol\":51881:51951  require(amountA >= amountAMin && amountB >= amountBMin, \"Min not met\") */\n      tag_143\n      swap1\n      tag_18\n      jump\t// in\n    tag_143:\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":19238:19259  account == address(0) */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":19234:19323  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/SimpleSwap_flattened.sol\":17524:17543  fromBalance < value */\n      dup7\n      dup2\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":17520:17635  if (fromBalance < value) {... */\n      tag_146\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":52218:52236  reserveA - amountA */\n      tag_148\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      dup12\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x40\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      swap14\n      swap6\n        /* \"contracts/SimpleSwap_flattened.sol\":60233:60239  amount */\n      tag_149\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      dup14\n      dup8\n        /* \"contracts/SimpleSwap_flattened.sol\":60233:60239  amount */\n      tag_150\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      dup6\n        /* \"contracts/SimpleSwap_flattened.sol\":52238:52256  reserveB - amountB */\n      tag_151\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      swap14\n      swap13\n      swap11\n      dup16\n      swap11\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      dup13\n        /* \"contracts/SimpleSwap_flattened.sol\":52238:52256  reserveB - amountB */\n      tag_93\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      swap14\n      dup9\n      swap14\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup5\n      mstore\n      dup4\n      0x20\n      mstore\n      sub\n      0x40\n      dup4\n      keccak256\n      sstore\n      dup1\n        /* \"contracts/SimpleSwap_flattened.sol\":13957:13969  _totalSupply */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n      sub\n        /* \"contracts/SimpleSwap_flattened.sol\":13957:13969  _totalSupply */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      swap3\n      log3\n        /* \"contracts/SimpleSwap_flattened.sol\":60233:60239  amount */\n      tag_21\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup10\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":60233:60239  amount */\n      tag_21\n      jump\t// in\n    tag_149:\n        /* \"contracts/SimpleSwap_flattened.sol\":52218:52236  reserveA - amountA */\n      tag_16\n      jump\t// in\n    tag_148:\n        /* \"contracts/SimpleSwap_flattened.sol\":52238:52256  reserveB - amountB */\n      swap4\n      tag_16\n      jump\t// in\n    tag_151:\n        /* \"contracts/SimpleSwap_flattened.sol\":52273:52428  LiquidityRemoved(... */\n      0xd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup7\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      dup1\n        /* \"contracts/SimpleSwap_flattened.sol\":52273:52428  LiquidityRemoved(... */\n      tag_153\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":52273:52428  LiquidityRemoved(... */\n      swap5\n      dup9\n      dup11\n      dup5\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"contracts/SimpleSwap_flattened.sol\":52273:52428  LiquidityRemoved(... */\n    tag_153:\n      sub\n      swap1\n      log4\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n        /* \"contracts/SimpleSwap_flattened.sol\":17520:17635  if (fromBalance < value) {... */\n    tag_146:\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      dup7\n      swap1\n      shl(0xe2, 0x391434e3)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":52025:52035  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":19234:19323  if (account == address(0)) {... */\n    tag_144:\n        /* \"contracts/SimpleSwap_flattened.sol\":19282:19312  ERC20InvalidSender(address(0)) */\n      shl(0xe1, 0x4b637e8f)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":19282:19312  ERC20InvalidSender(address(0)) */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":19282:19312  ERC20InvalidSender(address(0)) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":51889:51935  amountA >= amountAMin && amountB >= amountBMin */\n    tag_141:\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      calldataload(0x84)\n        /* \"contracts/SimpleSwap_flattened.sol\":51914:51935  amountB >= amountBMin */\n      dup10\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":51889:51935  amountA >= amountAMin && amountB >= amountBMin */\n      jump(tag_142)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_134:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c6964206c6971756964697479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_49:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x40))\n      tag_158\n      tag_2\n      jump\t// in\n    tag_158:\n      tag_159\n      tag_3\n      jump\t// in\n    tag_159:\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":54821:54866  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_160\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup4\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":54829:54845  tokenA != tokenB */\n      dup3\n      eq\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":54821:54866  require(tokenA != tokenB, \"Identical tokens\") */\n      tag_17\n      jump\t// in\n    tag_160:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":54896:54901  pools */\n      0x05\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/SimpleSwap_flattened.sol\":54896:54917  pools[tokenA][tokenB] */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_161\n      dup3\n      tag_11\n      jump\t// in\n    tag_161:\n        /* \"contracts/SimpleSwap_flattened.sol\":54927:54990  require(pool.reserveA > 0 && pool.reserveB > 0, \"No liquidity\") */\n      tag_162\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n      dup3\n      sload\n      swap3\n      dup4\n      dup6\n      mstore\n      add\n      sload\n      0x20\n      dup5\n      add\n      swap3\n      dup2\n      dup5\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":54935:54952  pool.reserveA > 0 */\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":54935:54973  pool.reserveA > 0 && pool.reserveB > 0 */\n      swap1\n      dup2\n      tag_163\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_164:\n        /* \"contracts/SimpleSwap_flattened.sol\":54927:54990  require(pool.reserveA > 0 && pool.reserveB > 0, \"No liquidity\") */\n      pop\n      tag_6\n      jump\t// in\n    tag_162:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":55026:55030  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n        /* \"contracts/SimpleSwap_flattened.sol\":55026:55030  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_82\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/SimpleSwap_flattened.sol\":55009:55047  (pool.reserveB * 1e18) / pool.reserveA */\n      tag_167\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap2\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":55009:55047  (pool.reserveB * 1e18) / pool.reserveA */\n      swap1\n      tag_9\n      jump\t// in\n    tag_167:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"contracts/SimpleSwap_flattened.sol\":54935:54973  pool.reserveA > 0 && pool.reserveB > 0 */\n    tag_163:\n        /* \"contracts/SimpleSwap_flattened.sol\":54956:54973  pool.reserveB > 0 */\n      swap1\n      pop\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":54935:54973  pool.reserveA > 0 && pool.reserveB > 0 */\n      dup5\n      jump(tag_164)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_47:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"contracts/SimpleSwap_flattened.sol\":14489:14494  value */\n      tag_172\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_173\n      tag_2\n      jump\t// in\n    tag_173:\n      calldataload(0x24)\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      swap1\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":14489:14494  value */\n      tag_19\n      jump\t// in\n    tag_172:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      0x00\n      sload(0x04)\n      dup1\n      0x01\n      shr\n      swap1\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_178\n      jumpi\n    tag_179:\n      0x20\n      dup4\n      lt\n      dup2\n      eq\n      tag_180\n      jumpi\n      dup3\n      dup6\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_182\n      jumpi\n      pop\n      0x01\n      eq\n      tag_184\n      jumpi\n    tag_185:\n      tag_95\n      dup4\n      tag_187\n      dup2\n      dup6\n      sub\n      dup3\n      tag_12\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_184:\n      swap2\n      swap1\n      pop\n      mstore(0x00, 0x04)\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap2\n      0x00\n      swap1\n    tag_188:\n      dup1\n      dup3\n      lt\n      tag_189\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_187\n      jump(tag_185)\n    tag_189:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_188)\n    tag_182:\n      not(0xff)\n      and\n      0x20\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      iszero\n      iszero\n      0x05\n      shl\n      dup5\n      add\n      swap1\n      swap2\n      add\n      swap2\n      pop\n      tag_187\n      swap1\n      pop\n      jump(tag_185)\n    tag_180:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_178:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_179)\n    tag_43:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x40))\n      tag_195\n      tag_2\n      jump\t// in\n    tag_195:\n      tag_196\n      tag_3\n      jump\t// in\n    tag_196:\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":44465:44522  mapping(address => mapping(address => Pool)) public pools */\n      0x05\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/SimpleSwap_flattened.sol\":44465:44522  mapping(address => mapping(address => Pool)) public pools */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x40\n      dup1\n      0x00\n      keccak256\n        /* \"contracts/SimpleSwap_flattened.sol\":44465:44522  mapping(address => mapping(address => Pool)) public pools */\n      0x01\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":44465:44522  mapping(address => mapping(address => Pool)) public pools */\n      swap2\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_41:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_201\n      tag_2\n      jump\t// in\n    tag_201:\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0xa0))\n      calldataload(0x04)\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_63\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_63\n      jumpi\n      calldatasize\n      0x24\n      dup3\n      0x05\n      shl\n      dup5\n      add\n      add\n      gt\n      tag_63\n      jumpi\n      calldataload(0x64)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_63\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_216\n        /* \"contracts/SimpleSwap_flattened.sol\":46652:46667  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      calldataload(0x84)\n        /* \"contracts/SimpleSwap_flattened.sol\":46640:46667  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":46632:46687  require(deadline >= block.timestamp, \"Deadline passed\") */\n      tag_13\n      jump\t// in\n    tag_216:\n        /* \"contracts/SimpleSwap_flattened.sol\":53214:53215  2 */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":53199:53215  path.length == 2 */\n      dup2\n      sub\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_217\n      jumpi\n      mload(0x40)\n      swap4\n      tag_219\n      0x60\n      dup7\n      tag_12\n      jump\t// in\n    tag_219:\n        /* \"contracts/SimpleSwap_flattened.sol\":53214:53215  2 */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      swap4\n      0x40\n      calldatasize\n      dup7\n      calldatacopy\n      dup6\n      mload\n      iszero\n      tag_225\n      jumpi\n      dup2\n      dup6\n      mstore\n      dup3\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":53350:53357  path[0] */\n      tag_224\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x24\n      dup3\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":53350:53357  path[0] */\n      tag_15\n      jump\t// in\n    tag_224:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap3\n      0x01\n      lt\n      iszero\n      tag_225\n      jumpi\n      0x44\n        /* \"contracts/SimpleSwap_flattened.sol\":53359:53366  path[1] */\n      tag_227\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap2\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":53359:53366  path[1] */\n      tag_15\n      jump\t// in\n    tag_227:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x05)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      0x01\n      dup4\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":53528:53541  pool.reserveB */\n      swap4\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":53560:53572  amountIn > 0 */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":53552:53591  require(amountIn > 0, \"Invalid amount\") */\n      tag_228\n        /* \"contracts/SimpleSwap_flattened.sol\":53560:53572  amountIn > 0 */\n      dup6\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":53552:53591  require(amountIn > 0, \"Invalid amount\") */\n      tag_5\n      jump\t// in\n    tag_228:\n        /* \"contracts/SimpleSwap_flattened.sol\":53609:53622  reserveIn > 0 */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":53609:53640  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      tag_229\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_230:\n        /* \"contracts/SimpleSwap_flattened.sol\":53601:53657  require(reserveIn > 0 && reserveOut > 0, \"No liquidity\") */\n      tag_231\n      swap1\n      tag_6\n      jump\t// in\n    tag_231:\n        /* \"contracts/SimpleSwap_flattened.sol\":53750:53795  getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_232\n      dup3\n      dup6\n      dup8\n      tag_10\n      jump\t// in\n    tag_232:\n        /* \"contracts/SimpleSwap_flattened.sol\":53737:53795  amounts[1] = getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_233\n      dup11\n      tag_14\n      jump\t// in\n    tag_233:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      calldataload(0x24)\n        /* \"contracts/SimpleSwap_flattened.sol\":53813:53823  amounts[1] */\n      tag_234\n      dup11\n      tag_14\n      jump\t// in\n    tag_234:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":53813:53839  amounts[1] >= amountOutMin */\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      tag_235\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":54182:54205  reserveOut - amounts[1] */\n      tag_93\n        /* \"contracts/SimpleSwap_flattened.sol\":54148:54168  reserveIn + amountIn */\n      tag_238\n        /* \"contracts/SimpleSwap_flattened.sol\":53954:53958  this */\n      dup7\n        /* \"contracts/SimpleSwap_flattened.sol\":54182:54205  reserveOut - amounts[1] */\n      tag_239\n        /* \"contracts/SimpleSwap_flattened.sol\":53954:53958  this */\n      swap7\n        /* \"contracts/SimpleSwap_flattened.sol\":54014:54024  amounts[1] */\n      tag_100\n        /* \"contracts/SimpleSwap_flattened.sol\":53954:53958  this */\n      dup14\n      swap13\n      swap14\n      swap12\n        /* \"contracts/SimpleSwap_flattened.sol\":53961:53969  amountIn */\n      tag_241\n        /* \"contracts/SimpleSwap_flattened.sol\":53954:53958  this */\n      dup5\n      dup14\n      address\n        /* \"contracts/SimpleSwap_flattened.sol\":53934:53944  msg.sender */\n      swap1\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":53961:53969  amountIn */\n      swap1\n      tag_20\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup8\n      and\n      swap13\n        /* \"contracts/SimpleSwap_flattened.sol\":54014:54024  amounts[1] */\n      tag_242\n      swap1\n      tag_14\n      jump\t// in\n    tag_242:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":54014:54024  amounts[1] */\n      swap1\n      dup14\n      tag_21\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":54148:54168  reserveIn + amountIn */\n    tag_238:\n        /* \"contracts/SimpleSwap_flattened.sol\":54195:54205  amounts[1] */\n      swap3\n      tag_243\n      dup11\n      tag_14\n      jump\t// in\n    tag_243:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":54182:54205  reserveOut - amounts[1] */\n      swap1\n      tag_16\n      jump\t// in\n    tag_239:\n        /* \"contracts/SimpleSwap_flattened.sol\":54277:54287  amounts[1] */\n      tag_244\n      dup5\n      tag_14\n      jump\t// in\n    tag_244:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":54231:54288  Swap(msg.sender, tokenIn, tokenOut, amountIn, amounts[1]) */\n      0xcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x40\n        /* \"contracts/SimpleSwap_flattened.sol\":53934:53944  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":54231:54288  Swap(msg.sender, tokenIn, tokenOut, amountIn, amounts[1]) */\n      swap3\n      log4\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_245:\n      dup2\n      dup2\n      lt\n      tag_246\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_246:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_245)\n    tag_235:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x125b9cdd59999a58da595b9d081bdd5d1c1d5d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":53609:53640  reserveIn > 0 && reserveOut > 0 */\n    tag_229:\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":53626:53640  reserveOut > 0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":53609:53640  reserveIn > 0 && reserveOut > 0 */\n      jump(tag_230)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_225:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_217:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa3, 0x092dcecc2d8d2c840e0c2e8d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_37:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/SimpleSwap_flattened.sol\":13810:13812  18 */\n      0x12\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x60))\n      tag_256\n      tag_2\n      jump\t// in\n    tag_256:\n      tag_257\n      tag_3\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      swap3\n      calldataload(0x44)\n      swap3\n      swap2\n      not(0x00)\n        /* \"contracts/SimpleSwap_flattened.sol\":21862:21898  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":21858:22245  if (currentAllowance < type(uint256).max) {... */\n      tag_258\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_259:\n        /* \"contracts/SimpleSwap_flattened.sol\":16110:16115  value */\n      pop\n      tag_172\n      swap4\n      pop\n      tag_19\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":21858:22245  if (currentAllowance < type(uint256).max) {... */\n    tag_258:\n        /* \"contracts/SimpleSwap_flattened.sol\":21918:21942  currentAllowance < value */\n      dup4\n      dup2\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":21914:22122  if (currentAllowance < value) {... */\n      tag_261\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":21065:21084  owner == address(0) */\n      dup5\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":21061:21150  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":21163:21184  spender == address(0) */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":21159:21249  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":16110:16115  value */\n      tag_172\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap5\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      dup4\n      keccak256(0x00, 0x40)\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"contracts/SimpleSwap_flattened.sol\":21858:22245  if (currentAllowance < type(uint256).max) {... */\n      dup5\n      jump(tag_259)\n        /* \"contracts/SimpleSwap_flattened.sol\":21159:21249  if (spender == address(0)) {... */\n    tag_265:\n        /* \"contracts/SimpleSwap_flattened.sol\":21207:21238  ERC20InvalidSpender(address(0)) */\n      shl(0xe1, 0x4a1406b1)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21207:21238  ERC20InvalidSpender(address(0)) */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21207:21238  ERC20InvalidSpender(address(0)) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":21061:21150  if (owner == address(0)) {... */\n    tag_263:\n        /* \"contracts/SimpleSwap_flattened.sol\":21107:21139  ERC20InvalidApprover(address(0)) */\n      shl(0xe0, 0xe602df05)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21107:21139  ERC20InvalidApprover(address(0)) */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21107:21139  ERC20InvalidApprover(address(0)) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":21914:22122  if (currentAllowance < value) {... */\n    tag_261:\n        /* \"contracts/SimpleSwap_flattened.sol\":21969:22107  ERC20InsufficientAllowance(... */\n      dup4\n      swap1\n      shl(0xe1, 0x7dc7a0d9)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21969:22107  ERC20InsufficientAllowance(... */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":21969:22107  ERC20InsufficientAllowance(... */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_33:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/SimpleSwap_flattened.sol\":13957:13969  _totalSupply */\n      0x02\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x40))\n      tag_275\n      tag_2\n      jump\t// in\n    tag_275:\n      calldataload(0x24)\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      swap1\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":21065:21084  owner == address(0) */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":21061:21150  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      and\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":21163:21184  spender == address(0) */\n      dup2\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":21159:21249  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      dup1\n      keccak256(0x00, 0x40)\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":21337:21368  Approval(owner, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n        /* \"contracts/SimpleSwap_flattened.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/SimpleSwap_flattened.sol\":21337:21368  Approval(owner, spender, value) */\n      swap3\n      log3\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":12886:12891  _name */\n      0x03\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      sload\n      dup1\n      0x01\n      shr\n      swap1\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_284\n      jumpi\n    tag_285:\n      0x20\n      dup4\n      lt\n      dup2\n      eq\n      tag_180\n      jumpi\n      dup3\n      dup6\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_182\n      jumpi\n      pop\n      0x01\n      eq\n      tag_290\n      jumpi\n      tag_95\n      dup4\n      tag_187\n      dup2\n      dup6\n      sub\n      dup3\n      tag_12\n      jump\t// in\n    tag_290:\n      swap2\n      swap1\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":12886:12891  _name */\n      0x03\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x00\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      swap2\n      0x00\n      swap1\n    tag_294:\n      dup1\n      dup3\n      lt\n      tag_295\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_187\n      jump(tag_185)\n    tag_295:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_294)\n    tag_284:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_285)\n    tag_27:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x60))\n      0x20\n      tag_167\n      calldataload(0x44)\n      calldataload(0x24)\n      calldataload(0x04)\n      tag_10\n      jump\t// in\n    tag_1:\n      0x20\n      0x40\n      swap3\n      dup2\n      dup4\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      dup3\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_63\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_63\n      jumpi\n      jump\t// out\n    tag_5:\n      iszero\n      tag_306\n      jumpi\n      jump\t// out\n    tag_306:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x125b9d985b1a5908185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_6:\n      iszero\n      tag_308\n      jumpi\n      jump\t// out\n    tag_308:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x4e6f206c6971756964697479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_7:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_82\n      jumpi\n      jump\t// out\n    tag_8:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_82\n      jumpi\n      jump\t// out\n    tag_9:\n      dup2\n      iszero\n      tag_314\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_314:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"contracts/SimpleSwap_flattened.sol\":55443:55794  function getAmountOut(... */\n    tag_10:\n        /* \"contracts/SimpleSwap_flattened.sol\":55766:55786  reserveIn + amountIn */\n      tag_316\n        /* \"contracts/SimpleSwap_flattened.sol\":55443:55794  function getAmountOut(... */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":55740:55761  amountIn * reserveOut */\n      tag_317\n        /* \"contracts/SimpleSwap_flattened.sol\":55739:55787  (amountIn * reserveOut) / (reserveIn + amountIn) */\n      tag_318\n        /* \"contracts/SimpleSwap_flattened.sol\":55443:55794  function getAmountOut(... */\n      swap5\n        /* \"contracts/SimpleSwap_flattened.sol\":55611:55650  require(amountIn > 0, \"Invalid amount\") */\n      tag_319\n        /* \"contracts/SimpleSwap_flattened.sol\":55619:55631  amountIn > 0 */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":55611:55650  require(amountIn > 0, \"Invalid amount\") */\n      tag_5\n      jump\t// in\n    tag_319:\n        /* \"contracts/SimpleSwap_flattened.sol\":55668:55681  reserveIn > 0 */\n      dup5\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":55668:55699  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      tag_320\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":55443:55794  function getAmountOut(... */\n    tag_321:\n        /* \"contracts/SimpleSwap_flattened.sol\":55660:55716  require(reserveIn > 0 && reserveOut > 0, \"No liquidity\") */\n      tag_322\n      swap1\n      tag_6\n      jump\t// in\n    tag_322:\n        /* \"contracts/SimpleSwap_flattened.sol\":55740:55761  amountIn * reserveOut */\n      dup3\n      tag_7\n      jump\t// in\n    tag_317:\n        /* \"contracts/SimpleSwap_flattened.sol\":55766:55786  reserveIn + amountIn */\n      swap3\n      tag_8\n      jump\t// in\n    tag_316:\n        /* \"contracts/SimpleSwap_flattened.sol\":55739:55787  (amountIn * reserveOut) / (reserveIn + amountIn) */\n      swap1\n      tag_9\n      jump\t// in\n    tag_318:\n        /* \"contracts/SimpleSwap_flattened.sol\":55443:55794  function getAmountOut(... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":55668:55699  reserveIn > 0 && reserveOut > 0 */\n    tag_320:\n      pop\n        /* \"contracts/SimpleSwap_flattened.sol\":55685:55699  reserveOut > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":55668:55699  reserveIn > 0 && reserveOut > 0 */\n      jump(tag_321)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n    tag_11:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_323\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_323:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_12:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_323\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_13:\n      iszero\n      tag_327\n      jumpi\n      jump\t// out\n    tag_327:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x111958591b1a5b99481c185cdcd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_14:\n      dup1\n      mload\n        /* \"contracts/SimpleSwap_flattened.sol\":53364:53365  1 */\n      0x01\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      lt\n      iszero\n      tag_225\n      jumpi\n      0x40\n      add\n      swap1\n      jump\t// out\n    tag_15:\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_63\n      jumpi\n      swap1\n      jump\t// out\n    tag_16:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_82\n      jumpi\n      jump\t// out\n    tag_17:\n      iszero\n      tag_335\n      jumpi\n      jump\t// out\n    tag_335:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x80, 0x4964656e746963616c20746f6b656e73)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_18:\n      iszero\n      tag_337\n      jumpi\n      jump\t// out\n    tag_337:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x135a5b881b9bdd081b595d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":16517:16847  function _transfer(... */\n    tag_19:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      and\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":16630:16648  from == address(0) */\n      dup2\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":16626:16712  if (from == address(0)) {... */\n      tag_144\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      and\n      swap2\n        /* \"contracts/SimpleSwap_flattened.sol\":16725:16741  to == address(0) */\n      dup3\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":16721:16807  if (to == address(0)) {... */\n      tag_91\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x20\n      mstore\n      0x40\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      keccak256\n      sload\n        /* \"contracts/SimpleSwap_flattened.sol\":17524:17543  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":17520:17635  if (fromBalance < value) {... */\n      tag_343\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap3\n      0x20\n      swap3\n      dup6\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup5\n      mstore\n      sub\n      0x40\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      keccak256\n      sstore\n      dup5\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup3\n      mstore\n      0x40\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      keccak256\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":18267:18292  Transfer(from, to, value) */\n      log3\n        /* \"contracts/SimpleSwap_flattened.sol\":16517:16847  function _transfer(... */\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":17520:17635  if (fromBalance < value) {... */\n    tag_343:\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      dup3\n      shl(0xe2, 0x391434e3)\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      mstore\n      0x04\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n        /* \"contracts/SimpleSwap_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":17570:17620  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":29634:29894  function safeTransferFrom(... */\n    tag_20:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SimpleSwap_flattened.sol\":29824:29877  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap3\n      dup4\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":29824:29877  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup3\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":29824:29877  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_345\n      swap2\n      tag_346\n      0x84\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup4\n        /* \"contracts/SimpleSwap_flattened.sol\":29824:29877  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_12\n      jump\t// in\n    tag_346:\n      tag_24\n      jump\t// in\n    tag_345:\n        /* \"contracts/SimpleSwap_flattened.sol\":29634:29894  function safeTransferFrom(... */\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":29205:29395  function safeTransfer(... */\n    tag_21:\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SimpleSwap_flattened.sol\":29344:29387  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap1\n      swap3\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":29344:29387  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":29344:29387  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_345\n      swap2\n      tag_346\n      0x64\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup4\n        /* \"contracts/SimpleSwap_flattened.sol\":29344:29387  abi.encodeCall(token.transfer, (to, value)) */\n      tag_12\n      jump\t// in\n        /* \"contracts/SimpleSwap_flattened.sol\":59155:59372  function _updateReserves(... */\n    tag_22:\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      0x01\n        /* \"contracts/SimpleSwap_flattened.sol\":59155:59372  function _updateReserves(... */\n      swap3\n      swap4\n      swap2\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mload(0x40)\n      swap5\n      tag_349\n      dup7\n      tag_11\n      jump\t// in\n    tag_349:\n      dup6\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":59335:59365  Pool(newReserveA, newReserveB) */\n      0x20\n      dup6\n      add\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap3\n      dup4\n      mstore\n      dup4\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"contracts/SimpleSwap_flattened.sol\":59311:59316  pools */\n      0x05\n        /* \"contracts/SimpleSwap_flattened.sol\":59335:59365  Pool(newReserveA, newReserveB) */\n      0x20\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/SimpleSwap_flattened.sol\":59311:59332  pools[tokenA][tokenB] */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup4\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap3\n      mload\n      dup4\n      sstore\n      mload\n      swap2\n      add\n      sstore\n        /* \"contracts/SimpleSwap_flattened.sol\":59155:59372  function _updateReserves(... */\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":56158:56407  function _sortTokens(address tokenA, address tokenB)... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup3\n      dup2\n      and\n      swap1\n      dup3\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":56323:56338  tokenA < tokenB */\n      lt\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":56158:56407  function _sortTokens(address tokenA, address tokenB)... */\n      swap2\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":56323:56400  tokenA < tokenB... */\n    tag_350:\n        /* \"contracts/SimpleSwap_flattened.sol\":56304:56400  (token0, token1) = tokenA < tokenB... */\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":56158:56407  function _sortTokens(address tokenA, address tokenB)... */\n      swap2\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":36966:37834  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_24:\n      swap1\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":37103:37650  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"contracts/SimpleSwap_flattened.sol\":36966:37834  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"contracts/SimpleSwap_flattened.sol\":37103:37650  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_353\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"contracts/SimpleSwap_flattened.sol\":37677:37692  returnSize == 0 */\n      tag_355\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      dup2\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":37695:37721  address(token).code.length */\n      extcodesize\n        /* \"contracts/SimpleSwap_flattened.sol\":37695:37726  address(token).code.length == 0 */\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":37677:37745  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_357:\n        /* \"contracts/SimpleSwap_flattened.sol\":37660:37828  if (... */\n      tag_358\n      jumpi\n        /* \"contracts/SimpleSwap_flattened.sol\":36966:37834  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSwap_flattened.sol\":37660:37828  if (... */\n    tag_358:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"contracts/SimpleSwap_flattened.sol\":37777:37817  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/SimpleSwap_flattened.sol\":37777:37817  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"contracts/SimpleSwap_flattened.sol\":43692:61329  contract SimpleSwap is ERC20, ISimpleSwap {... */\n      mstore\n      0x24\n      swap1\n        /* \"contracts/SimpleSwap_flattened.sol\":37777:37817  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"contracts/SimpleSwap_flattened.sol\":37677:37745  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_355:\n        /* \"contracts/SimpleSwap_flattened.sol\":37744:37745  1 */\n      0x01\n        /* \"contracts/SimpleSwap_flattened.sol\":37729:37745  returnValue != 1 */\n      eq\n      iszero\n        /* \"contracts/SimpleSwap_flattened.sol\":37677:37745  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_357)\n        /* \"contracts/SimpleSwap_flattened.sol\":37103:37650  assembly (\"memory-safe\") {... */\n    tag_353:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n\n    auxdata: 0xa26469706673582212201c1259246d487ef36f298395023713189aa75f589196216abc2a24b89d13bd4064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x22B JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH13 0x53696D706C6553776170204C5 PUSH1 0x9C SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x22B JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x53532D4C5 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x22B JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x30E JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x20D JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x2AB JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x24A JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH0 SWAP3 PUSH2 0x23F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x22B JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x221 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x20D JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x1AA JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x14A JUMPI SWAP2 DUP2 SWAP3 PUSH0 SWAP3 PUSH2 0x13F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1337 SWAP1 DUP2 PUSH2 0x31D DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP6 DUP2 LT PUSH2 0x192 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x17A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x130 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x16C JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x203 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F8 JUMPI POP PUSH2 0x102 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xF0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xBA JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x293 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x27B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xCF JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x26D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x304 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2F9 JUMPI POP PUSH2 0xA0 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EC JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x8E JUMP JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDB2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD30 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD13 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xC34 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xC19 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0x901754D7 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI PUSH4 0xE8E33700 EQ PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xD8 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x462 JUMPI PUSH2 0x113 TIMESTAMP PUSH1 0xE4 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP4 SWAP1 DUP2 AND SWAP3 PUSH2 0x12F DUP5 DUP7 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST DUP8 ISZERO ISZERO DUP1 PUSH2 0x459 JUMPI JUMPDEST ISZERO PUSH2 0x422 JUMPI PUSH2 0x159 SWAP2 DUP7 DUP10 LT ISZERO DUP1 PUSH2 0x418 JUMPI JUMPDEST PUSH2 0x154 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1283 JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 PUSH1 0x1 DUP9 SLOAD SWAP9 ADD SLOAD SWAP2 DUP9 ISZERO DUP1 PUSH2 0x410 JUMPI JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP PUSH2 0x1A2 DUP10 DUP10 PUSH2 0xF5F JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI POP DUP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2E4 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2C5 JUMPI POP POP JUMPDEST SWAP6 JUMPDEST PUSH2 0x1D7 DUP10 ADDRESS CALLER DUP9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x1E3 DUP11 ADDRESS CALLER DUP10 PUSH2 0x11B4 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x24F DUP11 PUSH2 0x249 DUP12 PUSH2 0x2AE SWAP12 PUSH2 0x255 SWAP9 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP16 PUSH2 0x22A DUP2 PUSH1 0x2 SLOAD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH2 0xF72 JUMP JUMPDEST SWAP4 PUSH2 0xF72 JUMP JUMPDEST SWAP3 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x2DB DUP3 PUSH2 0x2D6 DUP2 DUP5 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1C9 JUMP JUMPDEST SWAP2 SWAP10 SWAP2 PUSH2 0x31C DUP10 PUSH2 0x317 DUP14 DUP14 PUSH2 0xF5F JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST SWAP3 DUP1 DUP5 GT PUSH2 0x3BF JUMPI POP POP DUP2 LT PUSH2 0x389 JUMPI JUMPDEST SWAP8 PUSH2 0x33F DUP8 PUSH2 0x317 DUP11 PUSH1 0x2 SLOAD SWAP1 PUSH2 0xF5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34B JUMPI SWAP6 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B739BAB33334B1B4B2B73A1021 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP SWAP9 POP POP PUSH2 0x3D2 DUP10 PUSH2 0x317 DUP10 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP8 DUP9 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E73756666696369656E742041 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 ISZERO PUSH2 0x191 JUMP JUMPDEST POP DUP8 DUP11 LT ISZERO PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C696420616D6F756E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 ISZERO ISZERO PUSH2 0x138 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x47F PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x487 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x4CF PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x4D7 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x462 JUMPI PUSH2 0x4FE TIMESTAMP PUSH1 0xC4 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP5 SWAP1 DUP2 AND SWAP2 SWAP1 PUSH2 0x51B DUP7 DUP5 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x6B9 JUMPI PUSH2 0x52A SWAP2 PUSH2 0x1283 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 PUSH1 0x1 DUP9 SLOAD SWAP9 ADD SLOAD SWAP8 PUSH1 0x2 SLOAD SWAP8 PUSH2 0x57E PUSH2 0x573 DUP11 PUSH2 0x317 DUP6 DUP10 PUSH2 0xF5F JUMP JUMPDEST SWAP10 PUSH2 0x317 DUP13 DUP9 PUSH2 0xF5F JUMP JUMPDEST SWAP8 PUSH1 0x64 CALLDATALOAD DUP11 LT ISZERO DUP1 PUSH2 0x6AD JUMPI JUMPDEST PUSH2 0x594 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST CALLER ISZERO PUSH2 0x69A JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP7 DUP2 LT PUSH2 0x67F JUMPI PUSH2 0x628 DUP12 PUSH1 0x40 SWAP14 SWAP6 PUSH2 0x623 DUP14 DUP8 PUSH2 0x614 DUP6 PUSH2 0x62E SWAP14 SWAP13 SWAP11 DUP16 SWAP11 PUSH0 DUP13 PUSH2 0x24F SWAP14 DUP9 SWAP14 CALLER DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST SWAP4 PUSH2 0x1097 JUMP JUMPDEST PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 DUP7 MLOAD DUP1 PUSH2 0x670 CALLER SWAP5 DUP9 DUP11 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP7 SWAP1 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x84 CALLDATALOAD DUP10 LT ISZERO PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964206C6971756964697479 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x70B PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x713 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x72E SWAP1 DUP4 AND DUP3 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x758 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP6 MSTORE ADD SLOAD PUSH1 0x20 DUP5 ADD SWAP3 DUP2 DUP5 MSTORE ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7B5 JUMPI JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST MLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7AD SWAP2 MLOAD SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP ISZERO ISZERO DUP5 PUSH2 0x776 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x7E5 PUSH2 0x7DB PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x8E6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x8D2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x8AE JUMPI POP PUSH1 0x1 EQ PUSH2 0x850 JUMPI JUMPDEST PUSH2 0x2AE DUP4 PUSH2 0x844 DUP2 DUP6 SUB DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x894 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x844 PUSH2 0x834 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x844 SWAP1 POP PUSH2 0x834 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x817 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x909 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x911 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x96C PUSH2 0xEBB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x462 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x462 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x462 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x462 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI PUSH2 0x9F8 TIMESTAMP PUSH1 0x84 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0xA0F PUSH1 0x60 DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x40 CALLDATASIZE DUP7 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0xBD1 JUMPI DUP2 DUP6 MSTORE DUP3 ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xA39 PUSH1 0x24 DUP3 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP3 PUSH1 0x1 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x44 PUSH2 0xA4E SWAP2 ADD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 DUP4 SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0xA8A DUP6 ISZERO ISZERO PUSH2 0xEE7 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0xBC8 JUMPI JUMPDEST PUSH2 0xA9C SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xAA7 DUP3 DUP6 DUP8 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xAB0 DUP11 PUSH2 0x1073 JUMP JUMPDEST MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0xABD DUP11 PUSH2 0x1073 JUMP JUMPDEST MLOAD LT PUSH2 0xB8D JUMPI PUSH2 0x24F PUSH2 0xAFF DUP7 PUSH2 0xB10 SWAP7 PUSH2 0x2D6 DUP14 SWAP13 SWAP14 SWAP12 PUSH2 0xAE3 DUP5 DUP14 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP13 PUSH2 0xAF7 SWAP1 PUSH2 0x1073 JUMP JUMPDEST MLOAD SWAP1 DUP14 PUSH2 0x11FF JUMP JUMPDEST SWAP3 PUSH2 0xB09 DUP11 PUSH2 0x1073 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0xB19 DUP5 PUSH2 0x1073 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 PUSH1 0x40 CALLER SWAP3 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB74 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xA93 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x92DCECC2D8D2C840E0C2E8D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xC4D PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xC55 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH0 NOT DUP2 LT PUSH2 0xC93 JUMPI JUMPDEST POP PUSH2 0x7E5 SWAP4 POP PUSH2 0x111D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xCF8 JUMPI DUP5 ISZERO PUSH2 0xCE5 JUMPI CALLER ISZERO PUSH2 0xCD2 JUMPI PUSH2 0x7E5 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xC88 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xD49 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCD2 JUMPI CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xE63 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x8D2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x8AE JUMPI POP PUSH1 0x1 EQ PUSH2 0xE05 JUMPI PUSH2 0x2AE DUP4 PUSH2 0x844 DUP2 DUP6 SUB DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xE49 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x844 PUSH2 0x834 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE31 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDD9 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH2 0x7AD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xEEE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2E4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2E4 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF89 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFD1 SWAP1 PUSH2 0xFCB PUSH2 0xFD7 SWAP5 PUSH2 0xFB3 DUP4 ISZERO ISZERO PUSH2 0xEE7 JUMP JUMPDEST DUP5 ISZERO ISZERO DUP1 PUSH2 0xFDA JUMPI JUMPDEST PUSH2 0xFC5 SWAP1 PUSH2 0xF24 JUMP JUMPDEST DUP3 PUSH2 0xF5F JUMP JUMPDEST SWAP3 PUSH2 0xF72 JUMP JUMPDEST SWAP1 PUSH2 0xF7F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFFF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFFF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x103C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x111958591B1A5B99481C185CDCD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x462 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2E4 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x10AB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4964656E746963616C20746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x135A5B881B9BDD081B595D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x69A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2B2 JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x119B JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x11FD SWAP2 PUSH2 0x11F8 PUSH1 0x84 DUP4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x11FD SWAP2 PUSH2 0x11F8 PUSH1 0x64 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP3 SWAP4 SWAP2 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x124D DUP7 PUSH2 0xFE3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP4 MSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x129A JUMPI SWAP2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x12F6 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x12ED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x12CD JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLT MSIZE 0x24 PUSH14 0x487EF36F298395023713189AA75F PC SWAP2 SWAP7 0x21 PUSH11 0xBC2A24B89D13BD4064736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "43692:17637:0:-:0;;;;;;;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;12697:13;43692:17637;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;12697:13;43692:17637;;;;;12697:13;43692:17637;;;;-1:-1:-1;;;;;43692:17637:0;;;;12720:17;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;12697:13;43692:17637;;;;;12720:17;43692:17637;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;12720:17;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;12720:17;43692:17637;;;;;;;;;;12697:13;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12720:17;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;-1:-1:-1;43692:17637:0;;12720:17;43692:17637;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;12720:17;43692:17637;;-1:-1:-1;43692:17637:0;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;12697:13;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;12697:13;43692:17637;;;;;;;;;;12697:13;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12697:13;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 3954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_14333": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_callOptionalReturn": {
									"entryPoint": 4766,
									"id": 1278,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_getAmountOut": {
									"entryPoint": 3997,
									"id": 2066,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_safeTransfer": {
									"entryPoint": 4607,
									"id": 901,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 4532,
									"id": 928,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_sortTokens": {
									"entryPoint": 4739,
									"id": 2094,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"fun_transfer": {
									"entryPoint": 4381,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_updateReserves": {
									"entryPoint": 4666,
									"id": 2258,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"memory_array_index_access_uint256_dyn": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_address": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_2fd1": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_379a": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_564d": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_c195": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e5fd": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c8063054d50d414610e6d57806306fdde0314610db2578063095ea7b314610d3057806318160ddd14610d1357806323b872dd14610c34578063313ce56714610c1957806338ed17391461098257806370a082311461094b578063901754d7146108f057806395d89b41146107f0578063a9059cbb146107bf578063ac41865a146106f2578063baa2abde146104b6578063dd62ed3e146104665763e8e33700146100be575f80fd5b3461046257610100366003190112610462576100d8610ebb565b6100e0610ed1565b606435916044359160a435916084359160c4356001600160a01b03811690819003610462576101134260e4351015611035565b6001600160a01b03828116939081169261012f848614156110a4565b87151580610459575b1561042257610159918689101580610418575b610154906110e3565b611283565b9460018060a01b0382165f52600560205260405f2060018060a01b0387165f5260205260405f20966001885498015491881580610410575b156103065750506101a28989610f5f565b5f60038211156102f85750808060011c600181018091116102e457905b8282106102c55750505b955b6101d7893033886111b4565b6101e38a3033896111b4565b83156102b25761024f8a6102498b6102ae9b610255985f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208f61022a81600254610f72565b60025584845283825260408420818154019055604051908152a3610f72565b93610f72565b9261123a565b604080518681526020810188905290810184905233907f43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b7090606090a4604051938493846040919493926060820195825260208201520152565b0390f35b63ec442f0560e01b5f525f60045260245ffd5b9091506102db826102d68184610f7f565b610f72565b60011c906101bf565b634e487b7160e01b5f52601160045260245ffd5b90156101c9575060016101c9565b91999161031c896103178d8d610f5f565b610f7f565b928084116103bf5750508110610389575b9761033f876103178a60025490610f5f565b801561034b57956101cb565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d24b739bab33334b1b4b2b73a102160911b6044820152606490fd5b92509850506103d2896103178984610f5f565b9788101561032d5760405162461bcd60e51b815260206004820152600e60248201526d496e73756666696369656e74204160901b6044820152606490fd5b508215610191565b50878a101561014b565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420616d6f756e747360881b6044820152606490fd5b50881515610138565b5f80fd5b346104625760403660031901126104625761047f610ebb565b610487610ed1565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346104625760e0366003190112610462576104cf610ebb565b6104d7610ed1565b9060a43590604435906001600160a01b0383168303610462576104fe4260c4351015611035565b6001600160a01b0381811694908116919061051b868414156110a4565b83156106b95761052a91611283565b94909260018060a01b03841693845f52600560205260405f2060018060a01b0388165f5260205260405f209660018854980154976002549761057e6105738a6103178589610f5f565b996103178c88610f5f565b976064358a1015806106ad575b610594906110e3565b331561069a57335f525f60205260405f205486811061067f576106288b60409d956106238d876106148561062e9d9c9a8f9a5f8c61024f9d889d3384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a36111ff565b6001600160a01b0389166111ff565b611097565b93611097565b7fd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c18651806106703394888a846040919493926060820195825260208201520152565b0390a482519182526020820152f35b869063391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b5060843589101561058b565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206c697175696469747960781b6044820152606490fd5b346104625760403660031901126104625761070b610ebb565b610713610ed1565b906001600160a01b039081169061072e9083168214156110a4565b5f52600560205260405f209060018060a01b03165f5260205260405f206040519061075882610fe3565b61077c600182549283855201546020840192818452151590816107b5575b50610f24565b5190670de0b6b3a7640000820291808304670de0b6b3a764000014901517156102e4576020916107ad915190610f7f565b604051908152f35b9050151584610776565b34610462576040366003190112610462576107e56107db610ebb565b602435903361111d565b602060405160018152f35b34610462575f366003190112610462576040515f6004548060011c906001811680156108e6575b6020831081146108d2578285529081156108ae5750600114610850575b6102ae8361084481850382611013565b60405191829182610e91565b91905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b915f905b80821061089457509091508101602001610844610834565b91926001816020925483858801015201910190929161087c565b60ff191660208086019190915291151560051b840190910191506108449050610834565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610817565b3461046257604036600319011261046257610909610ebb565b610911610ed1565b9060018060a01b03165f52600560205260405f209060018060a01b03165f526020526040805f206001815491015482519182526020820152f35b34610462576020366003190112610462576001600160a01b0361096c610ebb565b165f525f602052602060405f2054604051908152f35b346104625760a03660031901126104625760043560443567ffffffffffffffff8111610462573660238201121561046257806004013567ffffffffffffffff8111610462573660248260051b8401011161046257606435906001600160a01b0382168203610462576109f8426084351015611035565b60028103610be55760405193610a0f606086611013565b6002855260208501936040368637855115610bd1578185528215610bd157610a3960248201611083565b9260011015610bd1576044610a4e9101611083565b60018060a01b03831692835f52600560205260405f2060018060a01b0383165f5260205260405f20916001835493015490610a8a851515610ee7565b83151580610bc8575b610a9c90610f24565b610aa7828587610f9d565b610ab08a611073565b52602435610abd8a611073565b5110610b8d5761024f610aff86610b10966102d68d9c9d9b610ae3848d309033906111b4565b6001600160a01b0387169c610af790611073565b51908d6111ff565b92610b098a611073565b5190611097565b610b1984611073565b5160405191825260208201527fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e4606260403392a4604051918291602083019060208452518091526040830191905f5b818110610b74575050500390f35b8251845285945060209384019390920191600101610b66565b60405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081bdd5d1c1d5d606a1b6044820152606490fd5b50811515610a93565b634e487b7160e01b5f52603260045260245ffd5b60405162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840e0c2e8d60a31b6044820152606490fd5b34610462575f36600319011261046257602060405160128152f35b3461046257606036600319011261046257610c4d610ebb565b610c55610ed1565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610c93575b506107e5935061111d565b838110610cf8578415610ce5573315610cd2576107e5945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610c88565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b34610462575f366003190112610462576020600254604051908152f35b3461046257604036600319011261046257610d49610ebb565b602435903315610ce5576001600160a01b0316908115610cd257335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610462575f366003190112610462576040515f6003548060011c90600181168015610e63575b6020831081146108d2578285529081156108ae5750600114610e05576102ae8361084481850382611013565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b808210610e4957509091508101602001610844610834565b919260018160209254838588010152019101909291610e31565b91607f1691610dd9565b346104625760603660031901126104625760206107ad604435602435600435610f9d565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361046257565b602435906001600160a01b038216820361046257565b15610eee57565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b15610f2b57565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b818102929181159184041417156102e457565b919082018092116102e457565b8115610f89570490565b634e487b7160e01b5f52601260045260245ffd5b610fd190610fcb610fd794610fb3831515610ee7565b84151580610fda575b610fc590610f24565b82610f5f565b92610f72565b90610f7f565b90565b50801515610fbc565b6040810190811067ffffffffffffffff821117610fff57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610fff57604052565b1561103c57565b60405162461bcd60e51b815260206004820152600f60248201526e111958591b1a5b99481c185cdcd959608a1b6044820152606490fd5b805160011015610bd15760400190565b356001600160a01b03811681036104625790565b919082039182116102e457565b156110ab57565b60405162461bcd60e51b815260206004820152601060248201526f4964656e746963616c20746f6b656e7360801b6044820152606490fd5b156110ea57565b60405162461bcd60e51b815260206004820152600b60248201526a135a5b881b9bdd081b595d60aa1b6044820152606490fd5b6001600160a01b031690811561069a576001600160a01b03169182156102b257815f525f60205260405f205481811061119b57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526111fd916111f8608483611013565b61129e565b565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526111fd916111f8606483611013565b9060019293916040519461124d86610fe3565b855260208501928352838060a01b03165f52600560205260405f2090838060a01b03165f5260205260405f209251835551910155565b6001600160a01b03828116908216101561129a5791565b9091565b905f602091828151910182855af1156112f6575f513d6112ed57506001600160a01b0381163b155b6112cd5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156112c6565b6040513d5f823e3d90fdfea26469706673582212201c1259246d487ef36f298395023713189aa75f589196216abc2a24b89d13bd4064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDB2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD30 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD13 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xC34 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xC19 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0x901754D7 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI PUSH4 0xE8E33700 EQ PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xD8 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x462 JUMPI PUSH2 0x113 TIMESTAMP PUSH1 0xE4 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP4 SWAP1 DUP2 AND SWAP3 PUSH2 0x12F DUP5 DUP7 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST DUP8 ISZERO ISZERO DUP1 PUSH2 0x459 JUMPI JUMPDEST ISZERO PUSH2 0x422 JUMPI PUSH2 0x159 SWAP2 DUP7 DUP10 LT ISZERO DUP1 PUSH2 0x418 JUMPI JUMPDEST PUSH2 0x154 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1283 JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 PUSH1 0x1 DUP9 SLOAD SWAP9 ADD SLOAD SWAP2 DUP9 ISZERO DUP1 PUSH2 0x410 JUMPI JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP PUSH2 0x1A2 DUP10 DUP10 PUSH2 0xF5F JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI POP DUP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2E4 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2C5 JUMPI POP POP JUMPDEST SWAP6 JUMPDEST PUSH2 0x1D7 DUP10 ADDRESS CALLER DUP9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x1E3 DUP11 ADDRESS CALLER DUP10 PUSH2 0x11B4 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x24F DUP11 PUSH2 0x249 DUP12 PUSH2 0x2AE SWAP12 PUSH2 0x255 SWAP9 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP16 PUSH2 0x22A DUP2 PUSH1 0x2 SLOAD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH2 0xF72 JUMP JUMPDEST SWAP4 PUSH2 0xF72 JUMP JUMPDEST SWAP3 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x2DB DUP3 PUSH2 0x2D6 DUP2 DUP5 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1C9 JUMP JUMPDEST SWAP2 SWAP10 SWAP2 PUSH2 0x31C DUP10 PUSH2 0x317 DUP14 DUP14 PUSH2 0xF5F JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST SWAP3 DUP1 DUP5 GT PUSH2 0x3BF JUMPI POP POP DUP2 LT PUSH2 0x389 JUMPI JUMPDEST SWAP8 PUSH2 0x33F DUP8 PUSH2 0x317 DUP11 PUSH1 0x2 SLOAD SWAP1 PUSH2 0xF5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34B JUMPI SWAP6 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B739BAB33334B1B4B2B73A1021 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP SWAP9 POP POP PUSH2 0x3D2 DUP10 PUSH2 0x317 DUP10 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP8 DUP9 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E73756666696369656E742041 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 ISZERO PUSH2 0x191 JUMP JUMPDEST POP DUP8 DUP11 LT ISZERO PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C696420616D6F756E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 ISZERO ISZERO PUSH2 0x138 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x47F PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x487 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x4CF PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x4D7 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x462 JUMPI PUSH2 0x4FE TIMESTAMP PUSH1 0xC4 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP5 SWAP1 DUP2 AND SWAP2 SWAP1 PUSH2 0x51B DUP7 DUP5 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x6B9 JUMPI PUSH2 0x52A SWAP2 PUSH2 0x1283 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 PUSH1 0x1 DUP9 SLOAD SWAP9 ADD SLOAD SWAP8 PUSH1 0x2 SLOAD SWAP8 PUSH2 0x57E PUSH2 0x573 DUP11 PUSH2 0x317 DUP6 DUP10 PUSH2 0xF5F JUMP JUMPDEST SWAP10 PUSH2 0x317 DUP13 DUP9 PUSH2 0xF5F JUMP JUMPDEST SWAP8 PUSH1 0x64 CALLDATALOAD DUP11 LT ISZERO DUP1 PUSH2 0x6AD JUMPI JUMPDEST PUSH2 0x594 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST CALLER ISZERO PUSH2 0x69A JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP7 DUP2 LT PUSH2 0x67F JUMPI PUSH2 0x628 DUP12 PUSH1 0x40 SWAP14 SWAP6 PUSH2 0x623 DUP14 DUP8 PUSH2 0x614 DUP6 PUSH2 0x62E SWAP14 SWAP13 SWAP11 DUP16 SWAP11 PUSH0 DUP13 PUSH2 0x24F SWAP14 DUP9 SWAP14 CALLER DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST SWAP4 PUSH2 0x1097 JUMP JUMPDEST PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 DUP7 MLOAD DUP1 PUSH2 0x670 CALLER SWAP5 DUP9 DUP11 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP7 SWAP1 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x84 CALLDATALOAD DUP10 LT ISZERO PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964206C6971756964697479 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x70B PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x713 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x72E SWAP1 DUP4 AND DUP3 EQ ISZERO PUSH2 0x10A4 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x758 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP6 MSTORE ADD SLOAD PUSH1 0x20 DUP5 ADD SWAP3 DUP2 DUP5 MSTORE ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7B5 JUMPI JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST MLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7AD SWAP2 MLOAD SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP ISZERO ISZERO DUP5 PUSH2 0x776 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x7E5 PUSH2 0x7DB PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x8E6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x8D2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x8AE JUMPI POP PUSH1 0x1 EQ PUSH2 0x850 JUMPI JUMPDEST PUSH2 0x2AE DUP4 PUSH2 0x844 DUP2 DUP6 SUB DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x894 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x844 PUSH2 0x834 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x844 SWAP1 POP PUSH2 0x834 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x817 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0x909 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x911 PUSH2 0xED1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x96C PUSH2 0xEBB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x462 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x462 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x462 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x462 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI PUSH2 0x9F8 TIMESTAMP PUSH1 0x84 CALLDATALOAD LT ISZERO PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0xA0F PUSH1 0x60 DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x40 CALLDATASIZE DUP7 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0xBD1 JUMPI DUP2 DUP6 MSTORE DUP3 ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xA39 PUSH1 0x24 DUP3 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP3 PUSH1 0x1 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x44 PUSH2 0xA4E SWAP2 ADD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 DUP4 SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0xA8A DUP6 ISZERO ISZERO PUSH2 0xEE7 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0xBC8 JUMPI JUMPDEST PUSH2 0xA9C SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xAA7 DUP3 DUP6 DUP8 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xAB0 DUP11 PUSH2 0x1073 JUMP JUMPDEST MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0xABD DUP11 PUSH2 0x1073 JUMP JUMPDEST MLOAD LT PUSH2 0xB8D JUMPI PUSH2 0x24F PUSH2 0xAFF DUP7 PUSH2 0xB10 SWAP7 PUSH2 0x2D6 DUP14 SWAP13 SWAP14 SWAP12 PUSH2 0xAE3 DUP5 DUP14 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP13 PUSH2 0xAF7 SWAP1 PUSH2 0x1073 JUMP JUMPDEST MLOAD SWAP1 DUP14 PUSH2 0x11FF JUMP JUMPDEST SWAP3 PUSH2 0xB09 DUP11 PUSH2 0x1073 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0xB19 DUP5 PUSH2 0x1073 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 PUSH1 0x40 CALLER SWAP3 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB74 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xA93 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x92DCECC2D8D2C840E0C2E8D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xC4D PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xC55 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH0 NOT DUP2 LT PUSH2 0xC93 JUMPI JUMPDEST POP PUSH2 0x7E5 SWAP4 POP PUSH2 0x111D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xCF8 JUMPI DUP5 ISZERO PUSH2 0xCE5 JUMPI CALLER ISZERO PUSH2 0xCD2 JUMPI PUSH2 0x7E5 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xC88 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH2 0xD49 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCD2 JUMPI CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xE63 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x8D2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x8AE JUMPI POP PUSH1 0x1 EQ PUSH2 0xE05 JUMPI PUSH2 0x2AE DUP4 PUSH2 0x844 DUP2 DUP6 SUB DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xE49 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x844 PUSH2 0x834 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xE31 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDD9 JUMP JUMPDEST CALLVALUE PUSH2 0x462 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x462 JUMPI PUSH1 0x20 PUSH2 0x7AD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x462 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xEEE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2E4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2E4 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF89 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFD1 SWAP1 PUSH2 0xFCB PUSH2 0xFD7 SWAP5 PUSH2 0xFB3 DUP4 ISZERO ISZERO PUSH2 0xEE7 JUMP JUMPDEST DUP5 ISZERO ISZERO DUP1 PUSH2 0xFDA JUMPI JUMPDEST PUSH2 0xFC5 SWAP1 PUSH2 0xF24 JUMP JUMPDEST DUP3 PUSH2 0xF5F JUMP JUMPDEST SWAP3 PUSH2 0xF72 JUMP JUMPDEST SWAP1 PUSH2 0xF7F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFFF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFFF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x103C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x111958591B1A5B99481C185CDCD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x462 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2E4 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x10AB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4964656E746963616C20746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x10EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x135A5B881B9BDD081B595D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x69A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x2B2 JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x119B JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x11FD SWAP2 PUSH2 0x11F8 PUSH1 0x84 DUP4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x11FD SWAP2 PUSH2 0x11F8 PUSH1 0x64 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP3 SWAP4 SWAP2 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x124D DUP7 PUSH2 0xFE3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP4 MSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x129A JUMPI SWAP2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x12F6 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x12ED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x12CD JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLT MSIZE 0x24 PUSH14 0x487EF36F298395023713189AA75F PC SWAP2 SWAP7 0x21 PUSH11 0xBC2A24B89D13BD4064736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "43692:17637:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;;;46632:55;46652:15;43692:17637;;46640:27;;46632:55;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;;;;;;;46921:45;46929:16;;;;46921:45;:::i;:::-;48788:18;;;:40;;;43692:17637;;;;49075:27;48879:28;;;;;:60;;;43692:17637;48858:118;;;:::i;:::-;49075:27;:::i;:::-;43692:17637;;;;;;;;;;49132:5;43692:17637;;;;;;;;;;;;;;;;;;;;;;;49283:13;;43692:17637;49311:13;;;:30;;;43692:17637;49307:651;;;49400:53;;49485:17;49400:53;;49485:17;:::i;:::-;43692:17637;60647:1;60643:5;;60647:1;;;60664:5;;43692:17637;;;;;;;;;;;60718:89;60725:5;;;;;;60639:226;;;49307:651;;59818:7;59811:4;;59791:10;59818:7;;:::i;:::-;59895;59811:4;;59791:10;59895:7;;:::i;:::-;18712:21;;18708:91;;50206:18;43692:17637;50186:18;43692:17637;;;50206:18;43692:17637;;18267:25;43692:17637;;17417:21;43692:17637;17417:21;43692:17637;17417:21;:::i;:::-;;43692:17637;;;;;;;;;;;;;;;;;;;;;18267:25;50186:18;:::i;:::-;50206;;:::i;:::-;;;:::i;:::-;43692:17637;;;;;;;;;;;;;;;;;;59791:10;;50241:153;;43692:17637;;50241:153;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;18708:91;18756:32;;;43692:17637;18756:32;43692:17637;;;;;18756:32;60718:89;60750:5;;;60778:9;60750:5;60778;;;;:::i;:::-;:9;:::i;:::-;43692:17637;;60718:89;;;43692:17637;;;;;;;;;;;;60639:226;60827:6;60823:42;60639:226;60823:42;60849:5;43692:17637;60639:226;;49307:651;49658:210;;;61289:31;61290:18;;49658:210;61290:18;;:::i;:::-;61289:31;:::i;:::-;57306:32;;;;;;57362:28;;;;43692:17637;;57302:419;49637:231;58165:32;49637:231;58166:20;49637:231;13957:12;43692:17637;58166:20;;:::i;58165:32::-;58215:13;;43692:17637;;49307:651;;;43692:17637;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;57302:419;61290:18;;;;;61289:31;61290:18;;;;;:::i;61289:31::-;57596:28;;;43692:17637;57302:419;43692:17637;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;49311:30;49328:13;;;49311:30;;48879:60;-1:-1:-1;48911:28:0;;;;48879:60;;43692:17637;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;48788:40;48810:18;;;;48788:40;;43692:17637;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;46632:55;46652:15;43692:17637;;46640:27;;46632:55;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;;;;;;;;46921:45;46929:16;;;;46921:45;:::i;:::-;51362:13;;43692:17637;;51488:27;;;:::i;:::-;43692:17637;;;;;;;;;;;;;;51545:5;43692:17637;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;-1:-1:-1;43692:17637:0;;;;;51670:13;;43692:17637;;13957:12;43692:17637;58818:20;58874:37;58817;58818:20;;;;;:::i;58817:37::-;58875:20;;;;;:::i;58874:37::-;43692:17637;;;51889:21;;;:46;;;43692:17637;51881:70;;;:::i;:::-;52025:10;19238:21;19234:89;;52025:10;43692:17637;;;;;;;;;17524:19;;;17520:115;;52218:18;52025:10;43692:17637;52025:10;;60233:6;52025:10;;60233:6;52025:10;52238:18;52025:10;;;;;43692:17637;52025:10;52238:18;52025:10;;;;43692:17637;;;;;;;;;;;13957:12;43692:17637;;13957:12;43692:17637;;;;;;18267:25;43692:17637;52025:10;18267:25;;60233:6;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;60233:6;:::i;:::-;52218:18;:::i;:::-;52238;;:::i;:::-;52273:155;43692:17637;;52025:10;52273:155;52025:10;52273:155;;;;43692:17637;;;;;;;;;;;;;;;;;;52273:155;;;;43692:17637;;;;;;;;;;17520:115;17570:50;;;;;43692:17637;17570:50;52025:10;43692:17637;;;;;;;;17570:50;19234:89;19282:30;;;43692:17637;19282:30;43692:17637;;;;;19282:30;51889:46;-1:-1:-1;43692:17637:0;;51914:21;;;51889:46;;43692:17637;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;43692:17637:0;;;;54821:45;;43692:17637;;54829:16;;;54821:45;:::i;:::-;43692:17637;;54896:5;43692:17637;;;;;54896:21;43692:17637;;;;;;-1:-1:-1;43692:17637:0;;;;-1:-1:-1;43692:17637:0;;;;;;;:::i;:::-;54927:63;43692:17637;;;;;;;;;;;;;;;;54935:17;;:38;;;;43692:17637;54927:63;;:::i;:::-;43692:17637;;55026:4;43692:17637;;;;;;55026:4;43692:17637;;;;;;;;;55009:38;43692:17637;;55009:38;;:::i;:::-;43692:17637;;;;;;54935:38;54956:17;;;;54935:38;;;43692:17637;;;;;;-1:-1:-1;;43692:17637:0;;;;14489:5;43692:17637;;:::i;:::-;;;4368:10;;14489:5;:::i;:::-;43692:17637;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;44465:57;43692:17637;;;;;44465:57;43692:17637;;;;;;-1:-1:-1;43692:17637:0;;;;;-1:-1:-1;43692:17637:0;44465:57;43692:17637;;44465:57;;43692:17637;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;-1:-1:-1;;;;;43692:17637:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;46632:55;46652:15;43692:17637;;46640:27;;46632:55;:::i;:::-;53214:1;53199:16;;43692:17637;;;;;;;;;:::i;:::-;53214:1;43692:17637;;;;;;;;;;;;;;;;;;;;;;53350:7;43692:17637;;;53350:7;:::i;:::-;43692:17637;;;;;;;53359:7;43692:17637;;53359:7;:::i;:::-;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;-1:-1:-1;43692:17637:0;;;;;53528:13;;43692:17637;53560:12;53552:39;53560:12;;;53552:39;:::i;:::-;53609:13;;;:31;;;43692:17637;53601:56;;;:::i;:::-;53750:45;;;;;:::i;:::-;53737:58;;;:::i;:::-;43692:17637;;;53813:10;;;:::i;:::-;43692:17637;53813:26;43692:17637;;54182:23;54148:20;53954:4;54182:23;53954:4;54014:10;53954:4;;;;53961:8;53954:4;;;53934:10;;53961:8;;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;;54014:10;;;:::i;:::-;43692:17637;54014:10;;;:::i;54148:20::-;54195:10;;;;:::i;:::-;43692:17637;54182:23;;:::i;:::-;54277:10;;;:::i;:::-;43692:17637;;;;;;;;;;54231:57;43692:17637;53934:10;54231:57;;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;53609:31;-1:-1:-1;53626:14:0;;;53609:31;;43692:17637;;;;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;13810:2;43692:17637;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;43692:17637:0;;;;;;;;;;;;;;;4368:10;43692:17637;;;;;;;;;;;;;;-1:-1:-1;;21862:36:0;;21858:387;;43692:17637;16110:5;;;;;:::i;21858:387::-;21918:24;;;21914:208;;21065:19;;21061:89;;4368:10;21163:21;21159:90;;16110:5;43692:17637;;;;;;;;;;;;;;4368:10;43692:17637;-1:-1:-1;43692:17637:0;;;;;-1:-1:-1;43692:17637:0;;;;;21858:387;;;21159:90;21207:31;;;43692:17637;21207:31;43692:17637;;;;;21207:31;21061:89;21107:32;;;43692:17637;21107:32;43692:17637;;;;;21107:32;21914:208;21969:138;;;;;43692:17637;21969:138;4368:10;43692:17637;;;;;;;;21969:138;43692:17637;;;;;;-1:-1:-1;;43692:17637:0;;;;;13957:12;43692:17637;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;:::i;:::-;;;4368:10;;21065:19;21061:89;;-1:-1:-1;;;;;43692:17637:0;;21163:21;;21159:90;;4368:10;43692:17637;;;;;;;;;-1:-1:-1;43692:17637:0;;;;;-1:-1:-1;43692:17637:0;;;;;;;21337:31;43692:17637;4368:10;21337:31;;43692:17637;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;12886:5;43692:17637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;12886:5;43692:17637;;;;;;;;;;;;-1:-1:-1;43692:17637:0;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;43692:17637:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;43692:17637:0;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;55443:351;55766:20;55443:351;55740:21;55739:48;55443:351;55611:39;55619:12;;;55611:39;:::i;:::-;55668:13;;;:31;;;55443:351;55660:56;;;:::i;:::-;55740:21;;:::i;:::-;55766:20;;:::i;:::-;55739:48;;:::i;:::-;55443:351;:::o;55668:31::-;-1:-1:-1;55685:14:0;;;55668:31;;43692:17637;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;43692:17637:0;;;;;-1:-1:-1;43692:17637:0;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;53364:1;43692:17637;;;;;;;:::o;:::-;;-1:-1:-1;;;;;43692:17637:0;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;43692:17637:0;;;;;;;;;;;;-1:-1:-1;;;43692:17637:0;;;;;;;16517:330;-1:-1:-1;;;;;43692:17637:0;;16630:18;;16626:86;;-1:-1:-1;;;;;43692:17637:0;;16725:16;;16721:86;;43692:17637;16646:1;43692:17637;16646:1;43692:17637;;;16646:1;43692:17637;;17524:19;;;17520:115;;43692:17637;18267:25;43692:17637;;;;16646:1;43692:17637;16646:1;43692:17637;;;;16646:1;43692:17637;;;16646:1;43692:17637;16646:1;43692:17637;;;16646:1;43692:17637;;;;;;;;;;;;18267:25;16517:330::o;17520:115::-;17570:50;;;;16646:1;17570:50;;43692:17637;;;;;;16646:1;17570:50;29634:260;43692:17637;;-1:-1:-1;;;29824:53:0;;;;-1:-1:-1;;;;;43692:17637:0;;;29824:53;;;43692:17637;;;;;;;;;;;;;;;;;29824:53;;;;;;;43692:17637;29824:53;:::i;:::-;;:::i;:::-;29634:260::o;29205:190::-;43692:17637;;-1:-1:-1;;;29344:43:0;;;;-1:-1:-1;;;;;43692:17637:0;;;29344:43;;;43692:17637;;;;;;;;;29344:43;;;;;;;43692:17637;29344:43;:::i;59155:217::-;;43692:17637;59155:217;;;43692:17637;;;;;;:::i;:::-;;;59335:30;;;43692:17637;;;;;;;;;-1:-1:-1;43692:17637:0;59311:5;59335:30;43692:17637;;-1:-1:-1;43692:17637:0;59311:21;43692:17637;;;;;;-1:-1:-1;43692:17637:0;;;;-1:-1:-1;43692:17637:0;;;;;;;;;59155:217::o;56158:249::-;-1:-1:-1;;;;;43692:17637:0;;;;;;56323:15;43692:17637;;;56158:249;:::o;56323:77::-;56304:96;56158:249;:::o;36966:868::-;;-1:-1:-1;37103:547:0;36966:868;37103:547;;;;;;;;;;;;-1:-1:-1;37103:547:0;;37677:15;;-1:-1:-1;;;;;;43692:17637:0;;37695:26;:31;37677:68;37660:168;;36966:868;:::o;37660:168::-;-1:-1:-1;;;;37777:40:0;;;-1:-1:-1;;;;;43692:17637:0;;;;37777:40;43692:17637;;;37777:40;37677:68;37744:1;37729:16;;37677:68;;37103:547;;;;-1:-1:-1;37103:547:0;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "983800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"allowance(address,address)": "2851",
								"approve(address,uint256)": "24339",
								"balanceOf(address)": "2551",
								"decimals()": "255",
								"getAmountOut(uint256,uint256,uint256)": "536",
								"getPrice(address,address)": "5314",
								"name()": "infinite",
								"pools(address,address)": "4856",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2314",
								"transfer(address,uint256)": "50966",
								"transferFrom(address,address,uint256)": "75537"
							},
							"internal": {
								"_calculateLiquidity(uint256,uint256,uint256)": "infinite",
								"_calculateOptimalDeposit(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_calculateWithdrawalAmounts(uint256,uint256,uint256)": "infinite",
								"_quote(uint256,uint256,uint256)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_sortTokens(address,address)": "68",
								"_sqrt(uint256)": "infinite",
								"_transferTokens(address,address,uint256,uint256)": "infinite",
								"_updateReserves(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "53696D706C6553776170204C5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9C"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "53532D4C5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 12720,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12697,
									"end": 12710,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43692,
									"end": 61329,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c1259246d487ef36f298395023713189aa75f589196216abc2a24b89d13bd4064736f6c634300081e0033",
									".code": [
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "54D50D4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "38ED1739"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "901754D7"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "AC41865A"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "BAA2ABDE"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E8E33700"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 46652,
											"end": 46667,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 46632,
											"end": 46687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 46921,
											"end": 46966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48806,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 49102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 48879,
											"end": 48907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48907,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48907,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48907,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48858,
											"end": 48976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 48858,
											"end": 48976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48858,
											"end": 48976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 48858,
											"end": 48976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48858,
											"end": 48976,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 48858,
											"end": 48976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 49102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 49075,
											"end": 49102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 49102,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49075,
											"end": 49102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49132,
											"end": 49137,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49283,
											"end": 49296,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 49283,
											"end": 49296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49324,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49400,
											"end": 49453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49400,
											"end": 49453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49485,
											"end": 49502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 49400,
											"end": 49453,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 49400,
											"end": 49453,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 49485,
											"end": 49502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 49485,
											"end": 49502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49485,
											"end": 49502,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 49485,
											"end": 49502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60647,
											"end": 60648,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60643,
											"end": 60648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60643,
											"end": 60648,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60647,
											"end": 60648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60647,
											"end": 60648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60647,
											"end": 60648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60664,
											"end": 60669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60664,
											"end": 60669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60725,
											"end": 60730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 59825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59811,
											"end": 59815,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59791,
											"end": 59801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 59825,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 59825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59818,
											"end": 59825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 59825,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59818,
											"end": 59825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59895,
											"end": 59902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59811,
											"end": 59815,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59791,
											"end": 59801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59895,
											"end": 59902,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 59895,
											"end": 59902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59895,
											"end": 59902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59895,
											"end": 59902,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59895,
											"end": 59902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18712,
											"end": 18733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18712,
											"end": 18733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18708,
											"end": 18799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 50186,
											"end": 50204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17417,
											"end": 17438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17438,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 50186,
											"end": 50204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50186,
											"end": 50204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50186,
											"end": 50204,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 50186,
											"end": 50204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50206,
											"end": 50224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50206,
											"end": 50224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 50206,
											"end": 50224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59791,
											"end": 59801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59791,
											"end": 59801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50241,
											"end": 50394,
											"name": "PUSH",
											"source": 0,
											"value": "43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70"
										},
										{
											"begin": 50241,
											"end": 50394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50241,
											"end": 50394,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18799,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18708,
											"end": 18799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18756,
											"end": 18788,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F05"
										},
										{
											"begin": 18756,
											"end": 18788,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18756,
											"end": 18788,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60750,
											"end": 60755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60750,
											"end": 60755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60750,
											"end": 60755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 60750,
											"end": 60755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60778,
											"end": 60783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60778,
											"end": 60783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60778,
											"end": 60787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60787,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 60778,
											"end": 60787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60718,
											"end": 60807,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60823,
											"end": 60865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 60823,
											"end": 60865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60849,
											"end": 60854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 60639,
											"end": 60865,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49658,
											"end": 49868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49658,
											"end": 49868,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 49658,
											"end": 49868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 49658,
											"end": 49868,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61290,
											"end": 61308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61289,
											"end": 61320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 57306,
											"end": 57338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57362,
											"end": 57390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57362,
											"end": 57390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57362,
											"end": 57390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57362,
											"end": 57390,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57302,
											"end": 57721,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 57302,
											"end": 57721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49637,
											"end": 49868,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 58165,
											"end": 58197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 49637,
											"end": 49868,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 49637,
											"end": 49868,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13957,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58166,
											"end": 58186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58165,
											"end": 58197,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 58165,
											"end": 58197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58215,
											"end": 58228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58215,
											"end": 58228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 49307,
											"end": 49958,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E74206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A1021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57302,
											"end": 57721,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 57302,
											"end": 57721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61290,
											"end": 61308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61290,
											"end": 61308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 61289,
											"end": 61320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57596,
											"end": 57624,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57596,
											"end": 57624,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57596,
											"end": 57624,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57302,
											"end": 57721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742041"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49328,
											"end": 49341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49328,
											"end": 49341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49328,
											"end": 49341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 49311,
											"end": 49341,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48911,
											"end": 48939,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48911,
											"end": 48939,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 48911,
											"end": 48939,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48911,
											"end": 48939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 48879,
											"end": 48939,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616D6F756E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48810,
											"end": 48828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48810,
											"end": 48828,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 48810,
											"end": 48828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48810,
											"end": 48828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 48788,
											"end": 48828,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 46652,
											"end": 46667,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 46632,
											"end": 46687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46929,
											"end": 46945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 46921,
											"end": 46966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 46921,
											"end": 46966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51488,
											"end": 51515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 51488,
											"end": 51515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51488,
											"end": 51515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 51488,
											"end": 51515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51488,
											"end": 51515,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 51488,
											"end": 51515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51550,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51670,
											"end": 51683,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 51670,
											"end": 51683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 13957,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 58874,
											"end": 58911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 58817,
											"end": 58854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58818,
											"end": 58838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58817,
											"end": 58854,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 58817,
											"end": 58854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58875,
											"end": 58895,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 58875,
											"end": 58895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 58875,
											"end": 58895,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 58875,
											"end": 58895,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58875,
											"end": 58895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58875,
											"end": 58895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58874,
											"end": 58911,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 58874,
											"end": 58911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51910,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51910,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51881,
											"end": 51951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 51881,
											"end": 51951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51881,
											"end": 51951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 51881,
											"end": 51951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51881,
											"end": 51951,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 51881,
											"end": 51951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19234,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19234,
											"end": 19323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52218,
											"end": 52236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13957,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13957,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 60233,
											"end": 60239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 60233,
											"end": 60239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 60233,
											"end": 60239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52218,
											"end": 52236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 52218,
											"end": 52236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52218,
											"end": 52236,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 52218,
											"end": 52236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 52238,
											"end": 52256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 52238,
											"end": 52256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "PUSH",
											"source": 0,
											"value": "D765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52428,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "PUSH",
											"source": 0,
											"value": "391434E3"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "PUSH",
											"source": 0,
											"value": "E2"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52025,
											"end": 52035,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19234,
											"end": 19323,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19234,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19282,
											"end": 19312,
											"name": "PUSH",
											"source": 0,
											"value": "4B637E8F"
										},
										{
											"begin": 19282,
											"end": 19312,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 19282,
											"end": 19312,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19282,
											"end": 19312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19282,
											"end": 19312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51914,
											"end": 51935,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51914,
											"end": 51935,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51914,
											"end": 51935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 51889,
											"end": 51935,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54821,
											"end": 54866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 54821,
											"end": 54866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54829,
											"end": 54845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54829,
											"end": 54845,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54829,
											"end": 54845,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54821,
											"end": 54866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 54821,
											"end": 54866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54821,
											"end": 54866,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 54821,
											"end": 54866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54896,
											"end": 54901,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54896,
											"end": 54917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54927,
											"end": 54990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54927,
											"end": 54990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54927,
											"end": 54990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54927,
											"end": 54990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54927,
											"end": 54990,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 54927,
											"end": 54990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55026,
											"end": 55030,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55026,
											"end": 55030,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55009,
											"end": 55047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55009,
											"end": 55047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55009,
											"end": 55047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55009,
											"end": 55047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55009,
											"end": 55047,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 55009,
											"end": 55047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 54973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 54973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 54973,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 54973,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 54935,
											"end": 54973,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14489,
											"end": 14494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14494,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14489,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44465,
											"end": 44522,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44465,
											"end": 44522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44465,
											"end": 44522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44465,
											"end": 44522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44465,
											"end": 44522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46652,
											"end": 46667,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46640,
											"end": 46667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 46632,
											"end": 46687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46632,
											"end": 46687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53199,
											"end": 53215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53199,
											"end": 53215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53350,
											"end": 53357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53350,
											"end": 53357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 53350,
											"end": 53357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53350,
											"end": 53357,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 53350,
											"end": 53357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 53359,
											"end": 53366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53359,
											"end": 53366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 53359,
											"end": 53366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53359,
											"end": 53366,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 53359,
											"end": 53366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53528,
											"end": 53541,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53528,
											"end": 53541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53560,
											"end": 53572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53552,
											"end": 53591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 53560,
											"end": 53572,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53560,
											"end": 53572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53560,
											"end": 53572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53552,
											"end": 53591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53552,
											"end": 53591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53552,
											"end": 53591,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 53552,
											"end": 53591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53601,
											"end": 53657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 53601,
											"end": 53657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53601,
											"end": 53657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53601,
											"end": 53657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53601,
											"end": 53657,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 53601,
											"end": 53657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 53750,
											"end": 53795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 53750,
											"end": 53795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53737,
											"end": 53795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 53737,
											"end": 53795,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 53737,
											"end": 53795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 53737,
											"end": 53795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53737,
											"end": 53795,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 53737,
											"end": 53795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 53813,
											"end": 53823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 53813,
											"end": 53823,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 53813,
											"end": 53823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 53813,
											"end": 53823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53813,
											"end": 53823,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 53813,
											"end": 53823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53813,
											"end": 53839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 54148,
											"end": 54168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 53954,
											"end": 53958,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53934,
											"end": 53944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53934,
											"end": 53944,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53961,
											"end": 53969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54014,
											"end": 54024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 54014,
											"end": 54024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 54014,
											"end": 54024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54148,
											"end": 54168,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 54148,
											"end": 54168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54195,
											"end": 54205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54195,
											"end": 54205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 54182,
											"end": 54205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 54182,
											"end": 54205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54277,
											"end": 54287,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54277,
											"end": 54287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54287,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54277,
											"end": 54287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54231,
											"end": 54288,
											"name": "PUSH",
											"source": 0,
											"value": "CD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53934,
											"end": 53944,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54231,
											"end": 54288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54231,
											"end": 54288,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081BDD5D1C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53626,
											"end": 53640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 53609,
											"end": 53640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840E0C2E8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13810,
											"end": 13812,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21862,
											"end": 21898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21862,
											"end": 21898,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16110,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21918,
											"end": 21942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21918,
											"end": 21942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21918,
											"end": 21942,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 21914,
											"end": 22122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21065,
											"end": 21084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21065,
											"end": 21084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 21858,
											"end": 22245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "4A1406B1"
										},
										{
											"begin": 21207,
											"end": 21238,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 21207,
											"end": 21238,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21207,
											"end": 21238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21207,
											"end": 21238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21107,
											"end": 21139,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF05"
										},
										{
											"begin": 21107,
											"end": 21139,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21107,
											"end": 21139,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21107,
											"end": 21139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21107,
											"end": 21139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 22122,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 21914,
											"end": 22122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "PUSH",
											"source": 0,
											"value": "7DC7A0D9"
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21969,
											"end": 22107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13957,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21065,
											"end": 21084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21061,
											"end": 21150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21159,
											"end": 21249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55740,
											"end": 55761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 55739,
											"end": 55787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55611,
											"end": 55650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55619,
											"end": 55631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55619,
											"end": 55631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55619,
											"end": 55631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55611,
											"end": 55650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55611,
											"end": 55650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55611,
											"end": 55650,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55611,
											"end": 55650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55681,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55660,
											"end": 55716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 55660,
											"end": 55716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55660,
											"end": 55716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55660,
											"end": 55716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55660,
											"end": 55716,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 55660,
											"end": 55716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55740,
											"end": 55761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55740,
											"end": 55761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55740,
											"end": 55761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55740,
											"end": 55761,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 55740,
											"end": 55761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55786,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55766,
											"end": 55786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55786,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 55766,
											"end": 55786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55739,
											"end": 55787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55739,
											"end": 55787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55739,
											"end": 55787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55739,
											"end": 55787,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 55739,
											"end": 55787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55443,
											"end": 55794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55443,
											"end": 55794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55685,
											"end": 55699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55685,
											"end": 55699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55685,
											"end": 55699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 55668,
											"end": 55699,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111958591B1A5B99481C185CDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53364,
											"end": 53365,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4964656E746963616C20746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135A5B881B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16847,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16517,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 17520,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "PUSH",
											"source": 0,
											"value": "391434E3"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "PUSH",
											"source": 0,
											"value": "E2"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17570,
											"end": 17620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29634,
											"end": 29894,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29634,
											"end": 29894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29824,
											"end": 29877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29824,
											"end": 29877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29824,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29634,
											"end": 29894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29205,
											"end": 29395,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29205,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29344,
											"end": 29387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29344,
											"end": 29387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59155,
											"end": 59372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43692,
											"end": 61329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59335,
											"end": 59365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59335,
											"end": 59365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59335,
											"end": 59365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59311,
											"end": 59316,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59335,
											"end": 59365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59311,
											"end": 59332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59155,
											"end": 59372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56158,
											"end": 56407,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 56158,
											"end": 56407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56323,
											"end": 56338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56158,
											"end": 56407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56158,
											"end": 56407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56323,
											"end": 56400,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 56323,
											"end": 56400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56304,
											"end": 56400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56158,
											"end": 56407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56158,
											"end": 56407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36966,
											"end": 37834,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36966,
											"end": 37834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36966,
											"end": 37834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36966,
											"end": 37834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 37677,
											"end": 37692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37721,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37660,
											"end": 37828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 37660,
											"end": 37828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36966,
											"end": 37834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36966,
											"end": 37834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37660,
											"end": 37828,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 37660,
											"end": 37828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 37777,
											"end": 37817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37777,
											"end": 37817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37777,
											"end": 37817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37777,
											"end": 37817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43692,
											"end": 61329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37777,
											"end": 37817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37744,
											"end": 37745,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37729,
											"end": 37745,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37729,
											"end": 37745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 37677,
											"end": 37745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37103,
											"end": 37650,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleSwap_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getPrice(address,address)": "ac41865a",
							"name()": "06fdde03",
							"pools(address,address)": "901754d7",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Francisco L\\u00f3pez G.\",\"details\":\"Implements a basic Uniswap V2-style decentralized exchange with: - Liquidity pool creation - Token swapping functionality - LP (Liquidity Provider) token issuance\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"LiquidityAdded(address,address,address,uint256,uint256,uint256)\":{\"params\":{\"amountA\":\"Amount of first token added\",\"amountB\":\"Amount of second token added\",\"liquidity\":\"Amount of LP tokens minted\",\"provider\":\"Address providing the liquidity\",\"tokenA\":\"First token in pair\",\"tokenB\":\"Second token in pair\"}},\"LiquidityRemoved(address,address,address,uint256,uint256,uint256)\":{\"params\":{\"amountA\":\"Amount of first token withdrawn\",\"amountB\":\"Amount of second token withdrawn\",\"liquidity\":\"Amount of LP tokens burned\",\"provider\":\"Address removing the liquidity\",\"tokenA\":\"First token in pair\",\"tokenB\":\"Second token in pair\"}},\"Swap(address,address,address,uint256,uint256)\":{\"params\":{\"amountIn\":\"Amount of input tokens\",\"amountOut\":\"Amount of output tokens\",\"sender\":\"Address initiating the swap\",\"tokenIn\":\"Input token address\",\"tokenOut\":\"Output token address\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"For initial deposit, uses square root of token amount productFor subsequent deposits, maintains existing reserve ratio\",\"params\":{\"amountADesired\":\"Desired amount of first token to deposit\",\"amountAMin\":\"Minimum acceptable amount of first token\",\"amountBDesired\":\"Desired amount of second token to deposit\",\"amountBMin\":\"Minimum acceptable amount of second token\",\"deadline\":\"Transaction expiry timestamp\",\"to\":\"Address to receive LP tokens\",\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"amountA\":\"Actual amount of first token deposited\",\"amountB\":\"Actual amount of second token deposited\",\"liquidity\":\"Amount of LP tokens minted\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes contract with LP token name and symbol\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"Uses constant product formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\",\"params\":{\"amountIn\":\"Input token amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Expected output token amount\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"price\":\"Price of tokenA in terms of tokenB (with 18 decimals)\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum acceptable amount of first token to receive\",\"amountBMin\":\"Minimum acceptable amount of second token to receive\",\"deadline\":\"Transaction expiry timestamp\",\"liquidity\":\"Amount of LP tokens to burn\",\"to\":\"Address to receive withdrawn tokens\",\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"amountA\":\"Amount of first token withdrawn\",\"amountB\":\"Amount of second token withdrawn\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"params\":{\"amountIn\":\"Exact amount of input tokens\",\"amountOutMin\":\"Minimum acceptable amount of output tokens\",\"deadline\":\"Transaction expiry timestamp\",\"path\":\"Array containing [inputToken, outputToken] addresses\",\"to\":\"Address to receive output tokens\"},\"returns\":{\"amounts\":\"Array containing [inputAmount, outputAmount]\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"pools\":{\"details\":\"pools[token0][token1] stores reserves for sorted token pair\"}},\"title\":\"SimpleSwap\",\"version\":1},\"userdoc\":{\"events\":{\"LiquidityAdded(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is added to a pool\"},\"LiquidityRemoved(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is removed from a pool\"},\"Swap(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a token swap occurs\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output amount for a given input and reserves\"},\"getPrice(address,address)\":{\"notice\":\"Gets the price of tokenA in terms of tokenB\"},\"pools(address,address)\":{\"notice\":\"Mapping of token pairs to their reserve balances\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from a token pair\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of input tokens for output tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap_flattened.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleSwap_flattened.sol\":{\"keccak256\":\"0xf6857f874f9ae4e4b13e025897425c36ac3b78258a7862480c6ebc8f7396ff0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a1fb18850bb029db67632ba1eaab42bf1eb6ba39521199f8c6e5c1c02f4ec2\",\"dweb:/ipfs/QmSXjyDJfQBAPAtFhg56f4hTNFsHMh6cECPi9EmcpfQSMH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1435,
								"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
								"label": "pools",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_struct(Pool)1427_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(Pool)1427_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct SimpleSwap.Pool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(Pool)1427_storage)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Pool)1427_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SimpleSwap.Pool)",
								"numberOfBytes": "32",
								"value": "t_struct(Pool)1427_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Pool)1427_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Pool",
								"members": [
									{
										"astId": 1424,
										"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
										"label": "reserveA",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1426,
										"contract": "contracts/SimpleSwap_flattened.sol:SimpleSwap",
										"label": "reserveB",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"LiquidityAdded(address,address,address,uint256,uint256,uint256)": {
								"notice": "Emitted when liquidity is added to a pool"
							},
							"LiquidityRemoved(address,address,address,uint256,uint256,uint256)": {
								"notice": "Emitted when liquidity is removed from a pool"
							},
							"Swap(address,address,address,uint256,uint256)": {
								"notice": "Emitted when a token swap occurs"
							}
						},
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to a token pair"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output amount for a given input and reserves"
							},
							"getPrice(address,address)": {
								"notice": "Gets the price of tokenA in terms of tokenB"
							},
							"pools(address,address)": {
								"notice": "Mapping of token pairs to their reserve balances"
							},
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity from a token pair"
							},
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
								"notice": "Swaps an exact amount of input tokens for output tokens"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SimpleSwap_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSwap_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC1363": [
							861
						],
						"IERC165": [
							783
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"ISimpleSwap": [
							1411
						],
						"SafeERC20": [
							1320
						],
						"SimpleSwap": [
							2394
						]
					},
					"id": 2395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "719:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "734:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:93:0"
									},
									"src": "679:108:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "793:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "872:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:9:0"
									},
									"scope": 77,
									"src": "863:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "924:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1009:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1019:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:9:0"
									},
									"scope": 77,
									"src": "1000:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1074:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1301:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1318:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1310:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1355:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:6:0"
									},
									"scope": 77,
									"src": "1292:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1367:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1645:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1734:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:9:0"
									},
									"scope": 77,
									"src": "1636:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1749:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2430:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2463:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2455:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2488:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2488:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:6:0"
									},
									"scope": 77,
									"src": "2421:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2500:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2811:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2841:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2833:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2863:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2855:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:71:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2912:6:0"
									},
									"scope": 77,
									"src": "2802:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "262:2659:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3092:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3234:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3234:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3234:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3118:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3216:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3247:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3315:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3319:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3345:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3345:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:15:0"
									},
									"scope": 100,
									"src": "3306:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3366:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3436:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3468:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:15:0"
									},
									"scope": 100,
									"src": "3427:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3489:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3568:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3602:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3602:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3601:7:0"
									},
									"scope": 100,
									"src": "3559:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "3206:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3734:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3760:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4275:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4351:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4368:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4372:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4368:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4361:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4298:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4308:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4341:9:0"
									},
									"scope": 129,
									"src": "4289:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4458:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4475:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4479:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4475:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4468:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4400:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4442:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:16:0"
									},
									"scope": 129,
									"src": "4391:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4568:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4585:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4578:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4505:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4525:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:9:0"
									},
									"scope": 129,
									"src": "4496:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "4257:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4741:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4767:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4919:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4938:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5258:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5300:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5292:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5324:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5316:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:79:0"
									},
									"src": "5252:110:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5368:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5531:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5549:16:0"
									},
									"src": "5525:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5572:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5742:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5771:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5763:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5762:18:0"
									},
									"src": "5736:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5787:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6143:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6212:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6204:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:82:0"
									},
									"src": "6137:115:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6258:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6443:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:18:0"
									},
									"src": "6437:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6488:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6694:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6722:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6713:17:0"
									},
									"src": "6688:43:0"
								}
							],
							"scope": 2395,
							"src": "4909:1824:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6735:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6889:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6909:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7139:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7157:15:0"
									},
									"src": "7133:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7179:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7322:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7353:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7344:17:0"
									},
									"src": "7316:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7368:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7668:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7730:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7688:48:0"
									},
									"src": "7662:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7743:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7906:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7934:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7926:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:16:0"
									},
									"src": "7900:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7948:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8118:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8148:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8140:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8139:18:0"
									},
									"src": "8112:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8164:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8422:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8457:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8449:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8448:35:0"
									},
									"src": "8416:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8490:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8675:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8705:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8697:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8696:18:0"
									},
									"src": "8669:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8721:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8929:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8959:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8951:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:18:0"
									},
									"src": "8923:46:0"
								}
							],
							"scope": 2395,
							"src": "6879:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8973:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "9129:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9150:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9522:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9566:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9615:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9607:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9548:104:0"
									},
									"src": "9516:137:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9659:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9822:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9842:16:0"
									},
									"src": "9816:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9865:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "10035:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10066:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "10058:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10057:18:0"
									},
									"src": "10029:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "10082:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10349:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10386:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10378:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10404:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10396:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10377:33:0"
									},
									"src": "10343:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10417:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10602:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10633:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10625:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10624:18:0"
									},
									"src": "10596:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10649:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10857:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10879:18:0"
									},
									"src": "10851:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10904:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11195:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11229:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11221:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11248:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11240:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11220:41:0"
									},
									"src": "11189:73:0"
								}
							],
							"scope": 2395,
							"src": "9119:2145:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11395:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12206:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12206:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12206:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12215:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12215:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12215:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12223:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12223:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12223:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12239:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12239:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12239:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11421:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12197:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12294:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12258:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12266:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12258:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12277:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12366:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12310:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12318:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12310:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12337:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12329:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12348:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12400:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12384:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12434:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12419:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12419:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12460:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12445:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12445:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12687:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12697:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12705:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12697:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12697:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12720:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12720:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12474:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12643:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12664:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12642:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12687:0:0"
									},
									"scope": 771,
									"src": "12631:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12869:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12886:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12879:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12750:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12818:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12822:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12854:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12853:15:0"
									},
									"scope": 771,
									"src": "12809:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13073:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13083:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12904:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13020:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13026:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13058:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13057:15:0"
									},
									"scope": 771,
									"src": "13011:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13793:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13810:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13803:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13110:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13746:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13754:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13786:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13786:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13785:7:0"
									},
									"scope": 771,
									"src": "13737:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13940:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13957:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13950:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13825:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13888:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13899:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13931:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13930:9:0"
									},
									"scope": 771,
									"src": "13879:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14108:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14125:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14125:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14118:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13982:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14043:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14061:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14053:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14052:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14098:9:0"
									},
									"scope": 771,
									"src": "14034:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14420:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14438:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14430:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14430:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14446:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14446:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14430:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14478:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14489:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14468:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14468:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14468:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14512:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14505:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14156:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14354:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14371:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14363:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14383:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14362:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14413:6:0"
									},
									"scope": 771,
									"src": "14345:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14706:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14723:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14716:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14529:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14590:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14623:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14615:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14599:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14692:9:0"
									},
									"scope": 771,
									"src": "14581:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15171:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15189:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15181:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15181:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15197:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15197:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15181:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15228:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15219:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15219:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15260:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14763:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15073:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15106:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15098:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15080:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15160:6:0"
									},
									"scope": 771,
									"src": "15064:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15993:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16011:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16003:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16090:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16126:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15284:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15879:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15931:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15923:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15943:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15891:71:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15986:6:0"
									},
									"scope": 771,
									"src": "15870:274:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16616:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16630:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16626:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16650:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16698:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16690:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16690:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16671:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16671:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16664:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16725:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16731:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16731:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16725:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16721:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16743:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16793:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16785:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16785:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16785:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16764:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16764:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16757:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16824:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16830:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16816:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16816:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16150:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16553:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16545:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16575:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16567:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16595:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16587:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:71:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16616:0:0"
									},
									"scope": 771,
									"src": "16517:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17267:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17281:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17281:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17455:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17477:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17469:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17469:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17491:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17501:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17491:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17469:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17524:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17538:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17524:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17520:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17545:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17595:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17601:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17614:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17570:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17570:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17563:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17648:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17755:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17765:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17755:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17773:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17787:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17773:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17755:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17755:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17277:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17301:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17417:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17433:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17417:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17417:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17831:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17845:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17837:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17837:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17831:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "18046:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18060:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18205:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18215:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18205:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18222:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18205:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18205:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17827:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17849:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17863:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17994:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18010:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17994:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17994:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18282:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18267:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18267:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18262:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16853:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17171:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17196:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17188:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17218:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17210:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17238:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17230:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17178:71:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17267:0:0"
									},
									"scope": 771,
									"src": "17162:1137:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18698:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18712:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18708:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18735:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18756:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18756:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18749:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18824:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18816:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18816:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18816:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18808:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18808:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18305:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18651:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18656:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18698:0:0"
									},
									"scope": 771,
									"src": "18642:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19224:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19257:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19249:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19249:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19238:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19234:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19261:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19309:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19301:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19301:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19301:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19282:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19282:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19275:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19357:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19349:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19349:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19361:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19332:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19332:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18856:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19177:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19208:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19200:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19182:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19224:0:0"
									},
									"scope": 771,
									"src": "19168:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "20014:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "20033:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "20040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "20049:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "20024:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20024:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "20024:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19380:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19919:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19945:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19968:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19960:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19993:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19985:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19927:77:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20014:0:0"
									},
									"scope": 771,
									"src": "19910:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "21051:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "21065:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21074:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21074:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21065:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "21061:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "21086:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21136:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21128:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21128:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21128:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "21107:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21107:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "21100:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21182:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21174:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21174:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21163:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21159:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21186:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21235:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21227:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21227:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21227:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21207:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21207:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21200:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21258:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21270:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21258:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21258:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21288:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21258:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21258:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21307:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21303:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21318:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21346:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21353:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21362:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21337:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21337:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21332:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20074:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20924:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20950:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20973:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20965:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20998:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20990:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "21018:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20932:101:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21051:0:0"
									},
									"scope": 771,
									"src": "20915:470:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21786:465:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21804:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21796:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21823:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21796:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21886:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21881:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21881:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21895:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21881:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21862:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21858:387:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21900:345:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21918:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21937:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21918:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21914:208:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21944:178:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "22017:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "22046:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "22084:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21969:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21969:138:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21962:145:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "22135:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "22172:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "22179:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "22188:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "22207:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22188:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22214:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "22163:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22163:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "22163:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21391:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21676:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21701:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21691:77:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21786:0:0"
									},
									"scope": 771,
									"src": "21667:584:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "12179:10074:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22384:24:0"
						},
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22559:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "22585:280:0",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 783,
							"linearizedBaseContracts": [
								783
							],
							"name": "IERC165",
							"nameLocation": "22876:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "22890:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "23244:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23269:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "23262:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 776,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23261:20:0"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "23305:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23305:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23304:6:0"
									},
									"scope": 783,
									"src": "23235:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "22866:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23446:24:0"
						},
						{
							"id": 785,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23605:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 787,
										"name": "IERC20",
										"nameLocations": [
											"24011:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "24011:6:0"
									},
									"id": 788,
									"nodeType": "InheritanceSpecifier",
									"src": "24011:6:0"
								},
								{
									"baseName": {
										"id": 789,
										"name": "IERC165",
										"nameLocations": [
											"24019:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 783,
										"src": "24019:7:0"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "24019:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 786,
								"nodeType": "StructuredDocumentation",
								"src": "23631:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 861,
							"linearizedBaseContracts": [
								861,
								783,
								77
							],
							"name": "IERC1363",
							"nameLocation": "23999:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "24569:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "24953:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24977:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "24969:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24989:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "24981:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24968:27:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "25014:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25013:6:0"
									},
									"scope": 861,
									"src": "24944:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "25026:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "25493:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25526:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "25518:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25546:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "25538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "25561:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25561:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25508:78:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "25605:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25604:6:0"
									},
									"scope": 861,
									"src": "25484:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "25617:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "26084:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26121:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "26113:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26143:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "26135:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26163:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "26155:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26103:71:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "26193:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26192:6:0"
									},
									"scope": 861,
									"src": "26075:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "26205:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "26755:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26792:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "26784:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26814:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "26806:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "26826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "26849:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26774:100:0"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "26893:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26892:6:0"
									},
									"scope": 861,
									"src": "26746:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "26905:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "27309:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "27324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "27341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27323:32:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "27390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27389:6:0"
									},
									"scope": 861,
									"src": "27300:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "27402:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "27894:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "27918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "27943:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27981:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "27966:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27966:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27908:83:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "28010:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28009:6:0"
									},
									"scope": 861,
									"src": "27885:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "23989:4029:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28169:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 863,
								"nodeType": "StructuredDocumentation",
								"src": "28195:458:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1320,
							"linearizedBaseContracts": [
								1320
							],
							"name": "SafeERC20",
							"nameLocation": "28662:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "28678:65:0",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 868,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "28754:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "28787:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "28779:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28778:15:0"
									},
									"src": "28748:46:0"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "28800:71:0",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 877,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "28882:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "28924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "28957:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "28949:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "28991:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "28983:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28914:100:0"
									},
									"src": "28876:139:0"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "29307:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "29337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 892,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "29359:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29365:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "29359:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 894,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "29376:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 895,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "29380:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 896,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29375:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 890,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "29344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "29348:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "29344:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29344:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 888,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "29317:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29317:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "29317:71:0"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "29021:179:0",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "29214:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "29236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 879,
														"name": "IERC20",
														"nameLocations": [
															"29236:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "29236:6:0"
													},
													"referencedDeclaration": 77,
													"src": "29236:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29266:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "29258:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "29278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29226:71:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29307:0:0"
									},
									"scope": 1320,
									"src": "29205:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "29762:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "29805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 918,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "29839:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29845:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "29839:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 920,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "29860:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 921,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "29866:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "29870:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 923,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29859:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 916,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "29824:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "29828:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "29824:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29824:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 914,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "29772:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29772:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "29772:115:0"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "29401:228:0",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "29643:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29676:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "29669:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 903,
														"name": "IERC20",
														"nameLocations": [
															"29669:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "29669:6:0"
													},
													"referencedDeclaration": 77,
													"src": "29669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29699:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "29691:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29721:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "29713:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "29733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29659:93:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29762:0:0"
									},
									"scope": 1320,
									"src": "29634:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "30151:157:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "30221:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 945,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "30259:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30265:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "30259:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 947,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "30276:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 948,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "30280:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 949,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30275:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 943,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "30244:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "30248:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "30244:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30244:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 941,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "30180:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30180:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 940,
												"id": 952,
												"nodeType": "Return",
												"src": "30161:140:0"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "29900:126:0",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "30040:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "30065:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 930,
														"name": "IERC20",
														"nameLocations": [
															"30065:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "30065:6:0"
													},
													"referencedDeclaration": 77,
													"src": "30065:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30095:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "30087:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30115:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "30107:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30055:71:0"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "30145:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30144:6:0"
									},
									"scope": 1320,
									"src": "30031:277:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "30595:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "30665:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 973,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "30703:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30709:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "30703:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 975,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "30724:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 976,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "30730:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 977,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "30734:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30723:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 971,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "30688:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "30692:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "30688:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30688:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 969,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "30624:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30624:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 968,
												"id": 981,
												"nodeType": "Return",
												"src": "30605:150:0"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "30314:130:0",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "30458:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "30494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "30487:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 957,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 956,
														"name": "IERC20",
														"nameLocations": [
															"30487:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "30487:6:0"
													},
													"referencedDeclaration": 77,
													"src": "30487:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "30509:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30539:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "30531:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30559:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "30551:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30477:93:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "30589:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30589:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30588:6:0"
									},
									"scope": 1320,
									"src": "30449:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "31534:139:0",
										"statements": [
											{
												"assignments": [
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "31552:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "31544:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1000,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31591:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1320",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1320",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31583:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31583:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 996,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "31567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31573:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "31567:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31567:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31544:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "31629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1007,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "31645:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1009,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "31660:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31645:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "31616:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31616:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "31616:50:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "30768:645:0",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "31427:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31465:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "31458:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 985,
														"name": "IERC20",
														"nameLocations": [
															"31458:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "31458:6:0"
													},
													"referencedDeclaration": 77,
													"src": "31458:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "31480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "31505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31448:76:0"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31534:0:0"
									},
									"scope": 1320,
									"src": "31418:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "32469:448:0",
										"statements": [
											{
												"id": 1055,
												"nodeType": "UncheckedBlock",
												"src": "32479:432:0",
												"statements": [
													{
														"assignments": [
															1026
														],
														"declarations": [
															{
																"constant": false,
																"id": 1026,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "32511:16:0",
																"nodeType": "VariableDeclaration",
																"scope": 1055,
																"src": "32503:24:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1025,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32503:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1035,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1031,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "32554:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1320",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32546:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1029,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32546:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32546:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1033,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "32561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1027,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "32530:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32536:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "32530:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32530:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32503:66:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1036,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "32587:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1037,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "32606:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32587:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1046,
														"nodeType": "IfStatement",
														"src": "32583:238:0",
														"trueBody": {
															"id": 1045,
															"nodeType": "Block",
															"src": "32625:196:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1040,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1020,
																				"src": "32704:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1041,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1026,
																				"src": "32733:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1042,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1022,
																				"src": "32771:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1039,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "32650:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32650:156:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1044,
																	"nodeType": "RevertStatement",
																	"src": "32643:163:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1048,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "32847:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1049,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "32854:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1050,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "32863:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1051,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "32882:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32863:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1047,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "32834:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32834:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1054,
														"nodeType": "ExpressionStatement",
														"src": "32834:66:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "31679:657:0",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "32350:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32388:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "32381:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "IERC20",
														"nameLocations": [
															"32381:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "32381:6:0"
													},
													"referencedDeclaration": 77,
													"src": "32381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "32403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "32436:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "32428:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32371:88:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32469:0:0"
									},
									"scope": 1320,
									"src": "32341:576:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "33601:383:0",
										"statements": [
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "33624:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1103,
														"src": "33611:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1068,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "33611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "33667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33673:7:0",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "33667:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1074,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "33695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1075,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "33704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1076,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33694:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1070,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "33639:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "33643:10:0",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "33639:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33639:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33611:109:0"
											},
											{
												"condition": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "33735:45:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1080,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "33760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1081,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "33767:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1079,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "33736:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33736:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "33731:247:0",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "33782:196:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1085,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "33833:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1088,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1061,
																					"src": "33871:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "33877:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "33871:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1090,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1063,
																						"src": "33887:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1091,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "33896:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1092,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33886:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1086,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "33856:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "33860:10:0",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "33856:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33856:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1084,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "33796:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33796:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "33796:117:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1097,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "33947:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "33954:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1096,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "33927:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33927:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "33927:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "32923:566:0",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "33503:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1060,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1059,
														"name": "IERC20",
														"nameLocations": [
															"33525:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "33525:6:0"
													},
													"referencedDeclaration": 77,
													"src": "33525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "33555:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33580:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33515:76:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33601:0:0"
									},
									"scope": 1320,
									"src": "33494:490:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "34469:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1117,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "34483:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34486:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "34483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34491:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "34483:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34483:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "34569:39:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1131,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "34592:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1132,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "34596:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1133,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "34603:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1129,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "34570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$861",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34576:15:0",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 812,
																"src": "34570:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34570:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1144,
													"nodeType": "IfStatement",
													"src": "34565:117:0",
													"trueBody": {
														"id": 1143,
														"nodeType": "Block",
														"src": "34610:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "34664:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "34656:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1137,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "34656:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34656:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1136,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "34631:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34631:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1142,
																"nodeType": "RevertStatement",
																"src": "34624:47:0"
															}
														]
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "34479:203:0",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "34504:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "34531:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1124,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "34538:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "34542:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1122,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "34518:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34518:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "34518:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "33990:333:0",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "34337:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "34369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$861",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1106,
														"name": "IERC1363",
														"nameLocations": [
															"34369:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 861,
														"src": "34369:8:0"
													},
													"referencedDeclaration": 861,
													"src": "34369:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$861",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "34393:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "34413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34449:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "34436:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34359:100:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34469:0:0"
									},
									"scope": 1320,
									"src": "34328:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "35207:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1162,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "35221:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35224:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "35221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35229:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "35221:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35221:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "35317:49:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1177,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "35344:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1178,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "35350:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "35354:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1180,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "35361:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1175,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "35318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$861",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "35324:19:0",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 838,
																"src": "35318:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35318:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1191,
													"nodeType": "IfStatement",
													"src": "35313:127:0",
													"trueBody": {
														"id": 1190,
														"nodeType": "Block",
														"src": "35368:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1186,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "35422:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "35414:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1184,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "35414:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35414:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1183,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "35389:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35389:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1189,
																"nodeType": "RevertStatement",
																"src": "35382:47:0"
															}
														]
													}
												},
												"id": 1192,
												"nodeType": "IfStatement",
												"src": "35217:223:0",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "35242:65:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1168,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "35273:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1169,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "35280:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1170,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "35286:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1171,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "35290:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1167,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "35256:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35256:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "35256:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "34694:341:0",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "35049:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35094:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "35085:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$861",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1149,
														"name": "IERC1363",
														"nameLocations": [
															"35085:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 861,
														"src": "35085:8:0"
													},
													"referencedDeclaration": 861,
													"src": "35085:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$861",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "35109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35139:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "35131:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35159:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "35151:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35187:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "35174:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35075:122:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35207:0:0"
									},
									"scope": 1320,
									"src": "35040:406:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "36251:218:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1207,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "36265:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36268:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "36265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36273:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "36265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36265:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36351:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1221,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "36373:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1222,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "36377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1223,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "36384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1219,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "36352:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$861",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36358:14:0",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 860,
																"src": "36352:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36352:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1234,
													"nodeType": "IfStatement",
													"src": "36347:116:0",
													"trueBody": {
														"id": 1233,
														"nodeType": "Block",
														"src": "36391:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1229,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "36445:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$861",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "36437:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "36437:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36437:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1226,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "36412:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36412:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1232,
																"nodeType": "RevertStatement",
																"src": "36405:47:0"
															}
														]
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "36261:202:0",
												"trueBody": {
													"id": 1218,
													"nodeType": "Block",
													"src": "36286:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1213,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "36313:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1214,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "36320:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1215,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "36324:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$861",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1212,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "36300:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36300:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "36300:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "35452:654:0",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "36120:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "36160:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "36151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$861",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1196,
														"name": "IERC1363",
														"nameLocations": [
															"36151:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 861,
														"src": "36151:8:0"
													},
													"referencedDeclaration": 861,
													"src": "36151:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$861",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36183:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "36175:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36203:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "36195:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "36218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36141:100:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36251:0:0"
									},
									"scope": 1320,
									"src": "36111:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "37036:798:0",
										"statements": [
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "37054:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "37046:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"nodeType": "VariableDeclarationStatement",
												"src": "37046:18:0"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "37082:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "37074:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"nodeType": "VariableDeclarationStatement",
												"src": "37074:19:0"
											},
											{
												"AST": {
													"nativeSrc": "37128:522:0",
													"nodeType": "YulBlock",
													"src": "37128:522:0",
													"statements": [
														{
															"nativeSrc": "37142:201:0",
															"nodeType": "YulVariableDeclaration",
															"src": "37142:201:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "37179:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "37179:3:0"
																		},
																		"nativeSrc": "37179:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "37179:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "37202:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "37202:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37225:1:0",
																		"nodeType": "YulLiteral",
																		"src": "37225:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "37248:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "37248:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37254:4:0",
																				"nodeType": "YulLiteral",
																				"src": "37254:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37244:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "37244:3:0"
																		},
																		"nativeSrc": "37244:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "37244:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "37283:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "37283:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "37277:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "37277:5:0"
																		},
																		"nativeSrc": "37277:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "37277:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37306:1:0",
																		"nodeType": "YulLiteral",
																		"src": "37306:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37325:4:0",
																		"nodeType": "YulLiteral",
																		"src": "37325:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "37157:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "37157:4:0"
																},
																"nativeSrc": "37157:186:0",
																"nodeType": "YulFunctionCall",
																"src": "37157:186:0"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "37146:7:0",
																	"nodeType": "YulTypedName",
																	"src": "37146:7:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "37404:157:0",
																"nodeType": "YulBlock",
																"src": "37404:157:0",
																"statements": [
																	{
																		"nativeSrc": "37422:22:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "37422:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "37439:4:0",
																					"nodeType": "YulLiteral",
																					"src": "37439:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "37433:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "37433:5:0"
																			},
																			"nativeSrc": "37433:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "37433:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "37426:3:0",
																				"nodeType": "YulTypedName",
																				"src": "37426:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "37476:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "37476:3:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "37481:1:0",
																					"nodeType": "YulLiteral",
																					"src": "37481:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "37484:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "37484:14:0"
																					},
																					"nativeSrc": "37484:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "37484:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "37461:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "37461:14:0"
																			},
																			"nativeSrc": "37461:40:0",
																			"nodeType": "YulFunctionCall",
																			"src": "37461:40:0"
																		},
																		"nativeSrc": "37461:40:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "37461:40:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "37525:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "37525:3:0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "37530:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "37530:14:0"
																					},
																					"nativeSrc": "37530:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "37530:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "37518:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "37518:6:0"
																			},
																			"nativeSrc": "37518:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "37518:29:0"
																		},
																		"nativeSrc": "37518:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "37518:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "37395:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "37395:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "37388:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "37388:6:0"
																},
																"nativeSrc": "37388:15:0",
																"nodeType": "YulFunctionCall",
																"src": "37388:15:0"
															},
															"nativeSrc": "37385:176:0",
															"nodeType": "YulIf",
															"src": "37385:176:0"
														},
														{
															"nativeSrc": "37574:30:0",
															"nodeType": "YulAssignment",
															"src": "37574:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "37588:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "37588:14:0"
																},
																"nativeSrc": "37588:16:0",
																"nodeType": "YulFunctionCall",
																"src": "37588:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "37574:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "37574:10:0"
																}
															]
														},
														{
															"nativeSrc": "37617:23:0",
															"nodeType": "YulAssignment",
															"src": "37617:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "37638:1:0",
																		"nodeType": "YulLiteral",
																		"src": "37638:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "37632:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "37632:5:0"
																},
																"nativeSrc": "37632:8:0",
																"nodeType": "YulFunctionCall",
																"src": "37632:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "37617:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "37617:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1243,
														"isOffset": false,
														"isSlot": false,
														"src": "37248:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1243,
														"isOffset": false,
														"isSlot": false,
														"src": "37283:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1247,
														"isOffset": false,
														"isSlot": false,
														"src": "37574:10:0",
														"valueSize": 1
													},
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "37617:11:0",
														"valueSize": 1
													},
													{
														"declaration": 1241,
														"isOffset": false,
														"isSlot": false,
														"src": "37202:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1252,
												"nodeType": "InlineAssembly",
												"src": "37103:547:0"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1253,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "37677:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37691:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "37677:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1264,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "37729:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37744:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "37729:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "37677:68:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1258,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "37703:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37695:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1256,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37695:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37695:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37710:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "37695:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37715:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "37695:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37725:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "37695:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "37660:168:0",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "37756:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1271,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "37810:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37802:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1269,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37802:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37802:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1268,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "37777:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37777:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1274,
															"nodeType": "RevertStatement",
															"src": "37770:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "36475:486:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "36975:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "37002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "36995:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "IERC20",
														"nameLocations": [
															"36995:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "36995:6:0"
													},
													"referencedDeclaration": 77,
													"src": "36995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37022:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "37009:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36994:33:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37036:0:0"
									},
									"scope": 1320,
									"src": "36966:868:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "38445:611:0",
										"statements": [
											{
												"assignments": [
													1290
												],
												"declarations": [
													{
														"constant": false,
														"id": 1290,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "38460:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "38455:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1289,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "38455:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"nodeType": "VariableDeclarationStatement",
												"src": "38455:12:0"
											},
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "38485:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "38477:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"nodeType": "VariableDeclarationStatement",
												"src": "38477:18:0"
											},
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "38513:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "38505:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"nodeType": "VariableDeclarationStatement",
												"src": "38505:19:0"
											},
											{
												"AST": {
													"nativeSrc": "38559:300:0",
													"nodeType": "YulBlock",
													"src": "38559:300:0",
													"statements": [
														{
															"nativeSrc": "38573:197:0",
															"nodeType": "YulAssignment",
															"src": "38573:197:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "38606:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "38606:3:0"
																		},
																		"nativeSrc": "38606:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "38606:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "38629:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "38629:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38652:1:0",
																		"nodeType": "YulLiteral",
																		"src": "38652:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "38675:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "38675:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38681:4:0",
																				"nodeType": "YulLiteral",
																				"src": "38681:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "38671:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "38671:3:0"
																		},
																		"nativeSrc": "38671:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "38671:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "38710:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "38710:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "38704:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "38704:5:0"
																		},
																		"nativeSrc": "38704:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "38704:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38733:1:0",
																		"nodeType": "YulLiteral",
																		"src": "38733:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38752:4:0",
																		"nodeType": "YulLiteral",
																		"src": "38752:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "38584:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "38584:4:0"
																},
																"nativeSrc": "38584:186:0",
																"nodeType": "YulFunctionCall",
																"src": "38584:186:0"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "38573:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "38573:7:0"
																}
															]
														},
														{
															"nativeSrc": "38783:30:0",
															"nodeType": "YulAssignment",
															"src": "38783:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "38797:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "38797:14:0"
																},
																"nativeSrc": "38797:16:0",
																"nodeType": "YulFunctionCall",
																"src": "38797:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "38783:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "38783:10:0"
																}
															]
														},
														{
															"nativeSrc": "38826:23:0",
															"nodeType": "YulAssignment",
															"src": "38826:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "38847:1:0",
																		"nodeType": "YulLiteral",
																		"src": "38847:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "38841:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "38841:5:0"
																},
																"nativeSrc": "38841:8:0",
																"nodeType": "YulFunctionCall",
																"src": "38841:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "38826:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "38826:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": false,
														"src": "38675:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": false,
														"src": "38710:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1293,
														"isOffset": false,
														"isSlot": false,
														"src": "38783:10:0",
														"valueSize": 1
													},
													{
														"declaration": 1296,
														"isOffset": false,
														"isSlot": false,
														"src": "38826:11:0",
														"valueSize": 1
													},
													{
														"declaration": 1290,
														"isOffset": false,
														"isSlot": false,
														"src": "38573:7:0",
														"valueSize": 1
													},
													{
														"declaration": 1282,
														"isOffset": false,
														"isSlot": false,
														"src": "38629:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1298,
												"nodeType": "InlineAssembly",
												"src": "38534:325:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "38887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1300,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "38928:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38928:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1311,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "39019:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "39019:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "38928:107:0",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1305,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "38974:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "38966:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1303,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "38966:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38966:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "38981:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "38966:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "38986:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "38966:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38966:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1315,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "38910:139:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38887:162:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1317,
												"nodeType": "Return",
												"src": "38868:181:0"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "37840:491:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "38345:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "38376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "38369:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "IERC20",
														"nameLocations": [
															"38369:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "38369:6:0"
													},
													"referencedDeclaration": 77,
													"src": "38369:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38396:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "38383:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38383:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38368:33:0"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "38435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38434:6:0"
									},
									"scope": 1320,
									"src": "38336:720:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2395,
							"src": "28654:10404:0",
							"usedErrors": [
								868,
								877
							],
							"usedEvents": []
						},
						{
							"id": 1321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISimpleSwap",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1322,
								"nodeType": "StructuredDocumentation",
								"src": "39132:282:0",
								"text": " @title ISimpleSwap\n @dev Interface for the SimpleSwap decentralized exchange contract\n @notice Defines the core functionality for:\n - Adding/removing liquidity from token pairs\n - Swapping tokens with price calculations\n - Querying token prices and swap amounts"
							},
							"fullyImplemented": false,
							"id": 1411,
							"linearizedBaseContracts": [
								1411
							],
							"name": "ISimpleSwap",
							"nameLocation": "39425:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "39592:702:0",
										"text": " @notice Adds liquidity to a token pair\n @dev Mints LP tokens representing pool share\n @param tokenA First token in pair\n @param tokenB Second token in pair\n @param amountADesired Desired amount of tokenA to deposit\n @param amountBDesired Desired amount of tokenB to deposit\n @param amountAMin Minimum acceptable amount of tokenA\n @param amountBMin Minimum acceptable amount of tokenB\n @param to Recipient of LP tokens\n @param deadline Transaction expiry timestamp\n @return amountA Actual amount of tokenA deposited\n @return amountB Actual amount of tokenB deposited\n @return liquidity Amount of LP tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "40308:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "40338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "40362:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40354:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "40386:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40378:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "40418:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40410:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "40450:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40442:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "40478:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40506:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40498:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "40526:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40518:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40320:220:0"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "40596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "40625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "40654:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "40646:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40574:99:0"
									},
									"scope": 1411,
									"src": "40299:375:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "40680:576:0",
										"text": " @notice Removes liquidity from a token pair\n @dev Burns LP tokens and returns underlying assets\n @param tokenA First token in pair\n @param tokenB Second token in pair\n @param liquidity Amount of LP tokens to burn\n @param amountAMin Minimum acceptable amount of tokenA\n @param amountBMin Minimum acceptable amount of tokenB\n @param to Recipient of withdrawn tokens\n @param deadline Transaction expiry timestamp\n @return amountA Amount of tokenA withdrawn\n @return amountB Amount of tokenB withdrawn"
									},
									"functionSelector": "baa2abde",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "41270:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "41303:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41295:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "41327:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "41351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41343:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "41378:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41370:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "41406:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41398:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41434:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41426:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "41454:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41446:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41285:183:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "41495:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41487:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "41512:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "41504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41486:34:0"
									},
									"scope": 1411,
									"src": "41261:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "41674:456:0",
										"text": " @notice Swaps exact input tokens for output tokens\n @dev Uses constant product market maker formula\n @param amountIn Exact amount of input tokens\n @param amountOutMin Minimum acceptable output amount\n @param path Array with [inputToken, outputToken]\n @param to Recipient of output tokens\n @param deadline Transaction expiry timestamp\n @return amounts Array containing [inputAmount, outputAmount]"
									},
									"functionSelector": "38ed1739",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "42144:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "42186:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42178:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "42212:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42204:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "42253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42234:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1376,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "42234:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1377,
													"nodeType": "ArrayTypeName",
													"src": "42234:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42275:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42267:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "42295:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42287:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42168:141:0"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "42345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "42328:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1384,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "42328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1385,
													"nodeType": "ArrayTypeName",
													"src": "42328:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42327:26:0"
									},
									"scope": 1411,
									"src": "42135:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "42507:262:0",
										"text": " @notice Gets price of tokenA in terms of tokenB\n @dev Price is calculated as reserveB/reserveA\n @param tokenA First token in pair\n @param tokenB Second token in pair\n @return price Price ratio with 18 decimals precision"
									},
									"functionSelector": "ac41865a",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "42783:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "42800:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "42792:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "42816:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "42808:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42791:32:0"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "42879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "42871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42870:15:0"
									},
									"scope": 1411,
									"src": "42774:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "42892:340:0",
										"text": " @notice Calculates output amount for given input\n @dev Uses formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\n @param amountIn Input token amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Expected output amount"
									},
									"functionSelector": "054d50d4",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "43246:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "43276:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "43268:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "43302:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "43294:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "43329:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "43321:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43258:87:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "43377:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "43369:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43368:19:0"
									},
									"scope": 1411,
									"src": "43237:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "39415:3975:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "43427:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1414,
										"name": "ERC20",
										"nameLocations": [
											"43715:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "43715:5:0"
									},
									"id": 1415,
									"nodeType": "InheritanceSpecifier",
									"src": "43715:5:0"
								},
								{
									"baseName": {
										"id": 1416,
										"name": "ISimpleSwap",
										"nameLocations": [
											"43722:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1411,
										"src": "43722:11:0"
									},
									"id": 1417,
									"nodeType": "InheritanceSpecifier",
									"src": "43722:11:0"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "43452:239:0",
								"text": " @title SimpleSwap\n @dev Implements a basic Uniswap V2-style decentralized exchange with:\n - Liquidity pool creation\n - Token swapping functionality\n - LP (Liquidity Provider) token issuance\n @author Francisco López G."
							},
							"fullyImplemented": true,
							"id": 2394,
							"linearizedBaseContracts": [
								2394,
								1411,
								771,
								170,
								100,
								77,
								129
							],
							"name": "SimpleSwap",
							"nameLocation": "43701:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1421,
									"libraryName": {
										"id": 1418,
										"name": "SafeERC20",
										"nameLocations": [
											"43746:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1320,
										"src": "43746:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "43740:27:0",
									"typeName": {
										"id": 1420,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1419,
											"name": "IERC20",
											"nameLocations": [
												"43760:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "43760:6:0"
										},
										"referencedDeclaration": 77,
										"src": "43760:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "SimpleSwap.Pool",
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "43915:169:0",
										"text": " @dev Structure to store token pair reserves\n @param reserveA Reserve amount of first token\n @param reserveB Reserve amount of second token"
									},
									"id": 1427,
									"members": [
										{
											"constant": false,
											"id": 1424,
											"mutability": "mutable",
											"name": "reserveA",
											"nameLocation": "44119:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1427,
											"src": "44111:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1423,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1426,
											"mutability": "mutable",
											"name": "reserveB",
											"nameLocation": "44145:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1427,
											"src": "44137:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1425,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44137:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "44096:4:0",
									"nodeType": "StructDefinition",
									"scope": 2394,
									"src": "44089:71:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "44313:147:0",
										"text": " @notice Mapping of token pairs to their reserve balances\n @dev pools[token0][token1] stores reserves for sorted token pair"
									},
									"functionSelector": "901754d7",
									"id": 1435,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "44517:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2394,
									"src": "44465:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
										"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool))"
									},
									"typeName": {
										"id": 1434,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1429,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44473:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "44465:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
											"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1433,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1430,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "44492:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "44484:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
												"typeString": "mapping(address => struct SimpleSwap.Pool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1432,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1431,
													"name": "Pool",
													"nameLocations": [
														"44503:4:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1427,
													"src": "44503:4:0"
												},
												"referencedDeclaration": 1427,
												"src": "44503:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
													"typeString": "struct SimpleSwap.Pool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "44670:358:0",
										"text": " @notice Emitted when liquidity is added to a pool\n @param provider Address providing the liquidity\n @param tokenA First token in pair\n @param tokenB Second token in pair\n @param amountA Amount of first token added\n @param amountB Amount of second token added\n @param liquidity Amount of LP tokens minted"
									},
									"eventSelector": "43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70",
									"id": 1450,
									"name": "LiquidityAdded",
									"nameLocation": "45039:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "45079:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45063:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "45113:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45097:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "45145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45129:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "45169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45161:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "45194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45186:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "45219:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "45211:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45053:181:0"
									},
									"src": "45033:202:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "45241:369:0",
										"text": " @notice Emitted when liquidity is removed from a pool\n @param provider Address removing the liquidity\n @param tokenA First token in pair\n @param tokenB Second token in pair\n @param amountA Amount of first token withdrawn\n @param amountB Amount of second token withdrawn\n @param liquidity Amount of LP tokens burned"
									},
									"eventSelector": "d765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1",
									"id": 1465,
									"name": "LiquidityRemoved",
									"nameLocation": "45621:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "45663:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45647:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "45697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45681:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "45729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45713:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "45753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "45778:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "45803:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "45795:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45637:181:0"
									},
									"src": "45615:204:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "45825:288:0",
										"text": " @notice Emitted when a token swap occurs\n @param sender Address initiating the swap\n @param tokenIn Input token address\n @param tokenOut Output token address\n @param amountIn Amount of input tokens\n @param amountOut Amount of output tokens"
									},
									"eventSelector": "cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062",
									"id": 1478,
									"name": "Swap",
									"nameLocation": "46124:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "46154:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "46138:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "46186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "46170:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "46219:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "46203:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "46245:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "46237:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "46271:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "46263:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46128:158:0"
									},
									"src": "46118:169:0"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "46622:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "46640:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1485,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "46652:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "46658:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "46652:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46640:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446561646c696e6520706173736564",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46669:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f",
																"typeString": "literal_string \"Deadline passed\""
															},
															"value": "Deadline passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c195e135a65761ec6a2507e19968654c5f0b65ae83f886b1ce55ea9533041f5f",
																"typeString": "literal_string \"Deadline passed\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46632:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "46632:55:0"
											},
											{
												"id": 1491,
												"nodeType": "PlaceholderStatement",
												"src": "46697:1:0"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "46435:140:0",
										"text": " @dev Ensures transaction is executed before deadline\n @param deadline Timestamp after which transaction should fail"
									},
									"id": 1493,
									"name": "ensureDeadline",
									"nameLocation": "46589:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "46612:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "46604:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46603:18:0"
									},
									"src": "46580:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "46911:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "46929:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1502,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "46939:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46929:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4964656e746963616c20746f6b656e73",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46947:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															},
															"value": "Identical tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															}
														],
														"id": 1500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46921:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "46921:45:0"
											},
											{
												"id": 1507,
												"nodeType": "PlaceholderStatement",
												"src": "46976:1:0"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "46711:144:0",
										"text": " @dev Ensures token addresses are different\n @param tokenA First token address\n @param tokenB Second token address"
									},
									"id": 1509,
									"name": "validPair",
									"nameLocation": "46869:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "46887:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "46879:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "46903:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "46895:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46878:32:0"
									},
									"src": "46860:124:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "47256:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "47131:74:0",
										"text": " @dev Initializes contract with LP token name and symbol"
									},
									"id": 1518,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c6553776170204c50",
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "47230:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_68e3cdbee7943f9253931a5774e4c7393b373db0b68c76288d4f06034a0afa87",
														"typeString": "literal_string \"SimpleSwap LP\""
													},
													"value": "SimpleSwap LP"
												},
												{
													"hexValue": "53532d4c50",
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "47247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5ca5c167b0d0f703f012ccd718d3ce7ca1848aff02408d16ce07b0fcedcb8a9e",
														"typeString": "literal_string \"SS-LP\""
													},
													"value": "SS-LP"
												}
											],
											"id": 1515,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1512,
												"name": "ERC20",
												"nameLocations": [
													"47224:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "47224:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "47224:31:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47221:2:0"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47256:0:0"
									},
									"scope": 2394,
									"src": "47210:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "48713:1688:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1553,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "48788:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48805:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "48788:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1556,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "48810:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "48810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "48788:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e7473",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48830:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
																"typeString": "literal_string \"Invalid amounts\""
															},
															"value": "Invalid amounts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
																"typeString": "literal_string \"Invalid amounts\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "48780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48780:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "48780:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1564,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "48879:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1565,
																	"name": "amountAMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "48897:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48879:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1567,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "48911:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1568,
																	"name": "amountBMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "48929:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48911:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "48879:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e206e6f74206d6574",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48953:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5fd1568041807e5fc7b138f7517e56ebbffb1ac01fca80c91a9630c5a09c0ee",
																"typeString": "literal_string \"Min not met\""
															},
															"value": "Min not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5fd1568041807e5fc7b138f7517e56ebbffb1ac01fca80c91a9630c5a09c0ee",
																"typeString": "literal_string \"Min not met\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "48858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48858:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "48858:118:0"
											},
											{
												"assignments": [
													1575,
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "49049:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "49041:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1574,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49041:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "49065:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "49057:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49057:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"arguments": [
														{
															"id": 1579,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "49087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "49095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1578,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "49075:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49075:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49040:62:0"
											},
											{
												"assignments": [
													1585
												],
												"declarations": [
													{
														"constant": false,
														"id": 1585,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "49125:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "49112:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool"
														},
														"typeName": {
															"id": 1584,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1583,
																"name": "Pool",
																"nameLocations": [
																	"49112:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1427,
																"src": "49112:4:0"
															},
															"referencedDeclaration": 1427,
															"src": "49112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
																"typeString": "struct SimpleSwap.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1586,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "49132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool storage ref))"
															}
														},
														"id": 1588,
														"indexExpression": {
															"id": 1587,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "49138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "49132:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pool storage ref)"
														}
													},
													"id": 1590,
													"indexExpression": {
														"id": 1589,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "49146:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "49132:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1427_storage",
														"typeString": "struct SimpleSwap.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49112:41:0"
											},
											{
												"assignments": [
													1593
												],
												"declarations": [
													{
														"constant": false,
														"id": 1593,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "49230:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "49222:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"expression": {
														"id": 1594,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "49241:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "49246:8:0",
													"memberName": "reserveA",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1424,
													"src": "49241:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49222:32:0"
											},
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "49272:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "49264:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"expression": {
														"id": 1599,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "49283:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "49288:8:0",
													"memberName": "reserveB",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "49283:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49264:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1602,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "49311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49323:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "49311:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1605,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "49328:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49340:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "49328:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "49311:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "49560:398:0",
													"statements": [
														{
															"expression": {
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1626,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "49638:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1627,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "49647:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1628,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "49637:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1630,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "49700:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1631,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "49732:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1632,
																			"name": "amountAMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1529,
																			"src": "49764:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1633,
																			"name": "amountBMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "49792:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1634,
																			"name": "reserveA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "49820:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1635,
																			"name": "reserveB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "49846:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1629,
																		"name": "_calculateOptimalDeposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "49658:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49658:210:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "49637:231:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1638,
															"nodeType": "ExpressionStatement",
															"src": "49637:231:0"
														},
														{
															"expression": {
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1639,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "49882:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1641,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "49914:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1642,
																			"name": "reserveA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "49923:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1643,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "49933:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49933:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1640,
																		"name": "_calculateLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "49894:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49894:53:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49882:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "49882:65:0"
														}
													]
												},
												"id": 1649,
												"nodeType": "IfStatement",
												"src": "49307:651:0",
												"trueBody": {
													"id": 1625,
													"nodeType": "Block",
													"src": "49343:211:0",
													"statements": [
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1609,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "49401:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1610,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "49410:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1611,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "49400:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1612,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "49422:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1613,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "49438:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49421:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "49400:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "49400:53:0"
														},
														{
															"expression": {
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1617,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "49467:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1619,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "49485:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1620,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1548,
																				"src": "49495:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49485:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1618,
																		"name": "_sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2371,
																		"src": "49479:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49479:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49467:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1624,
															"nodeType": "ExpressionStatement",
															"src": "49467:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1651,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "50040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1652,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "50048:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "50056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1654,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "50065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "50024:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50024:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "50024:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "50089:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "50093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1657,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "50083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50083:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "50083:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "50170:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "50178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1665,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "50186:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1666,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "50197:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50186:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1668,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "50206:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1669,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "50217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50206:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "_updateReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50154:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50154:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "50154:71:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1674,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "50269:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "50273:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "50269:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "50293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "50313:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1678,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "50333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1679,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "50354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1680,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "50375:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1673,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "50241:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50241:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "EmitStatement",
												"src": "50236:158:0"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "47412:833:0",
										"text": " @notice Adds liquidity to a token pair\n @dev For initial deposit, uses square root of token amount product\n @dev For subsequent deposits, maintains existing reserve ratio\n @param tokenA First token address\n @param tokenB Second token address\n @param amountADesired Desired amount of first token to deposit\n @param amountBDesired Desired amount of second token to deposit\n @param amountAMin Minimum acceptable amount of first token\n @param amountBMin Minimum acceptable amount of second token\n @param to Address to receive LP tokens\n @param deadline Transaction expiry timestamp\n @return amountA Actual amount of first token deposited\n @return amountB Actual amount of second token deposited\n @return liquidity Amount of LP tokens minted"
									},
									"functionSelector": "e8e33700",
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1539,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1535,
													"src": "48549:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "ensureDeadline",
												"nameLocations": [
													"48534:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1493,
												"src": "48534:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "48534:24:0"
										},
										{
											"arguments": [
												{
													"id": 1542,
													"name": "tokenA",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1521,
													"src": "48577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1543,
													"name": "tokenB",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1523,
													"src": "48585:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1544,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1541,
												"name": "validPair",
												"nameLocations": [
													"48567:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1509,
												"src": "48567:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "48567:25:0"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "48259:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "48517:8:0"
									},
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "48289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "48313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "48337:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48329:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "48369:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48361:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "48401:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48393:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "48429:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48457:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48449:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "48477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48271:220:0"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "48631:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48623:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "48660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "48689:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48681:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48609:99:0"
									},
									"scope": 2394,
									"src": "48250:2151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1370
									],
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "51344:1091:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1715,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "51362:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "51362:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c6971756964697479",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51377:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe2760d20a5ed3aa23e4ce3b50e06d47b2e38eb9d47372da153970d71dcfeed5",
																"typeString": "literal_string \"Invalid liquidity\""
															},
															"value": "Invalid liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe2760d20a5ed3aa23e4ce3b50e06d47b2e38eb9d47372da153970d71dcfeed5",
																"typeString": "literal_string \"Invalid liquidity\""
															}
														],
														"id": 1714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51354:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "51354:43:0"
											},
											{
												"assignments": [
													1722,
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "51462:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "51454:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1721,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51454:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "51478:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "51470:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1723,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51470:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"arguments": [
														{
															"id": 1726,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "51500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "51508:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1725,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "51488:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51488:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51453:62:0"
											},
											{
												"assignments": [
													1732
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "51538:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "51525:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool"
														},
														"typeName": {
															"id": 1731,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1730,
																"name": "Pool",
																"nameLocations": [
																	"51525:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1427,
																"src": "51525:4:0"
															},
															"referencedDeclaration": 1427,
															"src": "51525:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
																"typeString": "struct SimpleSwap.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1733,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "51545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool storage ref))"
															}
														},
														"id": 1735,
														"indexExpression": {
															"id": 1734,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "51551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "51545:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pool storage ref)"
														}
													},
													"id": 1737,
													"indexExpression": {
														"id": 1736,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "51559:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "51545:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1427_storage",
														"typeString": "struct SimpleSwap.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51525:41:0"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "51617:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "51609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"expression": {
														"id": 1741,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "51628:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "51633:8:0",
													"memberName": "reserveA",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1424,
													"src": "51628:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51609:32:0"
											},
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "51659:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "51651:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1748,
												"initialValue": {
													"expression": {
														"id": 1746,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "51670:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "51675:8:0",
													"memberName": "reserveB",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "51670:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51651:32:0"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1749,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "51747:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1750,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "51756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1751,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "51746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1753,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "51808:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1754,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "51831:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1755,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "51853:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1752,
															"name": "_calculateWithdrawalAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "51767:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) view returns (uint256,uint256)"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51767:104:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "51746:125:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "51746:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1760,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "51889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1761,
																	"name": "amountAMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "51900:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1763,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "51914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1764,
																	"name": "amountBMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "51925:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51914:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "51889:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e206e6f74206d6574",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51937:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5fd1568041807e5fc7b138f7517e56ebbffb1ac01fca80c91a9630c5a09c0ee",
																"typeString": "literal_string \"Min not met\""
															},
															"value": "Min not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5fd1568041807e5fc7b138f7517e56ebbffb1ac01fca80c91a9630c5a09c0ee",
																"typeString": "literal_string \"Min not met\""
															}
														],
														"id": 1759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51881:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "51881:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1771,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52025:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52029:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52025:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "52037:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1770,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "52019:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52019:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "52019:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1777,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "52071:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "52079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "52083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "52057:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52057:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "52057:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1783,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "52115:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1784,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "52123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "52127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1782,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "52101:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52101:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "52101:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1789,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "52202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1790,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "52210:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1791,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "52218:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1792,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "52229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52218:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "52238:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1795,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "52249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52238:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1788,
														"name": "_updateReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "52186:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52186:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "52186:71:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1800,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52303:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52307:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1802,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "52327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1803,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "52347:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1804,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "52367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1805,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "52388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1806,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "52409:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "52273:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52273:155:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "EmitStatement",
												"src": "52268:160:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "50407:568:0",
										"text": " @notice Removes liquidity from a token pair\n @param tokenA First token address\n @param tokenB Second token address\n @param liquidity Amount of LP tokens to burn\n @param amountAMin Minimum acceptable amount of first token to receive\n @param amountBMin Minimum acceptable amount of second token to receive\n @param to Address to receive withdrawn tokens\n @param deadline Transaction expiry timestamp\n @return amountA Amount of first token withdrawn\n @return amountB Amount of second token withdrawn"
									},
									"functionSelector": "baa2abde",
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1703,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1699,
													"src": "51245:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1702,
												"name": "ensureDeadline",
												"nameLocations": [
													"51230:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1493,
												"src": "51230:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51230:24:0"
										},
										{
											"arguments": [
												{
													"id": 1706,
													"name": "tokenA",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1687,
													"src": "51273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1707,
													"name": "tokenB",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "51281:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1708,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1705,
												"name": "validPair",
												"nameLocations": [
													"51263:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1509,
												"src": "51263:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51263:25:0"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "50989:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1701,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51213:8:0"
									},
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "51022:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "51046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "51070:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "51097:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51089:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "51125:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51117:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51153:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "51173:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51165:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51004:183:0"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "51314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "51331:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "51323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51305:34:0"
									},
									"scope": 2394,
									"src": "50980:1455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1388
									],
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "53181:1114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1833,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "53199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "53204:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "53199:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53214:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "53199:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070617468",
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53217:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8",
																"typeString": "literal_string \"Invalid path\""
															},
															"value": "Invalid path"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8",
																"typeString": "literal_string \"Invalid path\""
															}
														],
														"id": 1832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53191:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "53191:41:0"
											},
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1840,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "53243:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53267:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "53253:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53257:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1842,
																"nodeType": "ArrayTypeName",
																"src": "53257:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53253:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "53243:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "53243:26:0"
											},
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1848,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "53279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1850,
														"indexExpression": {
															"hexValue": "30",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53279:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1851,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "53292:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53279:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "53279:21:0"
											},
											{
												"assignments": [
													1855,
													1857
												],
												"declarations": [
													{
														"constant": false,
														"id": 1855,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "53320:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "53312:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1854,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53312:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1857,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "53337:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "53329:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1856,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53329:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1865,
												"initialValue": {
													"components": [
														{
															"baseExpression": {
																"id": 1858,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "53350:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 1860,
															"indexExpression": {
																"hexValue": "30",
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53355:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "53350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1861,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "53359:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 1863,
															"indexExpression": {
																"hexValue": "31",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53364:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "53359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1864,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "53349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53311:56:0"
											},
											{
												"assignments": [
													1868
												],
												"declarations": [
													{
														"constant": false,
														"id": 1868,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "53390:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "53377:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool"
														},
														"typeName": {
															"id": 1867,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1866,
																"name": "Pool",
																"nameLocations": [
																	"53377:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1427,
																"src": "53377:4:0"
															},
															"referencedDeclaration": 1427,
															"src": "53377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
																"typeString": "struct SimpleSwap.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1874,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1869,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "53397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool storage ref))"
															}
														},
														"id": 1871,
														"indexExpression": {
															"id": 1870,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "53403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "53397:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pool storage ref)"
														}
													},
													"id": 1873,
													"indexExpression": {
														"id": 1872,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "53412:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "53397:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1427_storage",
														"typeString": "struct SimpleSwap.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53377:44:0"
											},
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "53472:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "53464:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"expression": {
														"id": 1877,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "53484:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "53489:8:0",
													"memberName": "reserveA",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1424,
													"src": "53484:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53464:33:0"
											},
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "53515:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "53507:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"expression": {
														"id": 1882,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "53528:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
															"typeString": "struct SimpleSwap.Pool storage pointer"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "53533:8:0",
													"memberName": "reserveB",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "53528:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53507:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1886,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "53560:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53560:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53574:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53552:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "53552:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1893,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "53609:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "53609:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1896,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "53626:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "53626:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "53609:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6971756964697479",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53642:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															},
															"value": "No liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															}
														],
														"id": 1892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53601:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "53601:56:0"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1903,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "53737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1905,
														"indexExpression": {
															"hexValue": "31",
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53737:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1907,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "53763:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1908,
																"name": "reserveIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "53773:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1909,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "53784:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1906,
															"name": "getAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "53750:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53750:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53737:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "53737:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1914,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "53813:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1916,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53821:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "53813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1917,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "53827:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "53813:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f7574707574",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53841:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															},
															"value": "Insufficient output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															}
														],
														"id": 1913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53805:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "53805:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "53934:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "53938:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "53934:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1930,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "53954:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53946:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53946:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1932,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "53961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1923,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "53908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1922,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "53901:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53901:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53917:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "53901:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53901:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "53901:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "54010:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1940,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "54014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1942,
															"indexExpression": {
																"hexValue": "31",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54014:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1936,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "53987:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1935,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "53980:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53980:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53997:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "53980:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53980:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "53980:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "54105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "54126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1948,
																"name": "reserveIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "54148:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1949,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "54160:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "54148:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1951,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "54182:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"baseExpression": {
																	"id": 1952,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "54195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1954,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54203:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "54195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "54182:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "_updateReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "54076:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54076:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "54076:139:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54236:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54240:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1961,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "54248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1962,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "54257:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1963,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "54267:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1964,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "54277:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1966,
															"indexExpression": {
																"hexValue": "31",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54277:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "54231:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54231:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "EmitStatement",
												"src": "54226:62:0"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "52441:446:0",
										"text": " @notice Swaps an exact amount of input tokens for output tokens\n @param amountIn Exact amount of input tokens\n @param amountOutMin Minimum acceptable amount of output tokens\n @param path Array containing [inputToken, outputToken] addresses\n @param to Address to receive output tokens\n @param deadline Transaction expiry timestamp\n @return amounts Array containing [inputAmount, outputAmount]"
									},
									"functionSelector": "38ed1739",
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1826,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1822,
													"src": "53124:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "ensureDeadline",
												"nameLocations": [
													"53109:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1493,
												"src": "53109:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53109:24:0"
										}
									],
									"name": "swapExactTokensForTokens",
									"nameLocation": "52901:24:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1824,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53092:8:0"
									},
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "52943:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "52935:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "52969:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "52961:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "53010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "52991:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1816,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "52991:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1817,
													"nodeType": "ArrayTypeName",
													"src": "52991:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53032:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "53024:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "53052:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "53044:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52925:141:0"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "53168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "53151:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1828,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1829,
													"nodeType": "ArrayTypeName",
													"src": "53151:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53150:26:0"
									},
									"scope": 2394,
									"src": "52892:1403:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "54811:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1982,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "54829:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1983,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "54839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "54829:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4964656e746963616c20746f6b656e73",
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54847:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															},
															"value": "Identical tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															}
														],
														"id": 1981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54821:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1987,
												"nodeType": "ExpressionStatement",
												"src": "54821:45:0"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "54889:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "54877:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
															"typeString": "struct SimpleSwap.Pool"
														},
														"typeName": {
															"id": 1989,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1988,
																"name": "Pool",
																"nameLocations": [
																	"54877:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1427,
																"src": "54877:4:0"
															},
															"referencedDeclaration": 1427,
															"src": "54877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1427_storage_ptr",
																"typeString": "struct SimpleSwap.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1996,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1991,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "54896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool storage ref))"
															}
														},
														"id": 1993,
														"indexExpression": {
															"id": 1992,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "54902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "54896:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pool storage ref)"
														}
													},
													"id": 1995,
													"indexExpression": {
														"id": 1994,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "54910:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "54896:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1427_storage",
														"typeString": "struct SimpleSwap.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54877:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1998,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "54935:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
																			"typeString": "struct SimpleSwap.Pool memory"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54940:8:0",
																	"memberName": "reserveA",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1424,
																	"src": "54935:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54951:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "54935:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2002,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "54956:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
																			"typeString": "struct SimpleSwap.Pool memory"
																		}
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54961:8:0",
																	"memberName": "reserveB",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1426,
																	"src": "54956:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54972:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "54956:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "54935:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6971756964697479",
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54975:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															},
															"value": "No liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															}
														],
														"id": 1997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54927:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "54927:63:0"
											},
											{
												"expression": {
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2010,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "55001:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2011,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "55010:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
																				"typeString": "struct SimpleSwap.Pool memory"
																			}
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "55015:8:0",
																		"memberName": "reserveB",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1426,
																		"src": "55010:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55026:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "55010:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2015,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "55009:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 2016,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "55034:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
																	"typeString": "struct SimpleSwap.Pool memory"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55039:8:0",
															"memberName": "reserveA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1424,
															"src": "55034:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55009:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55001:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "55001:46:0"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "54445:228:0",
										"text": " @notice Gets the price of tokenA in terms of tokenB\n @param tokenA First token address\n @param tokenB Second token address\n @return price Price of tokenA in terms of tokenB (with 18 decimals)"
									},
									"functionSelector": "ac41865a",
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "54687:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1977,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54766:8:0"
									},
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "54704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "54696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "54720:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "54712:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54695:32:0"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "54800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "54792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54791:15:0"
									},
									"scope": 2394,
									"src": "54678:376:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1410
									],
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "55601:193:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2036,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "55619:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55630:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "55619:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55633:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 2035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55611:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "55611:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2043,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "55668:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "55668:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2046,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2029,
																	"src": "55685:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55698:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "55685:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "55668:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6971756964697479",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55701:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															},
															"value": "No liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31",
																"typeString": "literal_string \"No liquidity\""
															}
														],
														"id": 2042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55660:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "55660:56:0"
											},
											{
												"expression": {
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2053,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "55727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2054,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "55740:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2055,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2029,
																		"src": "55751:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "55740:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2057,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "55739:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2058,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "55766:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2059,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "55778:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "55766:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2061,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "55765:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55739:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55727:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "55727:60:0"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "55060:378:0",
										"text": " @notice Calculates output amount for a given input and reserves\n @dev Uses constant product formula: amountOut = (amountIn * reserveOut) / (reserveIn + amountIn)\n @param amountIn Input token amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Expected output token amount"
									},
									"functionSelector": "054d50d4",
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "55452:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2031,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55564:8:0"
									},
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "55482:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "55474:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "55508:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "55500:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "55535:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "55527:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55464:87:0"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "55590:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "55582:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55581:19:0"
									},
									"scope": 2394,
									"src": "55443:351:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "56294:113:0",
										"statements": [
											{
												"expression": {
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2078,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "56305:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2079,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "56313:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 2080,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "56304:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2081,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "56323:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2082,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "56332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "56323:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 2087,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "56385:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2088,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "56393:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2089,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "56384:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "56323:77:0",
														"trueExpression": {
															"components": [
																{
																	"id": 2084,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "56354:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2085,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "56362:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2086,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "56353:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"src": "56304:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "56304:96:0"
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "55948:205:0",
										"text": " @dev Sorts two token addresses\n @param tokenA First token address\n @param tokenB Second token address\n @return token0 Lower address\n @return token1 Higher address"
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortTokens",
									"nameLocation": "56167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "56187:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "56179:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "56203:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "56195:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56178:32:0"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "56266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "56258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "56282:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "56274:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56257:32:0"
									},
									"scope": 2394,
									"src": "56158:249:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "57214:513:0",
										"statements": [
											{
												"assignments": [
													2115
												],
												"declarations": [
													{
														"constant": false,
														"id": 2115,
														"mutability": "mutable",
														"name": "amountBOptimal",
														"nameLocation": "57232:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2166,
														"src": "57224:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2121,
												"initialValue": {
													"arguments": [
														{
															"id": 2117,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "57256:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2118,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "57272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2119,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "57282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2116,
														"name": "_quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "57249:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57249:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57224:67:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2122,
														"name": "amountBOptimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "57306:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2123,
														"name": "amountBDesired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "57324:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57306:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2164,
													"nodeType": "Block",
													"src": "57493:228:0",
													"statements": [
														{
															"assignments": [
																2142
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2142,
																	"mutability": "mutable",
																	"name": "amountAOptimal",
																	"nameLocation": "57515:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2164,
																	"src": "57507:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57507:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2148,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2144,
																		"name": "amountBDesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "57539:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2145,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "57555:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2146,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2105,
																		"src": "57565:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2143,
																	"name": "_quote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "57532:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57532:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57507:67:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2150,
																			"name": "amountAOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "57596:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2151,
																			"name": "amountAMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2101,
																			"src": "57614:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "57596:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742041",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57626:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																			"typeString": "literal_string \"Insufficient A\""
																		},
																		"value": "Insufficient A"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_00c0664002c3a7ab9481655483f753aa6ee21854999370a38d90a0549f0cf8f4",
																			"typeString": "literal_string \"Insufficient A\""
																		}
																	],
																	"id": 2149,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "57588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57588:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "57588:55:0"
														},
														{
															"expression": {
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2156,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "57658:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2157,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "57667:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "57657:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 2159,
																			"name": "amountAOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "57679:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2160,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "57695:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57678:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "57657:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2163,
															"nodeType": "ExpressionStatement",
															"src": "57657:53:0"
														}
													]
												},
												"id": 2165,
												"nodeType": "IfStatement",
												"src": "57302:419:0",
												"trueBody": {
													"id": 2140,
													"nodeType": "Block",
													"src": "57340:147:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"name": "amountBOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "57362:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2127,
																			"name": "amountBMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2103,
																			"src": "57380:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "57362:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742042",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57392:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																			"typeString": "literal_string \"Insufficient B\""
																		},
																		"value": "Insufficient B"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_28ee48a047f51c165a70ae36f179330afc265bf4c05f56e1a1f02c2668dcead2",
																			"typeString": "literal_string \"Insufficient B\""
																		}
																	],
																	"id": 2125,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "57354:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57354:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2131,
															"nodeType": "ExpressionStatement",
															"src": "57354:55:0"
														},
														{
															"expression": {
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2132,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "57424:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2133,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "57433:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2134,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "57423:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 2135,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "57445:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2136,
																			"name": "amountBOptimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "57461:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2137,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57444:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "57423:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2139,
															"nodeType": "ExpressionStatement",
															"src": "57423:53:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "56413:527:0",
										"text": " @dev Calculates optimal deposit amounts to maintain pool ratio\n @param amountADesired Desired amount of tokenA\n @param amountBDesired Desired amount of tokenB\n @param amountAMin Minimum acceptable amount of tokenA\n @param amountBMin Minimum acceptable amount of tokenB\n @param reserveA Current reserve of tokenA\n @param reserveB Current reserve of tokenB\n @return amountA Optimal amount of tokenA to deposit\n @return amountB Optimal amount of tokenB to deposit"
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateOptimalDeposit",
									"nameLocation": "56954:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "56996:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "56988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "57028:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57020:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "57060:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57052:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "57088:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57080:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "57116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "57142:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57134:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56978:178:0"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "57188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "57205:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "57197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57179:34:0"
									},
									"scope": 2394,
									"src": "56945:782:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "58143:119:0",
										"statements": [
											{
												"expression": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2179,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "58153:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2180,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "58166:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2181,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "58175:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "58166:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2183,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "58165:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2184,
															"name": "reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "58190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "58165:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58153:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "58153:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "58215:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "58215:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58230:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58207:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "58207:48:0"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "57733:250:0",
										"text": " @dev Calculates LP tokens to mint based on deposit\n @param amount Deposit amount\n @param reserve Existing reserve amount\n @param totalSupply Current total LP token supply\n @return liquidity LP tokens to mint"
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateLiquidity",
									"nameLocation": "57997:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "58034:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "58026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "58058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "58050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "58083:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "58075:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58016:84:0"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "58132:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "58124:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58123:19:0"
									},
									"scope": 2394,
									"src": "57988:274:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "58751:167:0",
										"statements": [
											{
												"assignments": [
													2211
												],
												"declarations": [
													{
														"constant": false,
														"id": 2211,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "58769:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2233,
														"src": "58761:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2212,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "58784:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58784:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58761:36:0"
											},
											{
												"expression": {
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2215,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "58807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2216,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "58818:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2217,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2201,
																		"src": "58830:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "58818:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "58817:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2220,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "58842:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "58817:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58807:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "58807:47:0"
											},
											{
												"expression": {
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2224,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "58864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2225,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "58875:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2226,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "58887:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "58875:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2228,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "58874:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2229,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "58899:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "58874:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58864:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "58864:47:0"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "58268:299:0",
										"text": " @dev Calculates withdrawal amounts based on LP share\n @param liquidity LP tokens to burn\n @param reserveA Reserve of tokenA\n @param reserveB Reserve of tokenB\n @return amountA Amount of tokenA to withdraw\n @return amountB Amount of tokenB to withdraw"
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateWithdrawalAmounts",
									"nameLocation": "58581:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "58626:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "58618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "58653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "58645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "58679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "58671:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58608:85:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "58725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "58717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "58742:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "58734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58716:34:0"
									},
									"scope": 2394,
									"src": "58572:346:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "59301:71:0",
										"statements": [
											{
												"expression": {
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2246,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "59311:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pool storage ref))"
																}
															},
															"id": 2249,
															"indexExpression": {
																"id": 2247,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "59317:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59311:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1427_storage_$",
																"typeString": "mapping(address => struct SimpleSwap.Pool storage ref)"
															}
														},
														"id": 2250,
														"indexExpression": {
															"id": 2248,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "59325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59311:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_storage",
															"typeString": "struct SimpleSwap.Pool storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2252,
																"name": "newReserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "59340:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2253,
																"name": "newReserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "59353:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2251,
															"name": "Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "59335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Pool_$1427_storage_ptr_$",
																"typeString": "type(struct SimpleSwap.Pool storage pointer)"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59335:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$1427_memory_ptr",
															"typeString": "struct SimpleSwap.Pool memory"
														}
													},
													"src": "59311:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1427_storage",
														"typeString": "struct SimpleSwap.Pool storage ref"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "59311:54:0"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "58924:226:0",
										"text": " @dev Updates pool reserves\n @param tokenA First token address\n @param tokenB Second token address\n @param newReserveA New reserve for tokenA\n @param newReserveB New reserve for tokenB"
									},
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReserves",
									"nameLocation": "59164:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "59197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "59189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "59221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "59213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "newReserveA",
												"nameLocation": "59245:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "59237:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "newReserveB",
												"nameLocation": "59274:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "59266:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59179:112:0"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59301:0:0"
									},
									"scope": 2394,
									"src": "59155:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "59749:161:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59791:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59795:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59791:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2278,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "59811:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "59803:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59803:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2280,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "59818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2271,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "59766:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2270,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "59759:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59759:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59774:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "59759:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59759:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "59759:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59868:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59872:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59868:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "59888:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$2394",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "59880:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59880:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2293,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "59895:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2284,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "59843:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2283,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "59836:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59836:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59851:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "59836:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59836:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "59836:67:0"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "59378:228:0",
										"text": " @dev Transfers both tokens from user to contract\n @param tokenA First token address\n @param tokenB Second token address\n @param amountA Amount of tokenA\n @param amountB Amount of tokenB"
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nameLocation": "59620:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "59653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "59645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "59677:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "59669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "59701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "59693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "59726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "59718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59635:104:0"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59749:0:0"
									},
									"scope": 2394,
									"src": "59611:299:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "60192:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2311,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "60229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2312,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "60233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2308,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "60209:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2307,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "60202:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60202:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60216:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "60202:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60202:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2314,
												"nodeType": "ExpressionStatement",
												"src": "60202:38:0"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "59916:166:0",
										"text": " @dev Safely transfers tokens to recipient\n @param token Token address\n @param to Recipient address\n @param amount Transfer amount"
									},
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "60096:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "60127:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "60119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "60150:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "60142:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "60170:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "60162:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60109:73:0"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60192:0:0"
									},
									"scope": 2394,
									"src": "60087:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "60629:242:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2324,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "60643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "60643:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2360,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "60827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60832:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "60827:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2368,
													"nodeType": "IfStatement",
													"src": "60823:42:0",
													"trueBody": {
														"id": 2367,
														"nodeType": "Block",
														"src": "60835:30:0",
														"statements": [
															{
																"expression": {
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2363,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "60849:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "60853:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "60849:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2366,
																"nodeType": "ExpressionStatement",
																"src": "60849:5:0"
															}
														]
													}
												},
												"id": 2369,
												"nodeType": "IfStatement",
												"src": "60639:226:0",
												"trueBody": {
													"id": 2359,
													"nodeType": "Block",
													"src": "60650:167:0",
													"statements": [
														{
															"expression": {
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2327,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "60664:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2328,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "60668:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2330,
															"nodeType": "ExpressionStatement",
															"src": "60664:5:0"
														},
														{
															"assignments": [
																2332
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2332,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "60691:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2359,
																	"src": "60683:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2331,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "60683:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2338,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2333,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "60695:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "60699:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "60695:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "60695:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "60683:21:0"
														},
														{
															"body": {
																"id": 2357,
																"nodeType": "Block",
																"src": "60732:75:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2342,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "60750:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2343,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2332,
																				"src": "60754:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "60750:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2345,
																		"nodeType": "ExpressionStatement",
																		"src": "60750:5:0"
																	},
																	{
																		"expression": {
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2346,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2332,
																				"src": "60773:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2351,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2349,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2347,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2319,
																									"src": "60778:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2348,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2332,
																									"src": "60782:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "60778:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 2350,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2332,
																								"src": "60786:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "60778:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2352,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "60777:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "60791:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "60777:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "60773:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2356,
																		"nodeType": "ExpressionStatement",
																		"src": "60773:19:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2339,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "60725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2340,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "60729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2358,
															"nodeType": "WhileStatement",
															"src": "60718:89:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "60397:167:0",
										"text": " @dev Calculates square root (for initial liquidity calculation)\n @param y Number to calculate square root of\n @return z Square root of y"
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sqrt",
									"nameLocation": "60578:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "60592:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "60584:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60583:11:0"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "60626:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "60618:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60617:11:0"
									},
									"scope": 2394,
									"src": "60569:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "61269:58:0",
										"statements": [
											{
												"expression": {
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2383,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "61279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2384,
																		"name": "amountA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "61290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2385,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2378,
																		"src": "61300:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "61290:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "61289:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2388,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "61312:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "61289:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "61279:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "61279:41:0"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "60877:248:0",
										"text": " @dev Calculates equivalent token amount to maintain ratio\n @param amountA Amount of tokenA\n @param reserveA Reserve of tokenA\n @param reserveB Reserve of tokenB\n @return amountB Equivalent amount of tokenB"
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_quote",
									"nameLocation": "61139:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "61163:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "61155:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "61188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "61180:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "61214:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "61206:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61145:83:0"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "61260:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "61252:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61251:17:0"
									},
									"scope": 2394,
									"src": "61130:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "43692:17637:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								868
							],
							"usedEvents": [
								11,
								20,
								1450,
								1465,
								1478
							]
						}
					],
					"src": "164:61166:0"
				},
				"id": 0
			}
		}
	}
}